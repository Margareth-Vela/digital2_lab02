

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 10:49:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  000C                     _PIR1bits	set	12
   372  000B                     _INTCONbits	set	11
   373  0009                     _PORTE	set	9
   374  0008                     _PORTD	set	8
   375  0007                     _PORTC	set	7
   376  0005                     _PORTA	set	5
   377  001F                     _ADCON0bits	set	31
   378  001E                     _ADRESH	set	30
   379  0049                     _RE1	set	73
   380  0048                     _RE0	set	72
   381  0066                     _ADIF	set	102
   382  008C                     _PIE1bits	set	140
   383  009F                     _ADCON1bits	set	159
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0087                     _TRISC	set	135
   387  0085                     _TRISA	set	133
   388  008F                     _OSCCONbits	set	143
   389  0188                     _ANSEL	set	392
   390  0189                     _ANSELH	set	393
   391                           
   392                           	psect	cinit
   393  000F                     start_initialization:	
   394                           ; #config settings
   395                           
   396  000F                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   400  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   401  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   402                           
   403                           ; Clear objects allocated to BANK0
   404  0012  1383               	bcf	3,7	;select IRP bank0
   405  0013  3034               	movlw	low __pbssBANK0
   406  0014  0084               	movwf	4
   407  0015  3044               	movlw	low (__pbssBANK0+16)
   408  0016  120A  118A  242D  120A  118A  	fcall	clear_ram0
   409  001B                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  001B                     __end_of__initialization:
   413  001B  0183               	clrf	3
   414  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417  0078                     __pbssCOMMON:
   418  0078                     _RC_temp:
   419  0078                     	ds	1
   420  0079                     _flag:
   421  0079                     	ds	1
   422  007A                     _var_temp:
   423  007A                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  0034                     __pbssBANK0:
   427  0034                     _a:
   428  0034                     	ds	2
   429  0036                     _flag_1:
   430  0036                     	ds	1
   431  0037                     _display_decimal_2_s3:
   432  0037                     	ds	1
   433  0038                     _display_decimal_s3:
   434  0038                     	ds	1
   435  0039                     _display_unidad_s3:
   436  0039                     	ds	1
   437  003A                     _display_decimal_2_s2:
   438  003A                     	ds	1
   439  003B                     _display_decimal_s2:
   440  003B                     	ds	1
   441  003C                     _display_unidad_s2:
   442  003C                     	ds	1
   443  003D                     _display_decima1_2:
   444  003D                     	ds	1
   445  003E                     _display_decimal:
   446  003E                     	ds	1
   447  003F                     _display_unidad:
   448  003F                     	ds	1
   449  0040                     _cont:
   450  0040                     	ds	1
   451  0041                     _contador:
   452  0041                     	ds	1
   453  0042                     _POT2:
   454  0042                     	ds	1
   455  0043                     _POT1:
   456  0043                     	ds	1
   457                           
   458                           	psect	clrtext
   459  042D                     clear_ram0:	
   460                           ;	Called with FSR containing the base address, and
   461                           ;	W with the last address+1
   462                           
   463  042D  0064               	clrwdt	;clear the watchdog before getting into this loop
   464  042E                     clrloop0:
   465  042E  0180               	clrf	0	;clear RAM location pointed to by FSR
   466  042F  0A84               	incf	4,f	;increment pointer
   467  0430  0604               	xorwf	4,w	;XOR with final address
   468  0431  1903               	btfsc	3,2	;have we reached the end yet?
   469  0432  3400               	retlw	0	;all done for this memory range, return
   470  0433  0604               	xorwf	4,w	;XOR again to restore value
   471  0434  2C2E               	goto	clrloop0	;do the next byte
   472                           
   473                           	psect	cstackCOMMON
   474  0070                     __pcstackCOMMON:
   475  0070                     ?_setup:
   476  0070                     ?_Lcd_Write_Char:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_Lcd_Init:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_main:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_isr:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ??_isr:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_Lcd_Port:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_Lcd_Cmd:	
   495                           ; 1 bytes @ 0x0
   496                           
   497                           
   498                           ; 1 bytes @ 0x0
   499  0070                     	ds	3
   500  0073                     ??_Lcd_Port:
   501  0073                     ?___bmul:	
   502                           ; 1 bytes @ 0x3
   503                           
   504  0073                     ?___wmul:	
   505                           ; 1 bytes @ 0x3
   506                           
   507  0073                     Lcd_Port@a:	
   508                           ; 2 bytes @ 0x3
   509                           
   510  0073                     ___bmul@multiplicand:	
   511                           ; 1 bytes @ 0x3
   512                           
   513  0073                     ___wmul@multiplier:	
   514                           ; 1 bytes @ 0x3
   515                           
   516                           
   517                           ; 2 bytes @ 0x3
   518  0073                     	ds	1
   519  0074                     ??_Lcd_Write_Char:
   520  0074                     ??_Lcd_Cmd:	
   521                           ; 1 bytes @ 0x4
   522                           
   523  0074                     ??___bmul:	
   524                           ; 1 bytes @ 0x4
   525                           
   526                           
   527                           ; 1 bytes @ 0x4
   528  0074                     	ds	1
   529  0075                     Lcd_Write_Char@a:
   530  0075                     ___bmul@product:	
   531                           ; 1 bytes @ 0x5
   532                           
   533  0075                     ___wmul@multiplicand:	
   534                           ; 1 bytes @ 0x5
   535                           
   536                           
   537                           ; 2 bytes @ 0x5
   538  0075                     	ds	1
   539  0076                     Lcd_Cmd@a:
   540  0076                     ___bmul@multiplier:	
   541                           ; 1 bytes @ 0x6
   542                           
   543                           
   544                           ; 1 bytes @ 0x6
   545  0076                     	ds	1
   546  0077                     ??_setup:
   547  0077                     ?_Lcd_Set_Cursor:	
   548                           ; 1 bytes @ 0x7
   549                           
   550  0077                     ??___wmul:	
   551                           ; 1 bytes @ 0x7
   552                           
   553  0077                     ??___awdiv:	
   554                           ; 1 bytes @ 0x7
   555                           
   556  0077                     Lcd_Set_Cursor@b:	
   557                           ; 1 bytes @ 0x7
   558                           
   559                           
   560                           ; 1 bytes @ 0x7
   561  0077                     	ds	1
   562                           
   563                           	psect	cstackBANK0
   564  0020                     __pcstackBANK0:
   565  0020                     ??_Lcd_Set_Cursor:
   566  0020                     ??_Lcd_Init:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0020                     ___wmul@product:	
   570                           ; 1 bytes @ 0x0
   571                           
   572                           
   573                           ; 2 bytes @ 0x0
   574  0020                     	ds	1
   575  0021                     Lcd_Set_Cursor@a:
   576                           
   577                           ; 1 bytes @ 0x1
   578  0021                     	ds	1
   579  0022                     ?___awdiv:
   580  0022                     Lcd_Set_Cursor@temp:	
   581                           ; 2 bytes @ 0x2
   582                           
   583  0022                     ___awdiv@divisor:	
   584                           ; 1 bytes @ 0x2
   585                           
   586                           
   587                           ; 2 bytes @ 0x2
   588  0022                     	ds	2
   589  0024                     ___awdiv@dividend:
   590                           
   591                           ; 2 bytes @ 0x4
   592  0024                     	ds	2
   593  0026                     ___awdiv@counter:
   594                           
   595                           ; 1 bytes @ 0x6
   596  0026                     	ds	1
   597  0027                     ___awdiv@sign:
   598                           
   599                           ; 1 bytes @ 0x7
   600  0027                     	ds	1
   601  0028                     ___awdiv@quotient:
   602                           
   603                           ; 2 bytes @ 0x8
   604  0028                     	ds	2
   605  002A                     ??_main:
   606                           
   607                           ; 1 bytes @ 0xA
   608  002A                     	ds	8
   609  0032                     _main$944:
   610                           
   611                           ; 2 bytes @ 0x12
   612  0032                     	ds	2
   613                           
   614                           	psect	maintext
   615  001F                     __pmaintext:	
   616 ;;
   617 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   618 ;;
   619 ;; *************** function _main *****************
   620 ;; Defined at:
   621 ;;		line 90 in file "Lab02_main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : B00/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       2       0       0       0
   637 ;;      Temps:          0       8       0       0       0
   638 ;;      Totals:         0      10       0       0       0
   639 ;;Total ram usage:       10 bytes
   640 ;; Hardware stack levels required when called:    5
   641 ;; This function calls:
   642 ;;		_Lcd_Set_Cursor
   643 ;;		_Lcd_Write_Char
   644 ;;		___awdiv
   645 ;;		___bmul
   646 ;;		___wmul
   647 ;;		_setup
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _main
   655  001F                     _main:
   656  001F                     l1386:	
   657                           ;incstack = 0
   658                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   659                           
   660                           
   661                           ;Lab02_main.c: 91:     Lcd_Write_Char(display_unidad_s3 +48);
   662  001F  120A  118A  2332  120A  118A  	fcall	_setup
   663  0024                     l87:	
   664                           ;Lab02_main.c: 92:     Lcd_Set_Cursor(2,15);
   665                           
   666                           
   667                           ;Lab02_main.c: 95:     Lcd_Write_Char(display_decimal_2_s3 + 48);
   668  0024  3033               	movlw	51
   669  0025  1283               	bcf	3,5	;RP0=0, select bank0
   670  0026  1303               	bcf	3,6	;RP1=0, select bank0
   671  0027  00A2               	movwf	___awdiv@divisor
   672  0028  3000               	movlw	0
   673  0029  00A3               	movwf	___awdiv@divisor+1
   674  002A  0843               	movf	_POT1,w
   675  002B  00AA               	movwf	??_main
   676  002C  01AB               	clrf	??_main+1
   677  002D  082A               	movf	??_main,w
   678  002E  00A4               	movwf	___awdiv@dividend
   679  002F  082B               	movf	??_main+1,w
   680  0030  00A5               	movwf	___awdiv@dividend+1
   681  0031  120A  118A  226C  120A  118A  	fcall	___awdiv
   682  0036  1283               	bcf	3,5	;RP0=0, select bank0
   683  0037  1303               	bcf	3,6	;RP1=0, select bank0
   684  0038  0822               	movf	?___awdiv,w
   685  0039  00AC               	movwf	??_main+2
   686  003A  082C               	movf	??_main+2,w
   687  003B  00BF               	movwf	_display_unidad
   688                           
   689                           ;Lab02_main.c: 96:     return;}
   690  003C  3033               	movlw	51
   691  003D  00A2               	movwf	___awdiv@divisor
   692  003E  3000               	movlw	0
   693  003F  00A3               	movwf	___awdiv@divisor+1
   694  0040  0843               	movf	_POT1,w
   695  0041  00AA               	movwf	??_main
   696  0042  01AB               	clrf	??_main+1
   697  0043  082A               	movf	??_main,w
   698  0044  00F3               	movwf	___wmul@multiplier
   699  0045  082B               	movf	??_main+1,w
   700  0046  00F4               	movwf	___wmul@multiplier+1
   701  0047  3064               	movlw	100
   702  0048  00F5               	movwf	___wmul@multiplicand
   703  0049  3000               	movlw	0
   704  004A  00F6               	movwf	___wmul@multiplicand+1
   705  004B  120A  118A  236E  120A  118A  	fcall	___wmul
   706  0050  0874               	movf	?___wmul+1,w
   707  0051  1283               	bcf	3,5	;RP0=0, select bank0
   708  0052  1303               	bcf	3,6	;RP1=0, select bank0
   709  0053  00A5               	movwf	___awdiv@dividend+1
   710  0054  0873               	movf	?___wmul,w
   711  0055  00A4               	movwf	___awdiv@dividend
   712  0056  120A  118A  226C  120A  118A  	fcall	___awdiv
   713  005B  1283               	bcf	3,5	;RP0=0, select bank0
   714  005C  1303               	bcf	3,6	;RP1=0, select bank0
   715  005D  0822               	movf	?___awdiv,w
   716  005E  00AC               	movwf	??_main+2
   717  005F  0823               	movf	?___awdiv+1,w
   718  0060  00AD               	movwf	??_main+3
   719  0061  083F               	movf	_display_unidad,w
   720  0062  00AE               	movwf	??_main+4
   721  0063  01AF               	clrf	??_main+5
   722  0064  082E               	movf	??_main+4,w
   723  0065  00F3               	movwf	___wmul@multiplier
   724  0066  082F               	movf	??_main+5,w
   725  0067  00F4               	movwf	___wmul@multiplier+1
   726  0068  309C               	movlw	156
   727  0069  00F5               	movwf	___wmul@multiplicand
   728  006A  30FF               	movlw	255
   729  006B  00F6               	movwf	___wmul@multiplicand+1
   730  006C  120A  118A  236E  120A  118A  	fcall	___wmul
   731  0071  0873               	movf	?___wmul,w
   732  0072  1283               	bcf	3,5	;RP0=0, select bank0
   733  0073  1303               	bcf	3,6	;RP1=0, select bank0
   734  0074  072C               	addwf	??_main+2,w
   735  0075  00B2               	movwf	_main$944
   736  0076  0874               	movf	?___wmul+1,w
   737  0077  1803               	skipnc
   738  0078  0A74               	incf	?___wmul+1,w
   739  0079  072D               	addwf	??_main+3,w
   740  007A  00B3               	movwf	_main$944+1
   741                           
   742                           ;Lab02_main.c: 96:     return;}
   743  007B  300A               	movlw	10
   744  007C  00A2               	movwf	___awdiv@divisor
   745  007D  3000               	movlw	0
   746  007E  00A3               	movwf	___awdiv@divisor+1
   747  007F  0833               	movf	_main$944+1,w
   748  0080  00A5               	movwf	___awdiv@dividend+1
   749  0081  0832               	movf	_main$944,w
   750  0082  00A4               	movwf	___awdiv@dividend
   751  0083  120A  118A  226C  120A  118A  	fcall	___awdiv
   752  0088  1283               	bcf	3,5	;RP0=0, select bank0
   753  0089  1303               	bcf	3,6	;RP1=0, select bank0
   754  008A  0822               	movf	?___awdiv,w
   755  008B  00AA               	movwf	??_main
   756  008C  082A               	movf	??_main,w
   757  008D  00BE               	movwf	_display_decimal
   758                           
   759                           ;Lab02_main.c: 97: 
   760  008E  3033               	movlw	51
   761  008F  00A2               	movwf	___awdiv@divisor
   762  0090  3000               	movlw	0
   763  0091  00A3               	movwf	___awdiv@divisor+1
   764  0092  0843               	movf	_POT1,w
   765  0093  00AA               	movwf	??_main
   766  0094  01AB               	clrf	??_main+1
   767  0095  082A               	movf	??_main,w
   768  0096  00F3               	movwf	___wmul@multiplier
   769  0097  082B               	movf	??_main+1,w
   770  0098  00F4               	movwf	___wmul@multiplier+1
   771  0099  3064               	movlw	100
   772  009A  00F5               	movwf	___wmul@multiplicand
   773  009B  3000               	movlw	0
   774  009C  00F6               	movwf	___wmul@multiplicand+1
   775  009D  120A  118A  236E  120A  118A  	fcall	___wmul
   776  00A2  0874               	movf	?___wmul+1,w
   777  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   778  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   779  00A5  00A5               	movwf	___awdiv@dividend+1
   780  00A6  0873               	movf	?___wmul,w
   781  00A7  00A4               	movwf	___awdiv@dividend
   782  00A8  120A  118A  226C  120A  118A  	fcall	___awdiv
   783  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   784  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   785  00AF  0822               	movf	?___awdiv,w
   786  00B0  00AC               	movwf	??_main+2
   787  00B1  0823               	movf	?___awdiv+1,w
   788  00B2  00AD               	movwf	??_main+3
   789  00B3  309C               	movlw	156
   790  00B4  00AE               	movwf	??_main+4
   791  00B5  082E               	movf	??_main+4,w
   792  00B6  00F3               	movwf	___bmul@multiplicand
   793  00B7  083F               	movf	_display_unidad,w
   794  00B8  120A  118A  2418  120A  118A  	fcall	___bmul
   795  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   796  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   797  00BF  00AF               	movwf	??_main+5
   798  00C0  30F6               	movlw	246
   799  00C1  00B0               	movwf	??_main+6
   800  00C2  0830               	movf	??_main+6,w
   801  00C3  00F3               	movwf	___bmul@multiplicand
   802  00C4  083E               	movf	_display_decimal,w
   803  00C5  120A  118A  2418  120A  118A  	fcall	___bmul
   804  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   805  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   806  00CC  072F               	addwf	??_main+5,w
   807  00CD  072C               	addwf	??_main+2,w
   808  00CE  00B1               	movwf	??_main+7
   809  00CF  0831               	movf	??_main+7,w
   810  00D0  00BD               	movwf	_display_decima1_2
   811                           
   812                           ;Lab02_main.c: 99: 
   813  00D1  3033               	movlw	51
   814  00D2  00A2               	movwf	___awdiv@divisor
   815  00D3  3000               	movlw	0
   816  00D4  00A3               	movwf	___awdiv@divisor+1
   817  00D5  0842               	movf	_POT2,w
   818  00D6  00AA               	movwf	??_main
   819  00D7  01AB               	clrf	??_main+1
   820  00D8  082A               	movf	??_main,w
   821  00D9  00A4               	movwf	___awdiv@dividend
   822  00DA  082B               	movf	??_main+1,w
   823  00DB  00A5               	movwf	___awdiv@dividend+1
   824  00DC  120A  118A  226C  120A  118A  	fcall	___awdiv
   825  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   826  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   827  00E3  0822               	movf	?___awdiv,w
   828  00E4  00AC               	movwf	??_main+2
   829  00E5  082C               	movf	??_main+2,w
   830  00E6  00BC               	movwf	_display_unidad_s2
   831                           
   832                           ;Lab02_main.c: 100: 
   833  00E7  3033               	movlw	51
   834  00E8  00A2               	movwf	___awdiv@divisor
   835  00E9  3000               	movlw	0
   836  00EA  00A3               	movwf	___awdiv@divisor+1
   837  00EB  0842               	movf	_POT2,w
   838  00EC  00AA               	movwf	??_main
   839  00ED  01AB               	clrf	??_main+1
   840  00EE  082A               	movf	??_main,w
   841  00EF  00F3               	movwf	___wmul@multiplier
   842  00F0  082B               	movf	??_main+1,w
   843  00F1  00F4               	movwf	___wmul@multiplier+1
   844  00F2  3064               	movlw	100
   845  00F3  00F5               	movwf	___wmul@multiplicand
   846  00F4  3000               	movlw	0
   847  00F5  00F6               	movwf	___wmul@multiplicand+1
   848  00F6  120A  118A  236E  120A  118A  	fcall	___wmul
   849  00FB  0874               	movf	?___wmul+1,w
   850  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   851  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   852  00FE  00A5               	movwf	___awdiv@dividend+1
   853  00FF  0873               	movf	?___wmul,w
   854  0100  00A4               	movwf	___awdiv@dividend
   855  0101  120A  118A  226C  120A  118A  	fcall	___awdiv
   856  0106  1283               	bcf	3,5	;RP0=0, select bank0
   857  0107  1303               	bcf	3,6	;RP1=0, select bank0
   858  0108  0822               	movf	?___awdiv,w
   859  0109  00AC               	movwf	??_main+2
   860  010A  0823               	movf	?___awdiv+1,w
   861  010B  00AD               	movwf	??_main+3
   862  010C  083C               	movf	_display_unidad_s2,w
   863  010D  00AE               	movwf	??_main+4
   864  010E  01AF               	clrf	??_main+5
   865  010F  082E               	movf	??_main+4,w
   866  0110  00F3               	movwf	___wmul@multiplier
   867  0111  082F               	movf	??_main+5,w
   868  0112  00F4               	movwf	___wmul@multiplier+1
   869  0113  309C               	movlw	156
   870  0114  00F5               	movwf	___wmul@multiplicand
   871  0115  30FF               	movlw	255
   872  0116  00F6               	movwf	___wmul@multiplicand+1
   873  0117  120A  118A  236E  120A  118A  	fcall	___wmul
   874  011C  0873               	movf	?___wmul,w
   875  011D  1283               	bcf	3,5	;RP0=0, select bank0
   876  011E  1303               	bcf	3,6	;RP1=0, select bank0
   877  011F  072C               	addwf	??_main+2,w
   878  0120  00B2               	movwf	_main$944
   879  0121  0874               	movf	?___wmul+1,w
   880  0122  1803               	skipnc
   881  0123  0A74               	incf	?___wmul+1,w
   882  0124  072D               	addwf	??_main+3,w
   883  0125  00B3               	movwf	_main$944+1
   884                           
   885                           ;Lab02_main.c: 100: 
   886  0126  300A               	movlw	10
   887  0127  00A2               	movwf	___awdiv@divisor
   888  0128  3000               	movlw	0
   889  0129  00A3               	movwf	___awdiv@divisor+1
   890  012A  0833               	movf	_main$944+1,w
   891  012B  00A5               	movwf	___awdiv@dividend+1
   892  012C  0832               	movf	_main$944,w
   893  012D  00A4               	movwf	___awdiv@dividend
   894  012E  120A  118A  226C  120A  118A  	fcall	___awdiv
   895  0133  1283               	bcf	3,5	;RP0=0, select bank0
   896  0134  1303               	bcf	3,6	;RP1=0, select bank0
   897  0135  0822               	movf	?___awdiv,w
   898  0136  00AA               	movwf	??_main
   899  0137  082A               	movf	??_main,w
   900  0138  00BB               	movwf	_display_decimal_s2
   901                           
   902                           ;Lab02_main.c: 101: 
   903  0139  3033               	movlw	51
   904  013A  00A2               	movwf	___awdiv@divisor
   905  013B  3000               	movlw	0
   906  013C  00A3               	movwf	___awdiv@divisor+1
   907  013D  0842               	movf	_POT2,w
   908  013E  00AA               	movwf	??_main
   909  013F  01AB               	clrf	??_main+1
   910  0140  082A               	movf	??_main,w
   911  0141  00F3               	movwf	___wmul@multiplier
   912  0142  082B               	movf	??_main+1,w
   913  0143  00F4               	movwf	___wmul@multiplier+1
   914  0144  3064               	movlw	100
   915  0145  00F5               	movwf	___wmul@multiplicand
   916  0146  3000               	movlw	0
   917  0147  00F6               	movwf	___wmul@multiplicand+1
   918  0148  120A  118A  236E  120A  118A  	fcall	___wmul
   919  014D  0874               	movf	?___wmul+1,w
   920  014E  1283               	bcf	3,5	;RP0=0, select bank0
   921  014F  1303               	bcf	3,6	;RP1=0, select bank0
   922  0150  00A5               	movwf	___awdiv@dividend+1
   923  0151  0873               	movf	?___wmul,w
   924  0152  00A4               	movwf	___awdiv@dividend
   925  0153  120A  118A  226C  120A  118A  	fcall	___awdiv
   926  0158  1283               	bcf	3,5	;RP0=0, select bank0
   927  0159  1303               	bcf	3,6	;RP1=0, select bank0
   928  015A  0822               	movf	?___awdiv,w
   929  015B  00AC               	movwf	??_main+2
   930  015C  0823               	movf	?___awdiv+1,w
   931  015D  00AD               	movwf	??_main+3
   932  015E  309C               	movlw	156
   933  015F  00AE               	movwf	??_main+4
   934  0160  082E               	movf	??_main+4,w
   935  0161  00F3               	movwf	___bmul@multiplicand
   936  0162  083C               	movf	_display_unidad_s2,w
   937  0163  120A  118A  2418  120A  118A  	fcall	___bmul
   938  0168  1283               	bcf	3,5	;RP0=0, select bank0
   939  0169  1303               	bcf	3,6	;RP1=0, select bank0
   940  016A  00AF               	movwf	??_main+5
   941  016B  30F6               	movlw	246
   942  016C  00B0               	movwf	??_main+6
   943  016D  0830               	movf	??_main+6,w
   944  016E  00F3               	movwf	___bmul@multiplicand
   945  016F  083B               	movf	_display_decimal_s2,w
   946  0170  120A  118A  2418  120A  118A  	fcall	___bmul
   947  0175  1283               	bcf	3,5	;RP0=0, select bank0
   948  0176  1303               	bcf	3,6	;RP1=0, select bank0
   949  0177  072F               	addwf	??_main+5,w
   950  0178  072C               	addwf	??_main+2,w
   951  0179  00B1               	movwf	??_main+7
   952  017A  0831               	movf	??_main+7,w
   953  017B  00BA               	movwf	_display_decimal_2_s2
   954  017C                     l1388:
   955                           
   956                           ;Lab02_main.c: 103: void __attribute__((picinterrupt(("")))) isr(void){
   957  017C  01B9               	clrf	_display_unidad_s3
   958  017D                     l1390:
   959                           
   960                           ;Lab02_main.c: 106: 
   961  017D  300A               	movlw	10
   962  017E  023E               	subwf	_display_decimal,w
   963  017F  1C03               	skipc
   964  0180  2982               	goto	u631
   965  0181  2983               	goto	u630
   966  0182                     u631:
   967  0182  2987               	goto	l88
   968  0183                     u630:
   969  0183                     l1392:
   970                           
   971                           ;Lab02_main.c: 107: 
   972  0183  3009               	movlw	9
   973  0184  00AA               	movwf	??_main
   974  0185  082A               	movf	??_main,w
   975  0186  00BE               	movwf	_display_decimal
   976  0187                     l88:	
   977                           ;Lab02_main.c: 108:         if (flag == 1){
   978                           
   979                           
   980                           ;Lab02_main.c: 109:             POT1 = ADRESH;
   981  0187  300A               	movlw	10
   982  0188  023D               	subwf	_display_decima1_2,w
   983  0189  1C03               	skipc
   984  018A  298C               	goto	u641
   985  018B  298D               	goto	u640
   986  018C                     u641:
   987  018C  2991               	goto	l89
   988  018D                     u640:
   989  018D                     l1394:
   990                           
   991                           ;Lab02_main.c: 110:             ADCON0bits.CHS0 = 1;
   992  018D  3009               	movlw	9
   993  018E  00AA               	movwf	??_main
   994  018F  082A               	movf	??_main,w
   995  0190  00BD               	movwf	_display_decima1_2
   996  0191                     l89:	
   997                           ;Lab02_main.c: 111:             flag = 0;
   998                           
   999                           
  1000                           ;Lab02_main.c: 112:         } else{
  1001  0191  300A               	movlw	10
  1002  0192  023B               	subwf	_display_decimal_s2,w
  1003  0193  1C03               	skipc
  1004  0194  2996               	goto	u651
  1005  0195  2997               	goto	u650
  1006  0196                     u651:
  1007  0196  299B               	goto	l90
  1008  0197                     u650:
  1009  0197                     l1396:
  1010                           
  1011                           ;Lab02_main.c: 113:             POT2 = ADRESH;
  1012  0197  3009               	movlw	9
  1013  0198  00AA               	movwf	??_main
  1014  0199  082A               	movf	??_main,w
  1015  019A  00BB               	movwf	_display_decimal_s2
  1016  019B                     l90:	
  1017                           ;Lab02_main.c: 114:             ADCON0bits.CHS0 = 0;
  1018                           
  1019                           
  1020                           ;Lab02_main.c: 115:             flag = 1;
  1021  019B  300A               	movlw	10
  1022  019C  023A               	subwf	_display_decimal_2_s2,w
  1023  019D  1C03               	skipc
  1024  019E  29A0               	goto	u661
  1025  019F  29A1               	goto	u660
  1026  01A0                     u661:
  1027  01A0  29A5               	goto	l91
  1028  01A1                     u660:
  1029  01A1                     l1398:
  1030                           
  1031                           ;Lab02_main.c: 116:         }
  1032  01A1  3009               	movlw	9
  1033  01A2  00AA               	movwf	??_main
  1034  01A3  082A               	movf	??_main,w
  1035  01A4  00BA               	movwf	_display_decimal_2_s2
  1036  01A5                     l91:	
  1037                           ;Lab02_main.c: 117: 
  1038                           
  1039                           
  1040                           ;Lab02_main.c: 119:         _delay((unsigned long)((60)*(8000000/4000000.0)));
  1041  01A5  3006               	movlw	6
  1042  01A6  023F               	subwf	_display_unidad,w
  1043  01A7  1C03               	skipc
  1044  01A8  29AA               	goto	u671
  1045  01A9  29AB               	goto	u670
  1046  01AA                     u671:
  1047  01AA  29AF               	goto	l92
  1048  01AB                     u670:
  1049  01AB                     l1400:
  1050                           
  1051                           ;Lab02_main.c: 120:         ADCON0bits.GO = 1;
  1052  01AB  3005               	movlw	5
  1053  01AC  00AA               	movwf	??_main
  1054  01AD  082A               	movf	??_main,w
  1055  01AE  00BF               	movwf	_display_unidad
  1056  01AF                     l92:	
  1057                           ;Lab02_main.c: 121:     }
  1058                           
  1059                           
  1060                           ;Lab02_main.c: 122: 
  1061  01AF  3006               	movlw	6
  1062  01B0  023C               	subwf	_display_unidad_s2,w
  1063  01B1  1C03               	skipc
  1064  01B2  29B4               	goto	u681
  1065  01B3  29B5               	goto	u680
  1066  01B4                     u681:
  1067  01B4  29B9               	goto	l1406
  1068  01B5                     u680:
  1069  01B5                     l1402:
  1070                           
  1071                           ;Lab02_main.c: 123:     return;
  1072  01B5  3005               	movlw	5
  1073  01B6  00AA               	movwf	??_main
  1074  01B7  082A               	movf	??_main,w
  1075  01B8  00BF               	movwf	_display_unidad
  1076  01B9                     l1406:
  1077                           
  1078                           ;Lab02_main.c: 130: 
  1079  01B9  01F7               	clrf	Lcd_Set_Cursor@b
  1080  01BA  0AF7               	incf	Lcd_Set_Cursor@b,f
  1081  01BB  3002               	movlw	2
  1082  01BC  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1083  01C1                     l1408:
  1084                           
  1085                           ;Lab02_main.c: 131: 
  1086  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1087  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1088  01C3  083F               	movf	_display_unidad,w
  1089  01C4  3E30               	addlw	48
  1090  01C5  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1091  01CA                     l1410:
  1092                           
  1093                           ;Lab02_main.c: 132:     OSCCONbits.IRCF2 = 1;
  1094  01CA  3003               	movlw	3
  1095  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1096  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1097  01CD  00AA               	movwf	??_main
  1098  01CE  082A               	movf	??_main,w
  1099  01CF  00F7               	movwf	Lcd_Set_Cursor@b
  1100  01D0  3002               	movlw	2
  1101  01D1  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1102  01D6                     l1412:
  1103                           
  1104                           ;Lab02_main.c: 133:     OSCCONbits.IRCF1 = 1;
  1105  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1106  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1107  01D8  083E               	movf	_display_decimal,w
  1108  01D9  3E30               	addlw	48
  1109  01DA  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1110  01DF                     l1414:
  1111                           
  1112                           ;Lab02_main.c: 134:     OSCCONbits.IRCF0 = 1;
  1113  01DF  3004               	movlw	4
  1114  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1115  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1116  01E2  00AA               	movwf	??_main
  1117  01E3  082A               	movf	??_main,w
  1118  01E4  00F7               	movwf	Lcd_Set_Cursor@b
  1119  01E5  3002               	movlw	2
  1120  01E6  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1121  01EB                     l1416:
  1122                           
  1123                           ;Lab02_main.c: 135:     OSCCONbits.SCS = 1;
  1124  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1125  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1126  01ED  083D               	movf	_display_decima1_2,w
  1127  01EE  3E30               	addlw	48
  1128  01EF  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1129  01F4                     l1418:
  1130                           
  1131                           ;Lab02_main.c: 138:     ANSELH = 0x00;
  1132  01F4  3007               	movlw	7
  1133  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1134  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1135  01F7  00AA               	movwf	??_main
  1136  01F8  082A               	movf	??_main,w
  1137  01F9  00F7               	movwf	Lcd_Set_Cursor@b
  1138  01FA  3002               	movlw	2
  1139  01FB  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1140  0200                     l1420:
  1141                           
  1142                           ;Lab02_main.c: 139:     ANSEL = 0x03;
  1143  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0202  083C               	movf	_display_unidad_s2,w
  1146  0203  3E30               	addlw	48
  1147  0204  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1148  0209                     l1422:
  1149                           
  1150                           ;Lab02_main.c: 140: 
  1151  0209  3009               	movlw	9
  1152  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1153  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1154  020C  00AA               	movwf	??_main
  1155  020D  082A               	movf	??_main,w
  1156  020E  00F7               	movwf	Lcd_Set_Cursor@b
  1157  020F  3002               	movlw	2
  1158  0210  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1159  0215                     l1424:
  1160                           
  1161                           ;Lab02_main.c: 141:     TRISA = 0x03;
  1162  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0217  083B               	movf	_display_decimal_s2,w
  1165  0218  3E30               	addlw	48
  1166  0219  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1167  021E                     l1426:
  1168                           
  1169                           ;Lab02_main.c: 142:     TRISC = 0x00;
  1170  021E  300A               	movlw	10
  1171  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0221  00AA               	movwf	??_main
  1174  0222  082A               	movf	??_main,w
  1175  0223  00F7               	movwf	Lcd_Set_Cursor@b
  1176  0224  3002               	movlw	2
  1177  0225  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1178  022A                     l1428:
  1179                           
  1180                           ;Lab02_main.c: 143:     TRISD = 0x00;
  1181  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1182  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1183  022C  083A               	movf	_display_decimal_2_s2,w
  1184  022D  3E30               	addlw	48
  1185  022E  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1186  0233                     l1430:
  1187                           
  1188                           ;Lab02_main.c: 146:     PORTA = 0x00;
  1189  0233  300D               	movlw	13
  1190  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0236  00AA               	movwf	??_main
  1193  0237  082A               	movf	??_main,w
  1194  0238  00F7               	movwf	Lcd_Set_Cursor@b
  1195  0239  3002               	movlw	2
  1196  023A  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1197  023F                     l1432:
  1198                           
  1199                           ;Lab02_main.c: 147:     PORTC = 0x00;
  1200  023F  3030               	movlw	48
  1201  0240  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1202  0245                     l1434:
  1203                           
  1204                           ;Lab02_main.c: 148:     PORTD = 0x00;
  1205  0245  300F               	movlw	15
  1206  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0248  00AA               	movwf	??_main
  1209  0249  082A               	movf	??_main,w
  1210  024A  00F7               	movwf	Lcd_Set_Cursor@b
  1211  024B  3002               	movlw	2
  1212  024C  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1213  0251                     l1436:
  1214                           
  1215                           ;Lab02_main.c: 149:     PORTE = 0x00;
  1216  0251  3030               	movlw	48
  1217  0252  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1218  0257                     l1438:
  1219                           
  1220                           ;Lab02_main.c: 150: 
  1221  0257  3010               	movlw	16
  1222  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1224  025A  00AA               	movwf	??_main
  1225  025B  082A               	movf	??_main,w
  1226  025C  00F7               	movwf	Lcd_Set_Cursor@b
  1227  025D  3002               	movlw	2
  1228  025E  120A  118A  23C2  120A  118A  	fcall	_Lcd_Set_Cursor
  1229  0263                     l1440:
  1230                           
  1231                           ;Lab02_main.c: 151: 
  1232  0263  3030               	movlw	48
  1233  0264  120A  118A  2402  120A  118A  	fcall	_Lcd_Write_Char
  1234  0269                     l95:
  1235  0269  120A  118A  280C   	ljmp	start
  1236  026C                     __end_of_main:
  1237                           
  1238                           	psect	text1
  1239  0332                     __ptext1:	
  1240 ;; *************** function _setup *****************
  1241 ;; Defined at:
  1242 ;;		line 185 in file "Lab02_main.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0, pclath, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         0       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0
  1258 ;;      Temps:          1       0       0       0       0
  1259 ;;      Totals:         1       0       0       0       0
  1260 ;;Total ram usage:        1 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    4
  1263 ;; This function calls:
  1264 ;;		_Lcd_Init
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _setup
  1272  0332                     _setup:
  1273  0332                     l1312:	
  1274                           ;incstack = 0
  1275                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1276                           
  1277  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1278  0333  1303               	bcf	3,6	;RP1=0, select bank1
  1279  0334  170F               	bsf	15,6	;volatile
  1280  0335  168F               	bsf	15,5	;volatile
  1281  0336  160F               	bsf	15,4	;volatile
  1282  0337  140F               	bsf	15,0	;volatile
  1283  0338                     l1314:
  1284  0338  1683               	bsf	3,5	;RP0=1, select bank3
  1285  0339  1703               	bsf	3,6	;RP1=1, select bank3
  1286  033A  0189               	clrf	9	;volatile
  1287  033B                     l1316:
  1288  033B  3003               	movlw	3
  1289  033C  0088               	movwf	8	;volatile
  1290  033D                     l1318:
  1291  033D  3003               	movlw	3
  1292  033E  1683               	bsf	3,5	;RP0=1, select bank1
  1293  033F  1303               	bcf	3,6	;RP1=0, select bank1
  1294  0340  0085               	movwf	5	;volatile
  1295  0341  0187               	clrf	7	;volatile
  1296  0342  0188               	clrf	8	;volatile
  1297  0343  0189               	clrf	9	;volatile
  1298  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0346  0185               	clrf	5	;volatile
  1301  0347  0187               	clrf	7	;volatile
  1302  0348  0188               	clrf	8	;volatile
  1303  0349  0189               	clrf	9	;volatile
  1304  034A                     l1320:
  1305  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1306  034B  1303               	bcf	3,6	;RP1=0, select bank1
  1307  034C  139F               	bcf	31,7	;volatile
  1308  034D                     l1322:
  1309  034D  121F               	bcf	31,4	;volatile
  1310  034E                     l1324:
  1311  034E  129F               	bcf	31,5	;volatile
  1312  034F                     l1326:
  1313  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0351  081F               	movf	31,w	;volatile
  1316  0352  393F               	andlw	-193
  1317  0353  3880               	iorlw	128
  1318  0354  009F               	movwf	31	;volatile
  1319  0355                     l1328:
  1320  0355  30C3               	movlw	-61
  1321  0356  059F               	andwf	31,f	;volatile
  1322  0357                     l1330:
  1323  0357  3021               	movlw	33
  1324  0358  00F7               	movwf	??_setup
  1325  0359                     u707:
  1326  0359  0BF7               	decfsz	??_setup,f
  1327  035A  2B59               	goto	u707
  1328  035B                     l1332:
  1329  035B  1283               	bcf	3,5	;RP0=0, select bank0
  1330  035C  1303               	bcf	3,6	;RP1=0, select bank0
  1331  035D  141F               	bsf	31,0	;volatile
  1332  035E                     l1334:
  1333  035E  178B               	bsf	11,7	;volatile
  1334  035F                     l1336:
  1335  035F  168B               	bsf	11,5	;volatile
  1336  0360                     l1338:
  1337  0360  110B               	bcf	11,2	;volatile
  1338  0361                     l1340:
  1339  0361  170B               	bsf	11,6	;volatile
  1340  0362                     l1342:
  1341  0362  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0363  1303               	bcf	3,6	;RP1=0, select bank1
  1343  0364  170C               	bsf	12,6	;volatile
  1344  0365                     l1344:
  1345  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1346  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1347  0367  130C               	bcf	12,6	;volatile
  1348  0368                     l1346:
  1349  0368  120A  118A  22D5  120A  118A  	fcall	_Lcd_Init
  1350  036D                     l108:
  1351  036D  0008               	return
  1352  036E                     __end_of_setup:
  1353                           
  1354                           	psect	text2
  1355  02D5                     __ptext2:	
  1356 ;; *************** function _Lcd_Init *****************
  1357 ;; Defined at:
  1358 ;;		line 40 in file "LCD.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          0       2       0       0       0
  1375 ;;      Totals:         0       2       0       0       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    3
  1379 ;; This function calls:
  1380 ;;		_Lcd_Cmd
  1381 ;;		_Lcd_Port
  1382 ;; This function is called by:
  1383 ;;		_setup
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _Lcd_Init
  1389  02D5                     _Lcd_Init:
  1390  02D5                     l1290:	
  1391                           ;incstack = 0
  1392                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1393                           
  1394                           
  1395                           ;LCD.c: 41:    _delay((unsigned long)((15)*(8000000/4000.0)));
  1396  02D5  3027               	movlw	39
  1397  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  1398  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  1399  02D8  00A1               	movwf	??_Lcd_Init+1
  1400  02D9  30F4               	movlw	244
  1401  02DA  00A0               	movwf	??_Lcd_Init
  1402  02DB                     u717:
  1403  02DB  0BA0               	decfsz	??_Lcd_Init,f
  1404  02DC  2ADB               	goto	u717
  1405  02DD  0BA1               	decfsz	??_Lcd_Init+1,f
  1406  02DE  2ADB               	goto	u717
  1407  02DF  0000               	nop
  1408  02E0                     l1292:
  1409                           
  1410                           ;LCD.c: 42:   Lcd_Port(0x00);
  1411  02E0  3000               	movlw	0
  1412  02E1  120A  118A  2435  120A  118A  	fcall	_Lcd_Port
  1413  02E6                     l1294:
  1414                           
  1415                           ;LCD.c: 43:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1416  02E6  3034               	movlw	52
  1417  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1418  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1419  02E9  00A1               	movwf	??_Lcd_Init+1
  1420  02EA  30F1               	movlw	241
  1421  02EB  00A0               	movwf	??_Lcd_Init
  1422  02EC                     u727:
  1423  02EC  0BA0               	decfsz	??_Lcd_Init,f
  1424  02ED  2AEC               	goto	u727
  1425  02EE  0BA1               	decfsz	??_Lcd_Init+1,f
  1426  02EF  2AEC               	goto	u727
  1427                           
  1428                           ;LCD.c: 44:   Lcd_Cmd(0x030);
  1429  02F0  3030               	movlw	48
  1430  02F1  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  1431  02F6                     l1296:
  1432                           
  1433                           ;LCD.c: 45:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1434  02F6  300D               	movlw	13
  1435  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1436  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1437  02F9  00A1               	movwf	??_Lcd_Init+1
  1438  02FA  30FB               	movlw	251
  1439  02FB  00A0               	movwf	??_Lcd_Init
  1440  02FC                     u737:
  1441  02FC  0BA0               	decfsz	??_Lcd_Init,f
  1442  02FD  2AFC               	goto	u737
  1443  02FE  0BA1               	decfsz	??_Lcd_Init+1,f
  1444  02FF  2AFC               	goto	u737
  1445  0300                     l1298:
  1446                           
  1447                           ;LCD.c: 46:   Lcd_Cmd(0x030);
  1448  0300  3030               	movlw	48
  1449  0301  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  1450                           
  1451                           ;LCD.c: 47:  _delay((unsigned long)((160)*(8000000/4000000.0)));
  1452  0306  3069               	movlw	105
  1453  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0309  00A0               	movwf	??_Lcd_Init
  1456  030A                     u747:
  1457  030A  0BA0               	decfsz	??_Lcd_Init,f
  1458  030B  2B0A               	goto	u747
  1459  030C  2B0D               	nop2
  1460  030D                     l1300:
  1461                           
  1462                           ;LCD.c: 48:   Lcd_Cmd(0x030);
  1463  030D  3030               	movlw	48
  1464  030E  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  1465  0313                     l1302:
  1466                           
  1467                           ;LCD.c: 50:   Lcd_Cmd(0x038);
  1468  0313  3038               	movlw	56
  1469  0314  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  1470  0319                     l1304:
  1471                           
  1472                           ;LCD.c: 51:   Lcd_Cmd(0x010);
  1473  0319  3010               	movlw	16
  1474  031A  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  1475  031F                     l1306:
  1476                           
  1477                           ;LCD.c: 52:   Lcd_Cmd(0x001);
  1478  031F  3001               	movlw	1
  1479  0320  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  1480  0325                     l1308:
  1481                           
  1482                           ;LCD.c: 53:   Lcd_Cmd(0x006);
  1483  0325  3006               	movlw	6
  1484  0326  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  1485  032B                     l1310:
  1486                           
  1487                           ;LCD.c: 55:   Lcd_Cmd(0x0C);
  1488  032B  300C               	movlw	12
  1489  032C  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  1490  0331                     l141:
  1491  0331  0008               	return
  1492  0332                     __end_of_Lcd_Init:
  1493                           
  1494                           	psect	text3
  1495  036E                     __ptext3:	
  1496 ;; *************** function ___wmul *****************
  1497 ;; Defined at:
  1498 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  multiplier      2    3[COMMON] unsigned int 
  1501 ;;  multiplicand    2    5[COMMON] unsigned int 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  product         2    0[BANK0 ] unsigned int 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2    3[COMMON] unsigned int 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         4       0       0       0       0
  1514 ;;      Locals:         0       2       0       0       0
  1515 ;;      Temps:          0       0       0       0       0
  1516 ;;      Totals:         4       2       0       0       0
  1517 ;;Total ram usage:        6 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function ___wmul
  1529  036E                     ___wmul:
  1530  036E                     l1372:	
  1531                           ;incstack = 0
  1532                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1533                           
  1534  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1535  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0370  01A0               	clrf	___wmul@product
  1537  0371  01A1               	clrf	___wmul@product+1
  1538  0372                     l1374:
  1539  0372  1C73               	btfss	___wmul@multiplier,0
  1540  0373  2B75               	goto	u591
  1541  0374  2B76               	goto	u590
  1542  0375                     u591:
  1543  0375  2B7E               	goto	l242
  1544  0376                     u590:
  1545  0376                     l1376:
  1546  0376  0875               	movf	___wmul@multiplicand,w
  1547  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0379  07A0               	addwf	___wmul@product,f
  1550  037A  1803               	skipnc
  1551  037B  0AA1               	incf	___wmul@product+1,f
  1552  037C  0876               	movf	___wmul@multiplicand+1,w
  1553  037D  07A1               	addwf	___wmul@product+1,f
  1554  037E                     l242:
  1555  037E  3001               	movlw	1
  1556  037F                     u605:
  1557  037F  1003               	clrc
  1558  0380  0DF5               	rlf	___wmul@multiplicand,f
  1559  0381  0DF6               	rlf	___wmul@multiplicand+1,f
  1560  0382  3EFF               	addlw	-1
  1561  0383  1D03               	skipz
  1562  0384  2B7F               	goto	u605
  1563  0385                     l1378:
  1564  0385  3001               	movlw	1
  1565  0386                     u615:
  1566  0386  1003               	clrc
  1567  0387  0CF4               	rrf	___wmul@multiplier+1,f
  1568  0388  0CF3               	rrf	___wmul@multiplier,f
  1569  0389  3EFF               	addlw	-1
  1570  038A  1D03               	skipz
  1571  038B  2B86               	goto	u615
  1572  038C                     l1380:
  1573  038C  0873               	movf	___wmul@multiplier,w
  1574  038D  0474               	iorwf	___wmul@multiplier+1,w
  1575  038E  1D03               	btfss	3,2
  1576  038F  2B91               	goto	u621
  1577  0390  2B92               	goto	u620
  1578  0391                     u621:
  1579  0391  2B72               	goto	l1374
  1580  0392                     u620:
  1581  0392                     l1382:
  1582  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0394  0821               	movf	___wmul@product+1,w
  1585  0395  00F4               	movwf	?___wmul+1
  1586  0396  0820               	movf	___wmul@product,w
  1587  0397  00F3               	movwf	?___wmul
  1588  0398                     l244:
  1589  0398  0008               	return
  1590  0399                     __end_of___wmul:
  1591                           
  1592                           	psect	text4
  1593  0418                     __ptext4:	
  1594 ;; *************** function ___bmul *****************
  1595 ;; Defined at:
  1596 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  multiplier      1    wreg     unsigned char 
  1599 ;;  multiplicand    1    3[COMMON] unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  multiplier      1    6[COMMON] unsigned char 
  1602 ;;  product         1    5[COMMON] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      unsigned char 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         1       0       0       0       0
  1613 ;;      Locals:         2       0       0       0       0
  1614 ;;      Temps:          1       0       0       0       0
  1615 ;;      Totals:         4       0       0       0       0
  1616 ;;Total ram usage:        4 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function ___bmul
  1628  0418                     ___bmul:
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1632                           ;___bmul@multiplier stored from wreg
  1633  0418  00F6               	movwf	___bmul@multiplier
  1634  0419                     l1128:
  1635  0419  01F5               	clrf	___bmul@product
  1636  041A                     l1130:
  1637  041A  1C76               	btfss	___bmul@multiplier,0
  1638  041B  2C1D               	goto	u361
  1639  041C  2C1E               	goto	u360
  1640  041D                     u361:
  1641  041D  2C22               	goto	l1134
  1642  041E                     u360:
  1643  041E                     l1132:
  1644  041E  0873               	movf	___bmul@multiplicand,w
  1645  041F  00F4               	movwf	??___bmul
  1646  0420  0874               	movf	??___bmul,w
  1647  0421  07F5               	addwf	___bmul@product,f
  1648  0422                     l1134:
  1649  0422  1003               	clrc
  1650  0423  0DF3               	rlf	___bmul@multiplicand,f
  1651  0424                     l1136:
  1652  0424  1003               	clrc
  1653  0425  0CF6               	rrf	___bmul@multiplier,f
  1654  0426  0876               	movf	___bmul@multiplier,w
  1655  0427  1D03               	btfss	3,2
  1656  0428  2C2A               	goto	u371
  1657  0429  2C2B               	goto	u370
  1658  042A                     u371:
  1659  042A  2C1A               	goto	l1130
  1660  042B                     u370:
  1661  042B                     l1138:
  1662  042B  0875               	movf	___bmul@product,w
  1663  042C                     l268:
  1664  042C  0008               	return
  1665  042D                     __end_of___bmul:
  1666                           
  1667                           	psect	text5
  1668  026C                     __ptext5:	
  1669 ;; *************** function ___awdiv *****************
  1670 ;; Defined at:
  1671 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  divisor         2    2[BANK0 ] int 
  1674 ;;  dividend        2    4[BANK0 ] int 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  quotient        2    8[BANK0 ] int 
  1677 ;;  sign            1    7[BANK0 ] unsigned char 
  1678 ;;  counter         1    6[BANK0 ] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  2    2[BANK0 ] int 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       4       0       0       0
  1689 ;;      Locals:         0       4       0       0       0
  1690 ;;      Temps:          1       0       0       0       0
  1691 ;;      Totals:         1       8       0       0       0
  1692 ;;Total ram usage:        9 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    1
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function ___awdiv
  1704  026C                     ___awdiv:
  1705  026C                     l1142:	
  1706                           ;incstack = 0
  1707                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1708                           
  1709  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1710  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1711  026E  01A7               	clrf	___awdiv@sign
  1712  026F                     l1144:
  1713  026F  1FA3               	btfss	___awdiv@divisor+1,7
  1714  0270  2A72               	goto	u381
  1715  0271  2A73               	goto	u380
  1716  0272                     u381:
  1717  0272  2A7A               	goto	l1150
  1718  0273                     u380:
  1719  0273                     l1146:
  1720  0273  09A2               	comf	___awdiv@divisor,f
  1721  0274  09A3               	comf	___awdiv@divisor+1,f
  1722  0275  0AA2               	incf	___awdiv@divisor,f
  1723  0276  1903               	skipnz
  1724  0277  0AA3               	incf	___awdiv@divisor+1,f
  1725  0278                     l1148:
  1726  0278  01A7               	clrf	___awdiv@sign
  1727  0279  0AA7               	incf	___awdiv@sign,f
  1728  027A                     l1150:
  1729  027A  1FA5               	btfss	___awdiv@dividend+1,7
  1730  027B  2A7D               	goto	u391
  1731  027C  2A7E               	goto	u390
  1732  027D                     u391:
  1733  027D  2A87               	goto	l1156
  1734  027E                     u390:
  1735  027E                     l1152:
  1736  027E  09A4               	comf	___awdiv@dividend,f
  1737  027F  09A5               	comf	___awdiv@dividend+1,f
  1738  0280  0AA4               	incf	___awdiv@dividend,f
  1739  0281  1903               	skipnz
  1740  0282  0AA5               	incf	___awdiv@dividend+1,f
  1741  0283                     l1154:
  1742  0283  3001               	movlw	1
  1743  0284  00F7               	movwf	??___awdiv
  1744  0285  0877               	movf	??___awdiv,w
  1745  0286  06A7               	xorwf	___awdiv@sign,f
  1746  0287                     l1156:
  1747  0287  01A8               	clrf	___awdiv@quotient
  1748  0288  01A9               	clrf	___awdiv@quotient+1
  1749  0289                     l1158:
  1750  0289  0822               	movf	___awdiv@divisor,w
  1751  028A  0423               	iorwf	___awdiv@divisor+1,w
  1752  028B  1903               	btfsc	3,2
  1753  028C  2A8E               	goto	u401
  1754  028D  2A8F               	goto	u400
  1755  028E                     u401:
  1756  028E  2AC6               	goto	l1178
  1757  028F                     u400:
  1758  028F                     l1160:
  1759  028F  01A6               	clrf	___awdiv@counter
  1760  0290  0AA6               	incf	___awdiv@counter,f
  1761  0291  2A9D               	goto	l1166
  1762  0292                     l1162:
  1763  0292  3001               	movlw	1
  1764  0293                     u415:
  1765  0293  1003               	clrc
  1766  0294  0DA2               	rlf	___awdiv@divisor,f
  1767  0295  0DA3               	rlf	___awdiv@divisor+1,f
  1768  0296  3EFF               	addlw	-1
  1769  0297  1D03               	skipz
  1770  0298  2A93               	goto	u415
  1771  0299                     l1164:
  1772  0299  3001               	movlw	1
  1773  029A  00F7               	movwf	??___awdiv
  1774  029B  0877               	movf	??___awdiv,w
  1775  029C  07A6               	addwf	___awdiv@counter,f
  1776  029D                     l1166:
  1777  029D  1FA3               	btfss	___awdiv@divisor+1,7
  1778  029E  2AA0               	goto	u421
  1779  029F  2AA1               	goto	u420
  1780  02A0                     u421:
  1781  02A0  2A92               	goto	l1162
  1782  02A1                     u420:
  1783  02A1                     l1168:
  1784  02A1  3001               	movlw	1
  1785  02A2                     u435:
  1786  02A2  1003               	clrc
  1787  02A3  0DA8               	rlf	___awdiv@quotient,f
  1788  02A4  0DA9               	rlf	___awdiv@quotient+1,f
  1789  02A5  3EFF               	addlw	-1
  1790  02A6  1D03               	skipz
  1791  02A7  2AA2               	goto	u435
  1792  02A8  0823               	movf	___awdiv@divisor+1,w
  1793  02A9  0225               	subwf	___awdiv@dividend+1,w
  1794  02AA  1D03               	skipz
  1795  02AB  2AAE               	goto	u445
  1796  02AC  0822               	movf	___awdiv@divisor,w
  1797  02AD  0224               	subwf	___awdiv@dividend,w
  1798  02AE                     u445:
  1799  02AE  1C03               	skipc
  1800  02AF  2AB1               	goto	u441
  1801  02B0  2AB2               	goto	u440
  1802  02B1                     u441:
  1803  02B1  2AB9               	goto	l1174
  1804  02B2                     u440:
  1805  02B2                     l1170:
  1806  02B2  0822               	movf	___awdiv@divisor,w
  1807  02B3  02A4               	subwf	___awdiv@dividend,f
  1808  02B4  0823               	movf	___awdiv@divisor+1,w
  1809  02B5  1C03               	skipc
  1810  02B6  03A5               	decf	___awdiv@dividend+1,f
  1811  02B7  02A5               	subwf	___awdiv@dividend+1,f
  1812  02B8                     l1172:
  1813  02B8  1428               	bsf	___awdiv@quotient,0
  1814  02B9                     l1174:
  1815  02B9  3001               	movlw	1
  1816  02BA                     u455:
  1817  02BA  1003               	clrc
  1818  02BB  0CA3               	rrf	___awdiv@divisor+1,f
  1819  02BC  0CA2               	rrf	___awdiv@divisor,f
  1820  02BD  3EFF               	addlw	-1
  1821  02BE  1D03               	skipz
  1822  02BF  2ABA               	goto	u455
  1823  02C0                     l1176:
  1824  02C0  3001               	movlw	1
  1825  02C1  02A6               	subwf	___awdiv@counter,f
  1826  02C2  1D03               	btfss	3,2
  1827  02C3  2AC5               	goto	u461
  1828  02C4  2AC6               	goto	u460
  1829  02C5                     u461:
  1830  02C5  2AA1               	goto	l1168
  1831  02C6                     u460:
  1832  02C6                     l1178:
  1833  02C6  0827               	movf	___awdiv@sign,w
  1834  02C7  1903               	btfsc	3,2
  1835  02C8  2ACA               	goto	u471
  1836  02C9  2ACB               	goto	u470
  1837  02CA                     u471:
  1838  02CA  2AD0               	goto	l1182
  1839  02CB                     u470:
  1840  02CB                     l1180:
  1841  02CB  09A8               	comf	___awdiv@quotient,f
  1842  02CC  09A9               	comf	___awdiv@quotient+1,f
  1843  02CD  0AA8               	incf	___awdiv@quotient,f
  1844  02CE  1903               	skipnz
  1845  02CF  0AA9               	incf	___awdiv@quotient+1,f
  1846  02D0                     l1182:
  1847  02D0  0829               	movf	___awdiv@quotient+1,w
  1848  02D1  00A3               	movwf	?___awdiv+1
  1849  02D2  0828               	movf	___awdiv@quotient,w
  1850  02D3  00A2               	movwf	?___awdiv
  1851  02D4                     l395:
  1852  02D4  0008               	return
  1853  02D5                     __end_of___awdiv:
  1854                           
  1855                           	psect	text6
  1856  0402                     __ptext6:	
  1857 ;; *************** function _Lcd_Write_Char *****************
  1858 ;; Defined at:
  1859 ;;		line 58 in file "LCD.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  a               1    wreg     unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  a               1    5[COMMON] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         1       0       0       0       0
  1875 ;;      Temps:          1       0       0       0       0
  1876 ;;      Totals:         2       0       0       0       0
  1877 ;;Total ram usage:        2 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    2
  1880 ;; This function calls:
  1881 ;;		_Lcd_Port
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;;		_Lcd_Write_String
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _Lcd_Write_Char
  1890  0402                     _Lcd_Write_Char:
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1894                           ;Lcd_Write_Char@a stored from wreg
  1895  0402  00F5               	movwf	Lcd_Write_Char@a
  1896  0403                     l1362:
  1897                           
  1898                           ;LCD.c: 58: void Lcd_Write_Char(char a);LCD.c: 59: {;LCD.c: 60:     RE0 = 1;
  1899  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0405  1409               	bsf	9,0	;volatile
  1902  0406                     l1364:
  1903                           
  1904                           ;LCD.c: 61:    Lcd_Port(a);
  1905  0406  0875               	movf	Lcd_Write_Char@a,w
  1906  0407  120A  118A  2435  120A  118A  	fcall	_Lcd_Port
  1907  040C                     l1366:
  1908                           
  1909                           ;LCD.c: 62:    RE1 = 1;
  1910  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1911  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1912  040E  1489               	bsf	9,1	;volatile
  1913  040F                     l1368:
  1914                           
  1915                           ;LCD.c: 63:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1916  040F  301A               	movlw	26
  1917  0410  00F4               	movwf	??_Lcd_Write_Char
  1918  0411                     u757:
  1919  0411  0BF4               	decfsz	??_Lcd_Write_Char,f
  1920  0412  2C11               	goto	u757
  1921  0413  0000               	nop
  1922  0414                     l1370:
  1923                           
  1924                           ;LCD.c: 64:    RE1 = 0;
  1925  0414  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0415  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0416  1089               	bcf	9,1	;volatile
  1928  0417                     l144:
  1929  0417  0008               	return
  1930  0418                     __end_of_Lcd_Write_Char:
  1931                           
  1932                           	psect	text7
  1933  03C2                     __ptext7:	
  1934 ;; *************** function _Lcd_Set_Cursor *****************
  1935 ;; Defined at:
  1936 ;;		line 25 in file "LCD.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  a               1    wreg     unsigned char 
  1939 ;;  b               1    7[COMMON] unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  a               1    1[BANK0 ] unsigned char 
  1942 ;;  temp            1    2[BANK0 ] unsigned char 
  1943 ;;  y               1    0        unsigned char 
  1944 ;;  z               1    0        unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         1       0       0       0       0
  1955 ;;      Locals:         0       2       0       0       0
  1956 ;;      Temps:          0       1       0       0       0
  1957 ;;      Totals:         1       3       0       0       0
  1958 ;;Total ram usage:        4 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    3
  1961 ;; This function calls:
  1962 ;;		_Lcd_Cmd
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _Lcd_Set_Cursor
  1970  03C2                     _Lcd_Set_Cursor:
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1974                           ;Lcd_Set_Cursor@a stored from wreg
  1975  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1976  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1977  03C4  00A1               	movwf	Lcd_Set_Cursor@a
  1978  03C5                     l1350:
  1979                           
  1980                           ;LCD.c: 25: void Lcd_Set_Cursor(char a, char b);LCD.c: 26: {;LCD.c: 27:  char temp,z,y;;
      +                          LCD.c: 28:  if(a == 1)
  1981  03C5  0321               	decf	Lcd_Set_Cursor@a,w
  1982  03C6  1D03               	btfss	3,2
  1983  03C7  2BC9               	goto	u571
  1984  03C8  2BCA               	goto	u570
  1985  03C9                     u571:
  1986  03C9  2BD6               	goto	l1356
  1987  03CA                     u570:
  1988  03CA                     l1352:
  1989                           
  1990                           ;LCD.c: 29:  {;LCD.c: 30:    temp = 0x80 + b - 1;
  1991  03CA  0877               	movf	Lcd_Set_Cursor@b,w
  1992  03CB  3E7F               	addlw	127
  1993  03CC  00A0               	movwf	??_Lcd_Set_Cursor
  1994  03CD  0820               	movf	??_Lcd_Set_Cursor,w
  1995  03CE  00A2               	movwf	Lcd_Set_Cursor@temp
  1996  03CF                     l1354:
  1997                           
  1998                           ;LCD.c: 31:   Lcd_Cmd(temp);
  1999  03CF  0822               	movf	Lcd_Set_Cursor@temp,w
  2000  03D0  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  2001                           
  2002                           ;LCD.c: 32:  }
  2003  03D5  2BE7               	goto	l138
  2004  03D6                     l1356:
  2005  03D6  3002               	movlw	2
  2006  03D7  0621               	xorwf	Lcd_Set_Cursor@a,w
  2007  03D8  1D03               	btfss	3,2
  2008  03D9  2BDB               	goto	u581
  2009  03DA  2BDC               	goto	u580
  2010  03DB                     u581:
  2011  03DB  2BE7               	goto	l138
  2012  03DC                     u580:
  2013  03DC                     l1358:
  2014                           
  2015                           ;LCD.c: 34:  {;LCD.c: 35:   temp = 0xC0 + b - 1;
  2016  03DC  0877               	movf	Lcd_Set_Cursor@b,w
  2017  03DD  3EBF               	addlw	191
  2018  03DE  00A0               	movwf	??_Lcd_Set_Cursor
  2019  03DF  0820               	movf	??_Lcd_Set_Cursor,w
  2020  03E0  00A2               	movwf	Lcd_Set_Cursor@temp
  2021  03E1                     l1360:
  2022                           
  2023                           ;LCD.c: 36:   Lcd_Cmd(temp);
  2024  03E1  0822               	movf	Lcd_Set_Cursor@temp,w
  2025  03E2  120A  118A  23E8  120A  118A  	fcall	_Lcd_Cmd
  2026  03E7                     l138:
  2027  03E7  0008               	return
  2028  03E8                     __end_of_Lcd_Set_Cursor:
  2029                           
  2030                           	psect	text8
  2031  03E8                     __ptext8:	
  2032 ;; *************** function _Lcd_Cmd *****************
  2033 ;; Defined at:
  2034 ;;		line 15 in file "LCD.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  a               1    wreg     unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  a               1    6[COMMON] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       0       0       0       0
  2049 ;;      Locals:         1       0       0       0       0
  2050 ;;      Temps:          2       0       0       0       0
  2051 ;;      Totals:         3       0       0       0       0
  2052 ;;Total ram usage:        3 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    2
  2055 ;; This function calls:
  2056 ;;		_Lcd_Port
  2057 ;; This function is called by:
  2058 ;;		_Lcd_Set_Cursor
  2059 ;;		_Lcd_Init
  2060 ;;		_Lcd_Shift_Right
  2061 ;;		_Lcd_Shift_Left
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _Lcd_Cmd
  2067  03E8                     _Lcd_Cmd:
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2071                           ;Lcd_Cmd@a stored from wreg
  2072  03E8  00F6               	movwf	Lcd_Cmd@a
  2073  03E9                     l1280:
  2074                           
  2075                           ;LCD.c: 15: void Lcd_Cmd(char a);LCD.c: 16: {;LCD.c: 17:  RE0 = 0;
  2076  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2077  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2078  03EB  1009               	bcf	9,0	;volatile
  2079  03EC                     l1282:
  2080                           
  2081                           ;LCD.c: 18:  Lcd_Port(a);
  2082  03EC  0876               	movf	Lcd_Cmd@a,w
  2083  03ED  120A  118A  2435  120A  118A  	fcall	_Lcd_Port
  2084  03F2                     l1284:
  2085                           
  2086                           ;LCD.c: 19:  RE1 = 1;
  2087  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2088  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2089  03F4  1489               	bsf	9,1	;volatile
  2090  03F5                     l1286:
  2091                           
  2092                           ;LCD.c: 21:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2093  03F5  301A               	movlw	26
  2094  03F6  00F5               	movwf	??_Lcd_Cmd+1
  2095  03F7  30F8               	movlw	248
  2096  03F8  00F4               	movwf	??_Lcd_Cmd
  2097  03F9                     u767:
  2098  03F9  0BF4               	decfsz	??_Lcd_Cmd,f
  2099  03FA  2BF9               	goto	u767
  2100  03FB  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2101  03FC  2BF9               	goto	u767
  2102  03FD  0000               	nop
  2103  03FE                     l1288:
  2104                           
  2105                           ;LCD.c: 22:     RE1 = 0;
  2106  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2107  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0400  1089               	bcf	9,1	;volatile
  2109  0401                     l132:
  2110  0401  0008               	return
  2111  0402                     __end_of_Lcd_Cmd:
  2112                           
  2113                           	psect	text9
  2114  0435                     __ptext9:	
  2115 ;; *************** function _Lcd_Port *****************
  2116 ;; Defined at:
  2117 ;;		line 10 in file "LCD.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  a               1    wreg     unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  a               1    3[COMMON] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       0       0       0       0
  2132 ;;      Locals:         1       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0
  2134 ;;      Totals:         1       0       0       0       0
  2135 ;;Total ram usage:        1 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    1
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_Lcd_Cmd
  2142 ;;		_Lcd_Init
  2143 ;;		_Lcd_Write_Char
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _Lcd_Port
  2149  0435                     _Lcd_Port:
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _Lcd_Port: [wreg]
  2153                           ;Lcd_Port@a stored from wreg
  2154  0435  00F3               	movwf	Lcd_Port@a
  2155  0436                     l1278:
  2156                           
  2157                           ;LCD.c: 10: void Lcd_Port(char a);LCD.c: 11: {;LCD.c: 12:  PORTD = a;
  2158  0436  0873               	movf	Lcd_Port@a,w
  2159  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0439  0088               	movwf	8	;volatile
  2162  043A                     l129:
  2163  043A  0008               	return
  2164  043B                     __end_of_Lcd_Port:
  2165                           
  2166                           	psect	text10
  2167  0399                     __ptext10:	
  2168 ;; *************** function _isr *****************
  2169 ;; Defined at:
  2170 ;;		line 159 in file "Lab02_main.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0
  2186 ;;      Temps:          3       0       0       0       0
  2187 ;;      Totals:         3       0       0       0       0
  2188 ;;Total ram usage:        3 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		Interrupt level 1
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _isr
  2199  0399                     _isr:
  2200  0399                     i1l1244:
  2201                           
  2202                           ;Lab02_main.c: 161: 
  2203  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2204  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2205  039B  1F0C               	btfss	12,6	;volatile
  2206  039C  2B9E               	goto	u54_21
  2207  039D  2B9F               	goto	u54_20
  2208  039E                     u54_21:
  2209  039E  2BBB               	goto	i1l105
  2210  039F                     u54_20:
  2211  039F                     i1l1246:
  2212                           
  2213                           ;Lab02_main.c: 164:     INTCONbits.T0IF = 0;
  2214  039F  0379               	decf	_flag,w
  2215  03A0  1D03               	btfss	3,2
  2216  03A1  2BA3               	goto	u55_21
  2217  03A2  2BA4               	goto	u55_20
  2218  03A3                     u55_21:
  2219  03A3  2BAB               	goto	i1l1254
  2220  03A4                     u55_20:
  2221  03A4                     i1l1248:
  2222                           
  2223                           ;Lab02_main.c: 165:     INTCONbits.PEIE = 1;
  2224  03A4  081E               	movf	30,w	;volatile
  2225  03A5  00F0               	movwf	??_isr
  2226  03A6  0870               	movf	??_isr,w
  2227  03A7  00C3               	movwf	_POT1
  2228  03A8                     i1l1250:
  2229                           
  2230                           ;Lab02_main.c: 166:     PIE1bits.ADIE = 1;
  2231  03A8  151F               	bsf	31,2	;volatile
  2232  03A9                     i1l1252:
  2233                           
  2234                           ;Lab02_main.c: 167:     PIR1bits.ADIF = 0;
  2235  03A9  01F9               	clrf	_flag
  2236                           
  2237                           ;Lab02_main.c: 168: 
  2238  03AA  2BB2               	goto	i1l1260
  2239  03AB                     i1l1254:
  2240                           
  2241                           ;Lab02_main.c: 169: 
  2242  03AB  081E               	movf	30,w	;volatile
  2243  03AC  00F0               	movwf	??_isr
  2244  03AD  0870               	movf	??_isr,w
  2245  03AE  00C2               	movwf	_POT2
  2246  03AF                     i1l1256:
  2247                           
  2248                           ;Lab02_main.c: 170:     Lcd_Init();
  2249  03AF  111F               	bcf	31,2	;volatile
  2250  03B0                     i1l1258:
  2251                           
  2252                           ;Lab02_main.c: 171:     return;
  2253  03B0  01F9               	clrf	_flag
  2254  03B1  0AF9               	incf	_flag,f
  2255  03B2                     i1l1260:
  2256  03B2  130C               	bcf	12,6	;volatile
  2257  03B3  3027               	movlw	39
  2258  03B4  00F0               	movwf	??_isr
  2259  03B5                     u77_27:
  2260  03B5  0BF0               	decfsz	??_isr,f
  2261  03B6  2BB5               	goto	u77_27
  2262  03B7  2BB8               	nop2
  2263  03B8                     i1l1262:
  2264  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2265  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2266  03BA  149F               	bsf	31,1	;volatile
  2267  03BB                     i1l105:
  2268  03BB  0872               	movf	??_isr+2,w
  2269  03BC  008A               	movwf	10
  2270  03BD  0E71               	swapf	??_isr+1,w
  2271  03BE  0083               	movwf	3
  2272  03BF  0EFE               	swapf	btemp,f
  2273  03C0  0E7E               	swapf	btemp,w
  2274  03C1  0009               	retfie
  2275  03C2                     __end_of_isr:
  2276  007E                     btemp	set	126	;btemp
  2277  007E                     wtemp0	set	126
  2278                           
  2279                           	psect	intentry
  2280  0004                     __pintentry:	
  2281                           ;incstack = 0
  2282                           ; Regs used in _isr: [wreg+status,2+status,0]
  2283                           
  2284  0004                     interrupt_function:
  2285  007E                     saved_w	set	btemp
  2286  0004  00FE               	movwf	btemp
  2287  0005  0E03               	swapf	3,w
  2288  0006  00F1               	movwf	??_isr+1
  2289  0007  080A               	movf	10,w
  2290  0008  00F2               	movwf	??_isr+2
  2291  0009  120A  118A  2B99   	ljmp	_isr
  2292                           
  2293                           	psect	config
  2294                           
  2295                           ;Config register CONFIG1 @ 0x2007
  2296                           ;	Oscillator Selection bits
  2297                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2298                           ;	Watchdog Timer Enable bit
  2299                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2300                           ;	Power-up Timer Enable bit
  2301                           ;	PWRTE = ON, PWRT enabled
  2302                           ;	RE3/MCLR pin function select bit
  2303                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2304                           ;	Code Protection bit
  2305                           ;	CP = OFF, Program memory code protection is disabled
  2306                           ;	Data Code Protection bit
  2307                           ;	CPD = OFF, Data memory code protection is disabled
  2308                           ;	Brown Out Reset Selection bits
  2309                           ;	BOREN = OFF, BOR disabled
  2310                           ;	Internal External Switchover bit
  2311                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2312                           ;	Fail-Safe Clock Monitor Enabled bit
  2313                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2314                           ;	Low Voltage Programming Enable bit
  2315                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  2316                           ;	In-Circuit Debugger Mode bit
  2317                           ;	DEBUG = 0x1, unprogrammed default
  2318  2007                     	org	8199
  2319  2007  30C4               	dw	12484
  2320                           
  2321                           ;Config register CONFIG2 @ 0x2008
  2322                           ;	Brown-out Reset Selection bit
  2323                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2324                           ;	Flash Program Memory Self Write Enable bits
  2325                           ;	WRT = OFF, Write protection off
  2326  2008                     	org	8200
  2327  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___awdiv
    _main->_setup
    _Lcd_Init->_Lcd_Cmd
    ___awdiv->___wmul
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    _setup->_Lcd_Init
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4415
                                             10 BANK0     10    10      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0      93
                                              7 COMMON     1     1      0
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1216
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     396
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1516
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1064
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 10:49:21 2021

                      _a 0034           ___bmul@product 0075                       l90 019B  
                     l91 01A5                       l92 01AF                       l95 0269  
                     l87 0024                       l88 0187                       l89 0191  
           ___awdiv@sign 0027                       fsr 0004      ___wmul@multiplicand 0075  
                    l132 0401                      l108 036D                      l141 0331  
                    l144 0417                      l129 043A                      l138 03E7  
                    l242 037E                      l244 0398                      l268 042C  
                    l395 02D4                      _RE0 0048                      _RE1 0049  
                    u400 028F                      u401 028E                      u420 02A1  
                    u421 02A0                      u415 0293                      u440 02B2  
                    u360 041E                      u441 02B1                      u361 041D  
                    u370 042B                      u435 02A2                      u371 042A  
                    u460 02C6                      u380 0273                      u620 0392  
                    u461 02C5                      u445 02AE                      u381 0272  
                    u621 0391                      u605 037F                      u470 02CB  
                    u390 027E                      u630 0183                      u471 02CA  
                    u455 02BA                      u391 027D                      u615 0386  
                    u631 0182                      u640 018D                      u641 018C  
                    u570 03CA                      u650 0197                      u571 03C9  
                    u707 0359                      u651 0196                      u580 03DC  
                    u660 01A1                      u581 03DB                      u717 02DB  
                    u661 01A0                      u590 0376                      u670 01AB  
                    u591 0375                      u727 02EC                      u671 01AA  
                    u680 01B5                      u737 02FC                      u681 01B4  
                    u747 030A                      u757 0411                      u767 03F9  
                    _isr 0399                      indf 0000                     l1130 041A  
                   l1132 041E                     l1300 030D                     l1150 027A  
                   l1142 026C                     l1134 0422                     l1310 032B  
                   l1302 0313                     l1160 028F                     l1152 027E  
                   l1144 026F                     l1136 0424                     l1128 0419  
                   l1304 0319                     l1320 034A                     l1312 0332  
                   l1400 01AB                     l1170 02B2                     l1162 0292  
                   l1154 0283                     l1146 0273                     l1138 042B  
                   l1306 031F                     l1330 0357                     l1322 034D  
                   l1314 0338                     l1410 01CA                     l1402 01B5  
                   l1180 02CB                     l1172 02B8                     l1164 0299  
                   l1156 0287                     l1148 0278                     l1308 0325  
                   l1340 0361                     l1332 035B                     l1324 034E  
                   l1316 033B                     l1420 0200                     l1412 01D6  
                   l1350 03C5                     l1182 02D0                     l1174 02B9  
                   l1166 029D                     l1158 0289                     l1342 0362  
                   l1334 035E                     l1326 034F                     l1318 033D  
                   l1430 0233                     l1422 0209                     l1414 01DF  
                   l1406 01B9                     l1280 03E9                     l1360 03E1  
                   l1352 03CA                     l1176 02C0                     l1168 02A1  
                   l1344 0365                     l1336 035F                     l1328 0355  
                   l1440 0263                     l1432 023F                     l1424 0215  
                   l1416 01EB                     l1408 01C1                     l1282 03EC  
                   l1354 03CF                     l1370 0414                     l1362 0403  
                   l1178 02C6                     l1290 02D5                     l1346 0368  
                   l1338 0360                     l1434 0245                     l1426 021E  
                   l1418 01F4                     l1284 03F2                     l1356 03D6  
                   l1364 0406                     l1380 038C                     l1372 036E  
                   l1292 02E0                     l1436 0251                     l1428 022A  
                   l1278 0436                     l1286 03F5                     l1358 03DC  
                   l1366 040C                     l1382 0392                     l1374 0372  
                   l1294 02E6                     l1438 0257                     l1390 017D  
                   l1288 03FE                     l1368 040F                     l1376 0376  
                   l1296 02F6                     l1392 0183                     l1378 0385  
                   l1298 0300                     l1394 018D                     l1386 001F  
                   l1396 0197                     l1388 017C                     l1398 01A1  
                   _ADIF 0066                     ?_isr 0070                     _POT1 0043  
                   _POT2 0042                     _flag 0079                     _cont 0040  
                   _main 001F                     btemp 007E                     start 000C  
        __end_of_Lcd_Cmd 0402        ___bmul@multiplier 0076                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 02D5                    _ANSEL 0188  
        ___awdiv@divisor 0022                    i1l105 03BB          ___awdiv@counter 0026  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u54_20 039F                    u54_21 039E  
                  u55_20 03A4                    u55_21 03A3  __size_of_Lcd_Set_Cursor 0026  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    u77_27 03B5                    _setup 0332  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_Lcd_Init 0332         __end_of_Lcd_Port 043B          __initialization 000F  
           __end_of_main 026C                   ??_main 002A                   _ADRESH 001E  
       ___awdiv@dividend 0024                   ?_setup 0070                   _ANSELH 0189  
                 i1l1250 03A8                   i1l1260 03B2                   i1l1252 03A9  
                 i1l1244 0399                   i1l1262 03B8                   i1l1254 03AB  
                 i1l1246 039F                   i1l1256 03AF                   i1l1248 03A4  
                 i1l1258 03B0                ??_Lcd_Cmd 0074  __size_of_Lcd_Write_Char 0016  
                 ___bmul 0418                   ___wmul 036E                ??___awdiv 0077  
                 _flag_1 0036         ___awdiv@quotient 0028                   saved_w 007E  
        Lcd_Set_Cursor@a 0021          Lcd_Set_Cursor@b 0077  __end_of__initialization 001B  
    ___bmul@multiplicand 0073           __pcstackCOMMON 0070            __end_of_setup 036E  
         _Lcd_Set_Cursor 03C2                ?_Lcd_Init 0070                ?_Lcd_Port 0070  
                ??_setup 0077               __pbssBANK0 0034               __pmaintext 001F  
   _display_decimal_2_s2 003A     _display_decimal_2_s3 0037       _display_decimal_s2 003B  
     _display_decimal_s3 0038                  ?___bmul 0073                  ?___wmul 0073  
             __pintentry 0004   __end_of_Lcd_Set_Cursor 03E8               ??_Lcd_Init 0020  
             ??_Lcd_Port 0073                  _RC_temp 0078           _Lcd_Write_Char 0402  
                _Lcd_Cmd 03E8          __size_of___bmul 0015                  ___awdiv 026C  
        __size_of___wmul 002B          ?_Lcd_Set_Cursor 0077                  __ptext1 0332  
                __ptext2 02D5                  __ptext3 036E                  __ptext4 0418  
                __ptext5 026C                  __ptext6 0402                  __ptext7 03C2  
                __ptext8 03E8                  __ptext9 0435             __size_of_isr 0029  
                clrloop0 042E   __end_of_Lcd_Write_Char 0418     end_of_initialization 001B  
              Lcd_Port@a 0073          ?_Lcd_Write_Char 0070           __end_of___bmul 042D  
         __end_of___wmul 0399      start_initialization 000F              __end_of_isr 03C2  
      __size_of_Lcd_Init 005D        __size_of_Lcd_Port 0006                 ??___bmul 0074  
               ??___wmul 0077          Lcd_Write_Char@a 0075              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020                 ?_Lcd_Cmd 0070  
      _display_decima1_2 003D         ??_Lcd_Set_Cursor 0020                 ?___awdiv 0022  
         __size_of_setup 003C        interrupt_function 0004           ___wmul@product 0020  
              clear_ram0 042D                 _PIE1bits 008C                 Lcd_Cmd@a 0076  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
      ___wmul@multiplier 0073        _display_unidad_s2 003C        _display_unidad_s3 0039  
       ??_Lcd_Write_Char 0074                 _Lcd_Init 02D5                 _Lcd_Port 0435  
       __size_of_Lcd_Cmd 001A         __size_of___awdiv 0069                 _main$944 0032  
               __ptext10 0399                 _contador 0041            __size_of_main 024D  
               _var_temp 007A               _INTCONbits 000B                 intlevel1 0000  
        _display_decimal 003E               _OSCCONbits 008F       Lcd_Set_Cursor@temp 0022  
         _display_unidad 003F  
