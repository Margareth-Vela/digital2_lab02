

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 11:22:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0018                     _RCSTAbits	set	24
   454  0001                     _TMR0	set	1
   455  0009                     _PORTE	set	9
   456  0008                     _PORTD	set	8
   457  0007                     _PORTC	set	7
   458  0005                     _PORTA	set	5
   459  0019                     _TXREG	set	25
   460  001A                     _RCREG	set	26
   461  000C                     _PIR1bits	set	12
   462  001F                     _ADCON0bits	set	31
   463  001E                     _ADRESH	set	30
   464  000B                     _INTCONbits	set	11
   465  0049                     _RE1	set	73
   466  0048                     _RE0	set	72
   467  0064                     _TXIF	set	100
   468  002F                     _RA7	set	47
   469  0066                     _ADIF	set	102
   470  009A                     _SPBRGH	set	154
   471  0099                     _SPBRG	set	153
   472  0098                     _TXSTAbits	set	152
   473  009F                     _ADCON1bits	set	159
   474  0081                     _OPTION_REGbits	set	129
   475  008C                     _PIE1bits	set	140
   476  0089                     _TRISE	set	137
   477  0088                     _TRISD	set	136
   478  0087                     _TRISC	set	135
   479  0085                     _TRISA	set	133
   480  008F                     _OSCCONbits	set	143
   481  0464                     _TXIE	set	1124
   482  0187                     _BAUDCTLbits	set	391
   483  0188                     _ANSEL	set	392
   484  0189                     _ANSELH	set	393
   485                           
   486                           	psect	strings
   487  05CB                     __pstrings:
   488  05CB                     stringtab:
   489  05CB                     __stringtab:
   490  05CB                     stringcode:	
   491                           ;	String table - string pointers are 1 byte each
   492                           
   493  05CB                     stringdir:
   494  05CB  3005               	movlw	high stringdir
   495  05CC  008A               	movwf	10
   496  05CD  0804               	movf	4,w
   497  05CE  0A84               	incf	4,f
   498  05CF  0782               	addwf	2,f
   499  05D0                     __stringbase:
   500  05D0  3400               	retlw	0
   501  05D1                     __end_of__stringtab:
   502  05D1                     STR_2:
   503  05D1  3430               	retlw	48	;'0'
   504  05D2  342E               	retlw	46	;'.'
   505  05D3  3430               	retlw	48	;'0'
   506  05D4  3430               	retlw	48	;'0'
   507  05D5  3400               	retlw	0
   508  05D6                     STR_1:
   509  05D6  3453               	retlw	83	;'S'
   510  05D7  3431               	retlw	49	;'1'
   511  05D8  3400               	retlw	0
   512  05D9                     STR_3:
   513  05D9  3453               	retlw	83	;'S'
   514  05DA  3432               	retlw	50	;'2'
   515  05DB  3400               	retlw	0
   516  05DC                     STR_5:
   517  05DC  3453               	retlw	83	;'S'
   518  05DD  3433               	retlw	51	;'3'
   519  05DE  3400               	retlw	0
   520  05D1                     
   521                           	psect	cinit
   522  000F                     start_initialization:	
   523                           ; #config settings
   524                           
   525  000F                     __initialization:
   526                           
   527                           ; Clear objects allocated to COMMON
   528  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   529  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   530  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   531                           
   532                           ; Clear objects allocated to BANK0
   533  0012  1283               	bcf	3,5	;RP0=0, select bank0
   534  0013  1303               	bcf	3,6	;RP1=0, select bank0
   535  0014  01B4               	clrf	__pbssBANK0& (0+127)
   536  0015  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   537  0016  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   538  0017  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   539  0018  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   540  0019  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   541  001A  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   542  001B  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   543  001C  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   544  001D  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   545  001E  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   546  001F  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   547  0020  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   548  0021  01C1               	clrf	(__pbssBANK0+13)& (0+127)
   549  0022  01C2               	clrf	(__pbssBANK0+14)& (0+127)
   550  0023                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553  0023                     __end_of__initialization:
   554  0023  0183               	clrf	3
   555  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssCOMMON
   558  0078                     __pbssCOMMON:
   559  0078                     _flag_1:
   560  0078                     	ds	1
   561  0079                     _flag:
   562  0079                     	ds	1
   563  007A                     _var_temp:
   564  007A                     	ds	1
   565                           
   566                           	psect	bssBANK0
   567  0034                     __pbssBANK0:
   568  0034                     _a:
   569  0034                     	ds	2
   570  0036                     _display_decimal_2_s3:
   571  0036                     	ds	1
   572  0037                     _display_decimal_s3:
   573  0037                     	ds	1
   574  0038                     _display_unidad_s3:
   575  0038                     	ds	1
   576  0039                     _display_decimal_2_s2:
   577  0039                     	ds	1
   578  003A                     _display_decimal_s2:
   579  003A                     	ds	1
   580  003B                     _display_unidad_s2:
   581  003B                     	ds	1
   582  003C                     _display_decimal_2:
   583  003C                     	ds	1
   584  003D                     _display_decimal:
   585  003D                     	ds	1
   586  003E                     _display_unidad:
   587  003E                     	ds	1
   588  003F                     _cont:
   589  003F                     	ds	1
   590  0040                     _contador:
   591  0040                     	ds	1
   592  0041                     _POT2:
   593  0041                     	ds	1
   594  0042                     _POT1:
   595  0042                     	ds	1
   596                           
   597                           	psect	cstackCOMMON
   598  0070                     __pcstackCOMMON:
   599  0070                     ?_setup:
   600  0070                     ?_Lcd_Write_Char:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Write_String:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_ADC:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Init:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_USART:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_isr:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ??_isr:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_LCD_display:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_Lcd_Port:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_Lcd_Cmd:	
   631                           ; 1 bytes @ 0x0
   632                           
   633                           
   634                           ; 1 bytes @ 0x0
   635  0070                     	ds	3
   636  0073                     ??_ADC:
   637  0073                     ??_USART:	
   638                           ; 1 bytes @ 0x3
   639                           
   640  0073                     ??_Lcd_Port:	
   641                           ; 1 bytes @ 0x3
   642                           
   643  0073                     ?___bmul:	
   644                           ; 1 bytes @ 0x3
   645                           
   646  0073                     ?___wmul:	
   647                           ; 1 bytes @ 0x3
   648                           
   649  0073                     Lcd_Port@a:	
   650                           ; 2 bytes @ 0x3
   651                           
   652  0073                     ___bmul@multiplicand:	
   653                           ; 1 bytes @ 0x3
   654                           
   655  0073                     ___wmul@multiplier:	
   656                           ; 1 bytes @ 0x3
   657                           
   658                           
   659                           ; 2 bytes @ 0x3
   660  0073                     	ds	1
   661  0074                     ??_Lcd_Write_Char:
   662  0074                     ??_Lcd_Cmd:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ??___bmul:	
   666                           ; 1 bytes @ 0x4
   667                           
   668                           
   669                           ; 1 bytes @ 0x4
   670  0074                     	ds	1
   671  0075                     Lcd_Write_Char@a:
   672  0075                     ___bmul@product:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  0075                     ___wmul@multiplicand:	
   676                           ; 1 bytes @ 0x5
   677                           
   678                           
   679                           ; 2 bytes @ 0x5
   680  0075                     	ds	1
   681  0076                     ??_Lcd_Write_String:
   682  0076                     Lcd_Cmd@a:	
   683                           ; 1 bytes @ 0x6
   684                           
   685  0076                     ___bmul@multiplier:	
   686                           ; 1 bytes @ 0x6
   687                           
   688                           
   689                           ; 1 bytes @ 0x6
   690  0076                     	ds	1
   691  0077                     ?_Lcd_Set_Cursor:
   692  0077                     ??___wmul:	
   693                           ; 1 bytes @ 0x7
   694                           
   695  0077                     ??___awdiv:	
   696                           ; 1 bytes @ 0x7
   697                           
   698  0077                     Lcd_Set_Cursor@b:	
   699                           ; 1 bytes @ 0x7
   700                           
   701                           
   702                           ; 1 bytes @ 0x7
   703  0077                     	ds	1
   704  0078                     ??_setup:
   705                           
   706                           	psect	cstackBANK0
   707  0020                     __pcstackBANK0:	
   708                           ; 1 bytes @ 0x8
   709                           
   710  0020                     ??_Lcd_Set_Cursor:
   711  0020                     ??_Lcd_Init:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0020                     Lcd_Write_String@i:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0020                     ___wmul@product:	
   718                           ; 2 bytes @ 0x0
   719                           
   720                           
   721                           ; 2 bytes @ 0x0
   722  0020                     	ds	1
   723  0021                     Lcd_Set_Cursor@a:
   724                           
   725                           ; 1 bytes @ 0x1
   726  0021                     	ds	1
   727  0022                     ?___awdiv:
   728  0022                     Lcd_Set_Cursor@temp:	
   729                           ; 2 bytes @ 0x2
   730                           
   731  0022                     Lcd_Write_String@a:	
   732                           ; 1 bytes @ 0x2
   733                           
   734  0022                     ___awdiv@divisor:	
   735                           ; 1 bytes @ 0x2
   736                           
   737                           
   738                           ; 2 bytes @ 0x2
   739  0022                     	ds	1
   740  0023                     ??_LCD_display:
   741                           
   742                           ; 1 bytes @ 0x3
   743  0023                     	ds	1
   744  0024                     ___awdiv@dividend:
   745                           
   746                           ; 2 bytes @ 0x4
   747  0024                     	ds	2
   748  0026                     ___awdiv@counter:
   749                           
   750                           ; 1 bytes @ 0x6
   751  0026                     	ds	1
   752  0027                     ___awdiv@sign:
   753                           
   754                           ; 1 bytes @ 0x7
   755  0027                     	ds	1
   756  0028                     ___awdiv@quotient:
   757                           
   758                           ; 2 bytes @ 0x8
   759  0028                     	ds	2
   760  002A                     ??_main:
   761                           
   762                           ; 1 bytes @ 0xA
   763  002A                     	ds	8
   764  0032                     _main$1122:
   765                           
   766                           ; 2 bytes @ 0x12
   767  0032                     	ds	2
   768                           
   769                           	psect	maintext
   770  0027                     __pmaintext:	
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 90 in file "Lab02_main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : B00/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       2       0       0       0
   792 ;;      Temps:          0       8       0       0       0
   793 ;;      Totals:         0      10       0       0       0
   794 ;;Total ram usage:       10 bytes
   795 ;; Hardware stack levels required when called:    6
   796 ;; This function calls:
   797 ;;		_Lcd_Set_Cursor
   798 ;;		_Lcd_Write_Char
   799 ;;		___awdiv
   800 ;;		___bmul
   801 ;;		___wmul
   802 ;;		_setup
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _main
   810  0027                     _main:
   811  0027                     l1799:	
   812                           ;incstack = 0
   813                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   814                           
   815                           
   816                           ;Lab02_main.c: 91: 
   817  0027  120A  118A  249E  120A  118A  	fcall	_setup
   818  002C                     l1801:
   819                           
   820                           ;Lab02_main.c: 93:     Lcd_Set_Cursor(2,13);
   821  002C  3010               	movlw	16
   822  002D  1283               	bcf	3,5	;RP0=0, select bank0
   823  002E  1303               	bcf	3,6	;RP1=0, select bank0
   824  002F  023F               	subwf	_cont,w
   825  0030  1C03               	skipc
   826  0031  2833               	goto	u981
   827  0032  2834               	goto	u980
   828  0033                     u981:
   829  0033  2838               	goto	l1807
   830  0034                     u980:
   831  0034                     l1803:
   832                           
   833                           ;Lab02_main.c: 94:     Lcd_Write_Char(display_unidad_s3 +48);
   834  0034  01BF               	clrf	_cont
   835  0035                     l1805:
   836                           
   837                           ;Lab02_main.c: 95:     Lcd_Set_Cursor(2,15);
   838  0035  1683               	bsf	3,5	;RP0=1, select bank1
   839  0036  1303               	bcf	3,6	;RP1=0, select bank1
   840  0037  160C               	bsf	12,4	;volatile
   841  0038                     l1807:
   842                           
   843                           ;Lab02_main.c: 99:    }
   844  0038  3033               	movlw	51
   845  0039  1283               	bcf	3,5	;RP0=0, select bank0
   846  003A  00A2               	movwf	___awdiv@divisor
   847  003B  3000               	movlw	0
   848  003C  00A3               	movwf	___awdiv@divisor+1
   849  003D  0842               	movf	_POT1,w
   850  003E  00AA               	movwf	??_main
   851  003F  01AB               	clrf	??_main+1
   852  0040  082A               	movf	??_main,w
   853  0041  00A4               	movwf	___awdiv@dividend
   854  0042  082B               	movf	??_main+1,w
   855  0043  00A5               	movwf	___awdiv@dividend+1
   856  0044  120A  118A  23D8  120A  118A  	fcall	___awdiv
   857  0049  1283               	bcf	3,5	;RP0=0, select bank0
   858  004A  1303               	bcf	3,6	;RP1=0, select bank0
   859  004B  0822               	movf	?___awdiv,w
   860  004C  00AC               	movwf	??_main+2
   861  004D  082C               	movf	??_main+2,w
   862  004E  00BE               	movwf	_display_unidad
   863  004F                     l1809:
   864                           
   865                           ;Lab02_main.c: 100: }
   866  004F  3033               	movlw	51
   867  0050  00A2               	movwf	___awdiv@divisor
   868  0051  3000               	movlw	0
   869  0052  00A3               	movwf	___awdiv@divisor+1
   870  0053  0842               	movf	_POT1,w
   871  0054  00AA               	movwf	??_main
   872  0055  01AB               	clrf	??_main+1
   873  0056  082A               	movf	??_main,w
   874  0057  00F3               	movwf	___wmul@multiplier
   875  0058  082B               	movf	??_main+1,w
   876  0059  00F4               	movwf	___wmul@multiplier+1
   877  005A  3064               	movlw	100
   878  005B  00F5               	movwf	___wmul@multiplicand
   879  005C  3000               	movlw	0
   880  005D  00F6               	movwf	___wmul@multiplicand+1
   881  005E  120A  118A  24E1  120A  118A  	fcall	___wmul
   882  0063  0874               	movf	?___wmul+1,w
   883  0064  1283               	bcf	3,5	;RP0=0, select bank0
   884  0065  1303               	bcf	3,6	;RP1=0, select bank0
   885  0066  00A5               	movwf	___awdiv@dividend+1
   886  0067  0873               	movf	?___wmul,w
   887  0068  00A4               	movwf	___awdiv@dividend
   888  0069  120A  118A  23D8  120A  118A  	fcall	___awdiv
   889  006E  1283               	bcf	3,5	;RP0=0, select bank0
   890  006F  1303               	bcf	3,6	;RP1=0, select bank0
   891  0070  0822               	movf	?___awdiv,w
   892  0071  00AC               	movwf	??_main+2
   893  0072  0823               	movf	?___awdiv+1,w
   894  0073  00AD               	movwf	??_main+3
   895  0074  083E               	movf	_display_unidad,w
   896  0075  00AE               	movwf	??_main+4
   897  0076  01AF               	clrf	??_main+5
   898  0077  082E               	movf	??_main+4,w
   899  0078  00F3               	movwf	___wmul@multiplier
   900  0079  082F               	movf	??_main+5,w
   901  007A  00F4               	movwf	___wmul@multiplier+1
   902  007B  309C               	movlw	156
   903  007C  00F5               	movwf	___wmul@multiplicand
   904  007D  30FF               	movlw	255
   905  007E  00F6               	movwf	___wmul@multiplicand+1
   906  007F  120A  118A  24E1  120A  118A  	fcall	___wmul
   907  0084  0873               	movf	?___wmul,w
   908  0085  1283               	bcf	3,5	;RP0=0, select bank0
   909  0086  1303               	bcf	3,6	;RP1=0, select bank0
   910  0087  072C               	addwf	??_main+2,w
   911  0088  00B2               	movwf	_main$1122
   912  0089  0874               	movf	?___wmul+1,w
   913  008A  1803               	skipnc
   914  008B  0A74               	incf	?___wmul+1,w
   915  008C  072D               	addwf	??_main+3,w
   916  008D  00B3               	movwf	_main$1122+1
   917  008E                     l1811:
   918                           
   919                           ;Lab02_main.c: 100: }
   920  008E  300A               	movlw	10
   921  008F  00A2               	movwf	___awdiv@divisor
   922  0090  3000               	movlw	0
   923  0091  00A3               	movwf	___awdiv@divisor+1
   924  0092  0833               	movf	_main$1122+1,w
   925  0093  00A5               	movwf	___awdiv@dividend+1
   926  0094  0832               	movf	_main$1122,w
   927  0095  00A4               	movwf	___awdiv@dividend
   928  0096  120A  118A  23D8  120A  118A  	fcall	___awdiv
   929  009B  1283               	bcf	3,5	;RP0=0, select bank0
   930  009C  1303               	bcf	3,6	;RP1=0, select bank0
   931  009D  0822               	movf	?___awdiv,w
   932  009E  00AA               	movwf	??_main
   933  009F  082A               	movf	??_main,w
   934  00A0  00BD               	movwf	_display_decimal
   935  00A1                     l1813:
   936                           
   937                           ;Lab02_main.c: 101: 
   938  00A1  3033               	movlw	51
   939  00A2  00A2               	movwf	___awdiv@divisor
   940  00A3  3000               	movlw	0
   941  00A4  00A3               	movwf	___awdiv@divisor+1
   942  00A5  0842               	movf	_POT1,w
   943  00A6  00AA               	movwf	??_main
   944  00A7  01AB               	clrf	??_main+1
   945  00A8  082A               	movf	??_main,w
   946  00A9  00F3               	movwf	___wmul@multiplier
   947  00AA  082B               	movf	??_main+1,w
   948  00AB  00F4               	movwf	___wmul@multiplier+1
   949  00AC  3064               	movlw	100
   950  00AD  00F5               	movwf	___wmul@multiplicand
   951  00AE  3000               	movlw	0
   952  00AF  00F6               	movwf	___wmul@multiplicand+1
   953  00B0  120A  118A  24E1  120A  118A  	fcall	___wmul
   954  00B5  0874               	movf	?___wmul+1,w
   955  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   956  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   957  00B8  00A5               	movwf	___awdiv@dividend+1
   958  00B9  0873               	movf	?___wmul,w
   959  00BA  00A4               	movwf	___awdiv@dividend
   960  00BB  120A  118A  23D8  120A  118A  	fcall	___awdiv
   961  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   962  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   963  00C2  0822               	movf	?___awdiv,w
   964  00C3  00AC               	movwf	??_main+2
   965  00C4  0823               	movf	?___awdiv+1,w
   966  00C5  00AD               	movwf	??_main+3
   967  00C6  309C               	movlw	156
   968  00C7  00AE               	movwf	??_main+4
   969  00C8  082E               	movf	??_main+4,w
   970  00C9  00F3               	movwf	___bmul@multiplicand
   971  00CA  083E               	movf	_display_unidad,w
   972  00CB  120A  118A  25B6  120A  118A  	fcall	___bmul
   973  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   974  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   975  00D2  00AF               	movwf	??_main+5
   976  00D3  30F6               	movlw	246
   977  00D4  00B0               	movwf	??_main+6
   978  00D5  0830               	movf	??_main+6,w
   979  00D6  00F3               	movwf	___bmul@multiplicand
   980  00D7  083D               	movf	_display_decimal,w
   981  00D8  120A  118A  25B6  120A  118A  	fcall	___bmul
   982  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   983  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   984  00DF  072F               	addwf	??_main+5,w
   985  00E0  072C               	addwf	??_main+2,w
   986  00E1  00B1               	movwf	??_main+7
   987  00E2  0831               	movf	??_main+7,w
   988  00E3  00BC               	movwf	_display_decimal_2
   989  00E4                     l1815:
   990                           
   991                           ;Lab02_main.c: 103: 
   992  00E4  3033               	movlw	51
   993  00E5  00A2               	movwf	___awdiv@divisor
   994  00E6  3000               	movlw	0
   995  00E7  00A3               	movwf	___awdiv@divisor+1
   996  00E8  0841               	movf	_POT2,w
   997  00E9  00AA               	movwf	??_main
   998  00EA  01AB               	clrf	??_main+1
   999  00EB  082A               	movf	??_main,w
  1000  00EC  00A4               	movwf	___awdiv@dividend
  1001  00ED  082B               	movf	??_main+1,w
  1002  00EE  00A5               	movwf	___awdiv@dividend+1
  1003  00EF  120A  118A  23D8  120A  118A  	fcall	___awdiv
  1004  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1005  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1006  00F6  0822               	movf	?___awdiv,w
  1007  00F7  00AC               	movwf	??_main+2
  1008  00F8  082C               	movf	??_main+2,w
  1009  00F9  00BB               	movwf	_display_unidad_s2
  1010  00FA                     l1817:
  1011                           
  1012                           ;Lab02_main.c: 104: 
  1013  00FA  3033               	movlw	51
  1014  00FB  00A2               	movwf	___awdiv@divisor
  1015  00FC  3000               	movlw	0
  1016  00FD  00A3               	movwf	___awdiv@divisor+1
  1017  00FE  0841               	movf	_POT2,w
  1018  00FF  00AA               	movwf	??_main
  1019  0100  01AB               	clrf	??_main+1
  1020  0101  082A               	movf	??_main,w
  1021  0102  00F3               	movwf	___wmul@multiplier
  1022  0103  082B               	movf	??_main+1,w
  1023  0104  00F4               	movwf	___wmul@multiplier+1
  1024  0105  3064               	movlw	100
  1025  0106  00F5               	movwf	___wmul@multiplicand
  1026  0107  3000               	movlw	0
  1027  0108  00F6               	movwf	___wmul@multiplicand+1
  1028  0109  120A  118A  24E1  120A  118A  	fcall	___wmul
  1029  010E  0874               	movf	?___wmul+1,w
  1030  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0111  00A5               	movwf	___awdiv@dividend+1
  1033  0112  0873               	movf	?___wmul,w
  1034  0113  00A4               	movwf	___awdiv@dividend
  1035  0114  120A  118A  23D8  120A  118A  	fcall	___awdiv
  1036  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1037  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1038  011B  0822               	movf	?___awdiv,w
  1039  011C  00AC               	movwf	??_main+2
  1040  011D  0823               	movf	?___awdiv+1,w
  1041  011E  00AD               	movwf	??_main+3
  1042  011F  083B               	movf	_display_unidad_s2,w
  1043  0120  00AE               	movwf	??_main+4
  1044  0121  01AF               	clrf	??_main+5
  1045  0122  082E               	movf	??_main+4,w
  1046  0123  00F3               	movwf	___wmul@multiplier
  1047  0124  082F               	movf	??_main+5,w
  1048  0125  00F4               	movwf	___wmul@multiplier+1
  1049  0126  309C               	movlw	156
  1050  0127  00F5               	movwf	___wmul@multiplicand
  1051  0128  30FF               	movlw	255
  1052  0129  00F6               	movwf	___wmul@multiplicand+1
  1053  012A  120A  118A  24E1  120A  118A  	fcall	___wmul
  1054  012F  0873               	movf	?___wmul,w
  1055  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0132  072C               	addwf	??_main+2,w
  1058  0133  00B2               	movwf	_main$1122
  1059  0134  0874               	movf	?___wmul+1,w
  1060  0135  1803               	skipnc
  1061  0136  0A74               	incf	?___wmul+1,w
  1062  0137  072D               	addwf	??_main+3,w
  1063  0138  00B3               	movwf	_main$1122+1
  1064  0139                     l1819:
  1065                           
  1066                           ;Lab02_main.c: 104: 
  1067  0139  300A               	movlw	10
  1068  013A  00A2               	movwf	___awdiv@divisor
  1069  013B  3000               	movlw	0
  1070  013C  00A3               	movwf	___awdiv@divisor+1
  1071  013D  0833               	movf	_main$1122+1,w
  1072  013E  00A5               	movwf	___awdiv@dividend+1
  1073  013F  0832               	movf	_main$1122,w
  1074  0140  00A4               	movwf	___awdiv@dividend
  1075  0141  120A  118A  23D8  120A  118A  	fcall	___awdiv
  1076  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0148  0822               	movf	?___awdiv,w
  1079  0149  00AA               	movwf	??_main
  1080  014A  082A               	movf	??_main,w
  1081  014B  00BA               	movwf	_display_decimal_s2
  1082  014C                     l1821:
  1083                           
  1084                           ;Lab02_main.c: 105: void __attribute__((picinterrupt(("")))) isr(void){
  1085  014C  3033               	movlw	51
  1086  014D  00A2               	movwf	___awdiv@divisor
  1087  014E  3000               	movlw	0
  1088  014F  00A3               	movwf	___awdiv@divisor+1
  1089  0150  0841               	movf	_POT2,w
  1090  0151  00AA               	movwf	??_main
  1091  0152  01AB               	clrf	??_main+1
  1092  0153  082A               	movf	??_main,w
  1093  0154  00F3               	movwf	___wmul@multiplier
  1094  0155  082B               	movf	??_main+1,w
  1095  0156  00F4               	movwf	___wmul@multiplier+1
  1096  0157  3064               	movlw	100
  1097  0158  00F5               	movwf	___wmul@multiplicand
  1098  0159  3000               	movlw	0
  1099  015A  00F6               	movwf	___wmul@multiplicand+1
  1100  015B  120A  118A  24E1  120A  118A  	fcall	___wmul
  1101  0160  0874               	movf	?___wmul+1,w
  1102  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0163  00A5               	movwf	___awdiv@dividend+1
  1105  0164  0873               	movf	?___wmul,w
  1106  0165  00A4               	movwf	___awdiv@dividend
  1107  0166  120A  118A  23D8  120A  118A  	fcall	___awdiv
  1108  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1109  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1110  016D  0822               	movf	?___awdiv,w
  1111  016E  00AC               	movwf	??_main+2
  1112  016F  0823               	movf	?___awdiv+1,w
  1113  0170  00AD               	movwf	??_main+3
  1114  0171  309C               	movlw	156
  1115  0172  00AE               	movwf	??_main+4
  1116  0173  082E               	movf	??_main+4,w
  1117  0174  00F3               	movwf	___bmul@multiplicand
  1118  0175  083B               	movf	_display_unidad_s2,w
  1119  0176  120A  118A  25B6  120A  118A  	fcall	___bmul
  1120  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1121  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1122  017D  00AF               	movwf	??_main+5
  1123  017E  30F6               	movlw	246
  1124  017F  00B0               	movwf	??_main+6
  1125  0180  0830               	movf	??_main+6,w
  1126  0181  00F3               	movwf	___bmul@multiplicand
  1127  0182  083A               	movf	_display_decimal_s2,w
  1128  0183  120A  118A  25B6  120A  118A  	fcall	___bmul
  1129  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1131  018A  072F               	addwf	??_main+5,w
  1132  018B  072C               	addwf	??_main+2,w
  1133  018C  00B1               	movwf	??_main+7
  1134  018D  0831               	movf	??_main+7,w
  1135  018E  00B9               	movwf	_display_decimal_2_s2
  1136  018F                     l1823:
  1137                           
  1138                           ;Lab02_main.c: 107:         cont++;
  1139  018F  0840               	movf	_contador,w
  1140  0190  00AA               	movwf	??_main
  1141  0191  082A               	movf	??_main,w
  1142  0192  00B8               	movwf	_display_unidad_s3
  1143  0193                     l1825:
  1144                           
  1145                           ;Lab02_main.c: 110: 
  1146  0193  300A               	movlw	10
  1147  0194  023D               	subwf	_display_decimal,w
  1148  0195  1C03               	skipc
  1149  0196  2998               	goto	u991
  1150  0197  2999               	goto	u990
  1151  0198                     u991:
  1152  0198  299D               	goto	l105
  1153  0199                     u990:
  1154  0199                     l1827:
  1155                           
  1156                           ;Lab02_main.c: 111:     if(ADIF == 1){
  1157  0199  3009               	movlw	9
  1158  019A  00AA               	movwf	??_main
  1159  019B  082A               	movf	??_main,w
  1160  019C  00BD               	movwf	_display_decimal
  1161  019D                     l105:	
  1162                           ;Lab02_main.c: 112: 
  1163                           
  1164                           
  1165                           ;Lab02_main.c: 113: 
  1166  019D  300A               	movlw	10
  1167  019E  023C               	subwf	_display_decimal_2,w
  1168  019F  1C03               	skipc
  1169  01A0  29A2               	goto	u1001
  1170  01A1  29A3               	goto	u1000
  1171  01A2                     u1001:
  1172  01A2  29A7               	goto	l106
  1173  01A3                     u1000:
  1174  01A3                     l1829:
  1175                           
  1176                           ;Lab02_main.c: 114:         if (flag_1 == 1){
  1177  01A3  3009               	movlw	9
  1178  01A4  00AA               	movwf	??_main
  1179  01A5  082A               	movf	??_main,w
  1180  01A6  00BC               	movwf	_display_decimal_2
  1181  01A7                     l106:	
  1182                           ;Lab02_main.c: 115:             POT1 = ADRESH;
  1183                           
  1184                           
  1185                           ;Lab02_main.c: 116:             ADCON0bits.CHS0 = 1;
  1186  01A7  300A               	movlw	10
  1187  01A8  023A               	subwf	_display_decimal_s2,w
  1188  01A9  1C03               	skipc
  1189  01AA  29AC               	goto	u1011
  1190  01AB  29AD               	goto	u1010
  1191  01AC                     u1011:
  1192  01AC  29B1               	goto	l107
  1193  01AD                     u1010:
  1194  01AD                     l1831:
  1195                           
  1196                           ;Lab02_main.c: 117:             flag_1 = 0;
  1197  01AD  3009               	movlw	9
  1198  01AE  00AA               	movwf	??_main
  1199  01AF  082A               	movf	??_main,w
  1200  01B0  00BA               	movwf	_display_decimal_s2
  1201  01B1                     l107:	
  1202                           ;Lab02_main.c: 118:         } else{
  1203                           
  1204                           
  1205                           ;Lab02_main.c: 119:             POT2 = ADRESH;
  1206  01B1  300A               	movlw	10
  1207  01B2  0239               	subwf	_display_decimal_2_s2,w
  1208  01B3  1C03               	skipc
  1209  01B4  29B6               	goto	u1021
  1210  01B5  29B7               	goto	u1020
  1211  01B6                     u1021:
  1212  01B6  29BB               	goto	l108
  1213  01B7                     u1020:
  1214  01B7                     l1833:
  1215                           
  1216                           ;Lab02_main.c: 120:             ADCON0bits.CHS0 = 0;
  1217  01B7  3009               	movlw	9
  1218  01B8  00AA               	movwf	??_main
  1219  01B9  082A               	movf	??_main,w
  1220  01BA  00B9               	movwf	_display_decimal_2_s2
  1221  01BB                     l108:	
  1222                           ;Lab02_main.c: 121:             flag_1 = 1;
  1223                           
  1224                           
  1225                           ;Lab02_main.c: 123: 
  1226  01BB  3006               	movlw	6
  1227  01BC  023E               	subwf	_display_unidad,w
  1228  01BD  1C03               	skipc
  1229  01BE  29C0               	goto	u1031
  1230  01BF  29C1               	goto	u1030
  1231  01C0                     u1031:
  1232  01C0  29C5               	goto	l109
  1233  01C1                     u1030:
  1234  01C1                     l1835:
  1235                           
  1236                           ;Lab02_main.c: 124:         ADIF = 0;
  1237  01C1  3005               	movlw	5
  1238  01C2  00AA               	movwf	??_main
  1239  01C3  082A               	movf	??_main,w
  1240  01C4  00BE               	movwf	_display_unidad
  1241  01C5                     l109:	
  1242                           ;Lab02_main.c: 125:         _delay((unsigned long)((60)*(8000000/4000000.0)));
  1243                           
  1244                           
  1245                           ;Lab02_main.c: 126:         ADCON0bits.GO = 1;
  1246  01C5  3006               	movlw	6
  1247  01C6  023B               	subwf	_display_unidad_s2,w
  1248  01C7  1C03               	skipc
  1249  01C8  29CA               	goto	u1041
  1250  01C9  29CB               	goto	u1040
  1251  01CA                     u1041:
  1252  01CA  29CF               	goto	l110
  1253  01CB                     u1040:
  1254  01CB                     l1837:
  1255                           
  1256                           ;Lab02_main.c: 127:     }
  1257  01CB  3005               	movlw	5
  1258  01CC  00AA               	movwf	??_main
  1259  01CD  082A               	movf	??_main,w
  1260  01CE  00BE               	movwf	_display_unidad
  1261  01CF                     l110:	
  1262                           ;Lab02_main.c: 128: 
  1263                           
  1264                           
  1265                           ;Lab02_main.c: 129:     if(PIR1bits.RCIF == 1){
  1266  01CF  3006               	movlw	6
  1267  01D0  0238               	subwf	_display_unidad_s3,w
  1268  01D1  1C03               	skipc
  1269  01D2  29D4               	goto	u1051
  1270  01D3  29D5               	goto	u1050
  1271  01D4                     u1051:
  1272  01D4  29D9               	goto	l1841
  1273  01D5                     u1050:
  1274  01D5                     l1839:
  1275                           
  1276                           ;Lab02_main.c: 130: 
  1277  01D5  3005               	movlw	5
  1278  01D6  00AA               	movwf	??_main
  1279  01D7  082A               	movf	??_main,w
  1280  01D8  00BE               	movwf	_display_unidad
  1281  01D9                     l1841:
  1282                           
  1283                           ;Lab02_main.c: 134:             if (var_temp == 0x2B){
  1284  01D9  01F7               	clrf	Lcd_Set_Cursor@b
  1285  01DA  0AF7               	incf	Lcd_Set_Cursor@b,f
  1286  01DB  3002               	movlw	2
  1287  01DC  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1288  01E1                     l1843:
  1289                           
  1290                           ;Lab02_main.c: 135:                 contador++;
  1291  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1292  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1293  01E3  083E               	movf	_display_unidad,w
  1294  01E4  3E30               	addlw	48
  1295  01E5  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1296  01EA                     l1845:
  1297                           
  1298                           ;Lab02_main.c: 136:                 if (contador > 255){
  1299  01EA  3003               	movlw	3
  1300  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1301  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1302  01ED  00AA               	movwf	??_main
  1303  01EE  082A               	movf	??_main,w
  1304  01EF  00F7               	movwf	Lcd_Set_Cursor@b
  1305  01F0  3002               	movlw	2
  1306  01F1  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1307  01F6                     l1847:
  1308                           
  1309                           ;Lab02_main.c: 137:                     contador = 0;
  1310  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1311  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1312  01F8  083D               	movf	_display_decimal,w
  1313  01F9  3E30               	addlw	48
  1314  01FA  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1315  01FF                     l1849:
  1316                           
  1317                           ;Lab02_main.c: 138:                 } }
  1318  01FF  3004               	movlw	4
  1319  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0202  00AA               	movwf	??_main
  1322  0203  082A               	movf	??_main,w
  1323  0204  00F7               	movwf	Lcd_Set_Cursor@b
  1324  0205  3002               	movlw	2
  1325  0206  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1326  020B                     l1851:
  1327                           
  1328                           ;Lab02_main.c: 139: 
  1329  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1330  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1331  020D  083C               	movf	_display_decimal_2,w
  1332  020E  3E30               	addlw	48
  1333  020F  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1334  0214                     l1853:
  1335                           
  1336                           ;Lab02_main.c: 142:                 if (contador > 255){
  1337  0214  3007               	movlw	7
  1338  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0217  00AA               	movwf	??_main
  1341  0218  082A               	movf	??_main,w
  1342  0219  00F7               	movwf	Lcd_Set_Cursor@b
  1343  021A  3002               	movlw	2
  1344  021B  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1345  0220                     l1855:
  1346                           
  1347                           ;Lab02_main.c: 143:                     contador = 0;
  1348  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0222  083B               	movf	_display_unidad_s2,w
  1351  0223  3E30               	addlw	48
  1352  0224  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1353  0229                     l1857:
  1354                           
  1355                           ;Lab02_main.c: 144:                 }
  1356  0229  3009               	movlw	9
  1357  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1358  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1359  022C  00AA               	movwf	??_main
  1360  022D  082A               	movf	??_main,w
  1361  022E  00F7               	movwf	Lcd_Set_Cursor@b
  1362  022F  3002               	movlw	2
  1363  0230  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1364  0235                     l1859:
  1365                           
  1366                           ;Lab02_main.c: 145:             }
  1367  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0237  083A               	movf	_display_decimal_s2,w
  1370  0238  3E30               	addlw	48
  1371  0239  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1372  023E                     l1861:
  1373                           
  1374                           ;Lab02_main.c: 146:         }
  1375  023E  300A               	movlw	10
  1376  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0241  00AA               	movwf	??_main
  1379  0242  082A               	movf	??_main,w
  1380  0243  00F7               	movwf	Lcd_Set_Cursor@b
  1381  0244  3002               	movlw	2
  1382  0245  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1383  024A                     l1863:
  1384                           
  1385                           ;Lab02_main.c: 147:         else {
  1386  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1387  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1388  024C  0839               	movf	_display_decimal_2_s2,w
  1389  024D  3E30               	addlw	48
  1390  024E  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1391  0253                     l1865:
  1392                           
  1393                           ;Lab02_main.c: 150:     }
  1394  0253  300D               	movlw	13
  1395  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0256  00AA               	movwf	??_main
  1398  0257  082A               	movf	??_main,w
  1399  0258  00F7               	movwf	Lcd_Set_Cursor@b
  1400  0259  3002               	movlw	2
  1401  025A  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1402  025F                     l1867:
  1403                           
  1404                           ;Lab02_main.c: 151: 
  1405  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0261  0838               	movf	_display_unidad_s3,w
  1408  0262  3E30               	addlw	48
  1409  0263  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1410  0268                     l1869:
  1411                           
  1412                           ;Lab02_main.c: 152:     if (TXIF == 1){
  1413  0268  300F               	movlw	15
  1414  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1415  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1416  026B  00AA               	movwf	??_main
  1417  026C  082A               	movf	??_main,w
  1418  026D  00F7               	movwf	Lcd_Set_Cursor@b
  1419  026E  3002               	movlw	2
  1420  026F  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1421  0274                     l1871:
  1422                           
  1423                           ;Lab02_main.c: 153:         if (flag == 0){
  1424  0274  3030               	movlw	48
  1425  0275  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1426  027A                     l1873:
  1427                           
  1428                           ;Lab02_main.c: 154: 
  1429  027A  3010               	movlw	16
  1430  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1431  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1432  027D  00AA               	movwf	??_main
  1433  027E  082A               	movf	??_main,w
  1434  027F  00F7               	movwf	Lcd_Set_Cursor@b
  1435  0280  3002               	movlw	2
  1436  0281  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1437  0286                     l1875:
  1438                           
  1439                           ;Lab02_main.c: 155:             TXREG = display_unidad + 48;
  1440  0286  3030               	movlw	48
  1441  0287  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1442  028C  282C               	goto	l1801
  1443  028D  120A  118A  280C   	ljmp	start
  1444  0290                     __end_of_main:
  1445                           
  1446                           	psect	text1
  1447  049E                     __ptext1:	
  1448 ;; *************** function _setup *****************
  1449 ;; Defined at:
  1450 ;;		line 271 in file "Lab02_main.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1464 ;;      Params:         0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0
  1467 ;;      Totals:         0       0       0       0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    5
  1471 ;; This function calls:
  1472 ;;		_ADC
  1473 ;;		_LCD_display
  1474 ;;		_Lcd_Init
  1475 ;;		_USART
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _setup
  1483  049E                     _setup:
  1484  049E                     l1731:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1487                           
  1488  049E  1683               	bsf	3,5	;RP0=1, select bank1
  1489  049F  1303               	bcf	3,6	;RP1=0, select bank1
  1490  04A0  170F               	bsf	15,6	;volatile
  1491  04A1  168F               	bsf	15,5	;volatile
  1492  04A2  160F               	bsf	15,4	;volatile
  1493  04A3  140F               	bsf	15,0	;volatile
  1494  04A4                     l1733:
  1495  04A4  1683               	bsf	3,5	;RP0=1, select bank3
  1496  04A5  1703               	bsf	3,6	;RP1=1, select bank3
  1497  04A6  0189               	clrf	9	;volatile
  1498  04A7                     l1735:
  1499  04A7  3003               	movlw	3
  1500  04A8  0088               	movwf	8	;volatile
  1501  04A9                     l1737:
  1502  04A9  3003               	movlw	3
  1503  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  1504  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  1505  04AC  0085               	movwf	5	;volatile
  1506  04AD                     l1739:
  1507  04AD  3080               	movlw	128
  1508  04AE  0087               	movwf	7	;volatile
  1509  04AF                     l1741:
  1510  04AF  0188               	clrf	8	;volatile
  1511  04B0                     l1743:
  1512  04B0  0189               	clrf	9	;volatile
  1513  04B1                     l1745:
  1514  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1515  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1516  04B3  0185               	clrf	5	;volatile
  1517  04B4                     l1747:
  1518  04B4  0187               	clrf	7	;volatile
  1519  04B5                     l1749:
  1520  04B5  0188               	clrf	8	;volatile
  1521  04B6                     l1751:
  1522  04B6  0189               	clrf	9	;volatile
  1523  04B7                     l1753:
  1524  04B7  120A  118A  258B  120A  118A  	fcall	_ADC
  1525  04BC                     l1755:
  1526  04BC  178B               	bsf	11,7	;volatile
  1527  04BD                     l1757:
  1528  04BD  168B               	bsf	11,5	;volatile
  1529  04BE                     l1759:
  1530  04BE  110B               	bcf	11,2	;volatile
  1531  04BF                     l1761:
  1532  04BF  170B               	bsf	11,6	;volatile
  1533  04C0                     l1763:
  1534  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  1535  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  1536  04C2  170C               	bsf	12,6	;volatile
  1537  04C3                     l1765:
  1538  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1539  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1540  04C5  130C               	bcf	12,6	;volatile
  1541  04C6                     l1767:
  1542  04C6  120A  118A  2441  120A  118A  	fcall	_Lcd_Init
  1543  04CB                     l1769:
  1544  04CB  120A  118A  25A1  120A  118A  	fcall	_USART
  1545  04D0                     l1771:
  1546  04D0  120A  118A  236F  120A  118A  	fcall	_LCD_display
  1547  04D5                     l1773:
  1548  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  1549  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  1550  04D7  1281               	bcf	1,5	;volatile
  1551  04D8                     l1775:
  1552  04D8  1181               	bcf	1,3	;volatile
  1553  04D9                     l1777:
  1554  04D9  1501               	bsf	1,2	;volatile
  1555  04DA                     l1779:
  1556  04DA  1481               	bsf	1,1	;volatile
  1557  04DB                     l1781:
  1558  04DB  1401               	bsf	1,0	;volatile
  1559  04DC                     l1783:
  1560  04DC  300A               	movlw	10
  1561  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1562  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1563  04DF  0081               	movwf	1	;volatile
  1564  04E0                     l157:
  1565  04E0  0008               	return
  1566  04E1                     __end_of_setup:
  1567                           
  1568                           	psect	text2
  1569  05A1                     __ptext2:	
  1570 ;; *************** function _USART *****************
  1571 ;; Defined at:
  1572 ;;		line 11 in file "USART.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_setup
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _USART
  1602  05A1                     _USART:
  1603  05A1                     l1321:	
  1604                           ;incstack = 0
  1605                           ; Regs used in _USART: [wreg+status,2]
  1606                           
  1607                           
  1608                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  1609  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1610  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1611  05A3  1218               	bcf	24,4	;volatile
  1612                           
  1613                           ;USART.c: 14:     TXSTAbits.BRGH = 1;
  1614  05A4  1518               	bsf	24,2	;volatile
  1615                           
  1616                           ;USART.c: 16:     BAUDCTLbits.BRG16 = 1;
  1617  05A5  1683               	bsf	3,5	;RP0=1, select bank3
  1618  05A6  1703               	bsf	3,6	;RP1=1, select bank3
  1619  05A7  1587               	bsf	7,3	;volatile
  1620  05A8                     l1323:
  1621                           
  1622                           ;USART.c: 18:     SPBRG = 207;
  1623  05A8  30CF               	movlw	207
  1624  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  1625  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  1626  05AB  0099               	movwf	25	;volatile
  1627  05AC                     l1325:
  1628                           
  1629                           ;USART.c: 19:     SPBRGH = 0;
  1630  05AC  019A               	clrf	26	;volatile
  1631  05AD                     l1327:
  1632                           
  1633                           ;USART.c: 21:     RCSTAbits.SPEN = 1;
  1634  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1635  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1636  05AF  1798               	bsf	24,7	;volatile
  1637  05B0                     l1329:
  1638                           
  1639                           ;USART.c: 22:     RCSTAbits.RX9 = 0;
  1640  05B0  1318               	bcf	24,6	;volatile
  1641  05B1                     l1331:
  1642                           
  1643                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  1644  05B1  1618               	bsf	24,4	;volatile
  1645  05B2                     l1333:
  1646                           
  1647                           ;USART.c: 25:     TXSTAbits.TXEN = 1;
  1648  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  1649  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  1650  05B4  1698               	bsf	24,5	;volatile
  1651  05B5                     l211:
  1652  05B5  0008               	return
  1653  05B6                     __end_of_USART:
  1654                           
  1655                           	psect	text3
  1656  0441                     __ptext3:	
  1657 ;; *************** function _Lcd_Init *****************
  1658 ;; Defined at:
  1659 ;;		line 40 in file "LCD.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0
  1675 ;;      Temps:          0       2       0       0       0
  1676 ;;      Totals:         0       2       0       0       0
  1677 ;;Total ram usage:        2 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    3
  1680 ;; This function calls:
  1681 ;;		_Lcd_Cmd
  1682 ;;		_Lcd_Port
  1683 ;; This function is called by:
  1684 ;;		_setup
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _Lcd_Init
  1690  0441                     _Lcd_Init:
  1691  0441                     l1709:	
  1692                           ;incstack = 0
  1693                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1694                           
  1695                           
  1696                           ;LCD.c: 41:    _delay((unsigned long)((15)*(8000000/4000.0)));
  1697  0441  3027               	movlw	39
  1698  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0444  00A1               	movwf	??_Lcd_Init+1
  1701  0445  30F4               	movlw	244
  1702  0446  00A0               	movwf	??_Lcd_Init
  1703  0447                     u1067:
  1704  0447  0BA0               	decfsz	??_Lcd_Init,f
  1705  0448  2C47               	goto	u1067
  1706  0449  0BA1               	decfsz	??_Lcd_Init+1,f
  1707  044A  2C47               	goto	u1067
  1708  044B  0000               	nop
  1709  044C                     l1711:
  1710                           
  1711                           ;LCD.c: 42:   Lcd_Port(0x00);
  1712  044C  3000               	movlw	0
  1713  044D  120A  118A  25DF  120A  118A  	fcall	_Lcd_Port
  1714  0452                     l1713:
  1715                           
  1716                           ;LCD.c: 43:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1717  0452  3034               	movlw	52
  1718  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0455  00A1               	movwf	??_Lcd_Init+1
  1721  0456  30F1               	movlw	241
  1722  0457  00A0               	movwf	??_Lcd_Init
  1723  0458                     u1077:
  1724  0458  0BA0               	decfsz	??_Lcd_Init,f
  1725  0459  2C58               	goto	u1077
  1726  045A  0BA1               	decfsz	??_Lcd_Init+1,f
  1727  045B  2C58               	goto	u1077
  1728                           
  1729                           ;LCD.c: 44:   Lcd_Cmd(0x030);
  1730  045C  3030               	movlw	48
  1731  045D  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  1732  0462                     l1715:
  1733                           
  1734                           ;LCD.c: 45:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1735  0462  300D               	movlw	13
  1736  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0465  00A1               	movwf	??_Lcd_Init+1
  1739  0466  30FB               	movlw	251
  1740  0467  00A0               	movwf	??_Lcd_Init
  1741  0468                     u1087:
  1742  0468  0BA0               	decfsz	??_Lcd_Init,f
  1743  0469  2C68               	goto	u1087
  1744  046A  0BA1               	decfsz	??_Lcd_Init+1,f
  1745  046B  2C68               	goto	u1087
  1746  046C                     l1717:
  1747                           
  1748                           ;LCD.c: 46:   Lcd_Cmd(0x030);
  1749  046C  3030               	movlw	48
  1750  046D  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  1751                           
  1752                           ;LCD.c: 47:  _delay((unsigned long)((160)*(8000000/4000000.0)));
  1753  0472  3069               	movlw	105
  1754  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0475  00A0               	movwf	??_Lcd_Init
  1757  0476                     u1097:
  1758  0476  0BA0               	decfsz	??_Lcd_Init,f
  1759  0477  2C76               	goto	u1097
  1760  0478  2C79               	nop2
  1761  0479                     l1719:
  1762                           
  1763                           ;LCD.c: 48:   Lcd_Cmd(0x030);
  1764  0479  3030               	movlw	48
  1765  047A  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  1766  047F                     l1721:
  1767                           
  1768                           ;LCD.c: 50:   Lcd_Cmd(0x038);
  1769  047F  3038               	movlw	56
  1770  0480  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  1771  0485                     l1723:
  1772                           
  1773                           ;LCD.c: 51:   Lcd_Cmd(0x010);
  1774  0485  3010               	movlw	16
  1775  0486  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  1776  048B                     l1725:
  1777                           
  1778                           ;LCD.c: 52:   Lcd_Cmd(0x001);
  1779  048B  3001               	movlw	1
  1780  048C  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  1781  0491                     l1727:
  1782                           
  1783                           ;LCD.c: 53:   Lcd_Cmd(0x006);
  1784  0491  3006               	movlw	6
  1785  0492  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  1786  0497                     l1729:
  1787                           
  1788                           ;LCD.c: 55:   Lcd_Cmd(0x0C);
  1789  0497  300C               	movlw	12
  1790  0498  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  1791  049D                     l189:
  1792  049D  0008               	return
  1793  049E                     __end_of_Lcd_Init:
  1794                           
  1795                           	psect	text4
  1796  036F                     __ptext4:	
  1797 ;; *************** function _LCD_display *****************
  1798 ;; Defined at:
  1799 ;;		line 251 in file "Lab02_main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0
  1815 ;;      Temps:          0       1       0       0       0
  1816 ;;      Totals:         0       1       0       0       0
  1817 ;;Total ram usage:        1 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    4
  1820 ;; This function calls:
  1821 ;;		_Lcd_Set_Cursor
  1822 ;;		_Lcd_Write_String
  1823 ;; This function is called by:
  1824 ;;		_setup
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _LCD_display
  1830  036F                     _LCD_display:
  1831  036F                     l1689:	
  1832                           ;incstack = 0
  1833                           ; Regs used in _LCD_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1834                           
  1835                           
  1836                           ;Lab02_main.c: 253: 
  1837  036F  3003               	movlw	3
  1838  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0372  00A3               	movwf	??_LCD_display
  1841  0373  0823               	movf	??_LCD_display,w
  1842  0374  00F7               	movwf	Lcd_Set_Cursor@b
  1843  0375  3001               	movlw	1
  1844  0376  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1845  037B                     l1691:
  1846                           
  1847                           ;Lab02_main.c: 254:     LCD_display();
  1848  037B  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1849  037C  120A  118A  250C  120A  118A  	fcall	_Lcd_Write_String
  1850  0381                     l1693:
  1851                           
  1852                           ;Lab02_main.c: 255: 
  1853  0381  01F7               	clrf	Lcd_Set_Cursor@b
  1854  0382  0AF7               	incf	Lcd_Set_Cursor@b,f
  1855  0383  3002               	movlw	2
  1856  0384  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1857                           
  1858                           ;Lab02_main.c: 256: 
  1859  0389  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1860  038A  120A  118A  250C  120A  118A  	fcall	_Lcd_Write_String
  1861  038F                     l1695:
  1862                           
  1863                           ;Lab02_main.c: 257:     OPTION_REGbits.T0CS = 0;
  1864  038F  3008               	movlw	8
  1865  0390  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0391  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0392  00A3               	movwf	??_LCD_display
  1868  0393  0823               	movf	??_LCD_display,w
  1869  0394  00F7               	movwf	Lcd_Set_Cursor@b
  1870  0395  3001               	movlw	1
  1871  0396  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1872  039B                     l1697:
  1873                           
  1874                           ;Lab02_main.c: 258:     OPTION_REGbits.PSA = 0;
  1875  039B  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1876  039C  120A  118A  250C  120A  118A  	fcall	_Lcd_Write_String
  1877                           
  1878                           ;Lab02_main.c: 259:     OPTION_REGbits.PS2 = 1;
  1879  03A1  3007               	movlw	7
  1880  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1881  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1882  03A4  00A3               	movwf	??_LCD_display
  1883  03A5  0823               	movf	??_LCD_display,w
  1884  03A6  00F7               	movwf	Lcd_Set_Cursor@b
  1885  03A7  3002               	movlw	2
  1886  03A8  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1887  03AD                     l1699:
  1888                           
  1889                           ;Lab02_main.c: 260:     OPTION_REGbits.PS1 = 1;
  1890  03AD  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1891  03AE  120A  118A  250C  120A  118A  	fcall	_Lcd_Write_String
  1892  03B3                     l1701:
  1893                           
  1894                           ;Lab02_main.c: 261:     OPTION_REGbits.PS0 = 1;
  1895  03B3  300E               	movlw	14
  1896  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1897  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1898  03B6  00A3               	movwf	??_LCD_display
  1899  03B7  0823               	movf	??_LCD_display,w
  1900  03B8  00F7               	movwf	Lcd_Set_Cursor@b
  1901  03B9  3001               	movlw	1
  1902  03BA  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1903                           
  1904                           ;Lab02_main.c: 262:     TMR0 = 10;
  1905  03BF  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1906  03C0  120A  118A  250C  120A  118A  	fcall	_Lcd_Write_String
  1907  03C5                     l1703:
  1908                           
  1909                           ;Lab02_main.c: 263: }
  1910  03C5  300D               	movlw	13
  1911  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1912  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1913  03C8  00A3               	movwf	??_LCD_display
  1914  03C9  0823               	movf	??_LCD_display,w
  1915  03CA  00F7               	movwf	Lcd_Set_Cursor@b
  1916  03CB  3002               	movlw	2
  1917  03CC  120A  118A  2535  120A  118A  	fcall	_Lcd_Set_Cursor
  1918  03D1                     l1705:
  1919  03D1  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1920  03D2  120A  118A  250C  120A  118A  	fcall	_Lcd_Write_String
  1921  03D7                     l154:
  1922  03D7  0008               	return
  1923  03D8                     __end_of_LCD_display:
  1924                           
  1925                           	psect	text5
  1926  050C                     __ptext5:	
  1927 ;; *************** function _Lcd_Write_String *****************
  1928 ;; Defined at:
  1929 ;;		line 67 in file "LCD.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  a               1    wreg     PTR unsigned char 
  1932 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  1933 ;;		 -> STR_2(5), STR_1(3), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  a               1    2[BANK0 ] PTR unsigned char 
  1936 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  1937 ;;		 -> STR_2(5), STR_1(3), 
  1938 ;;  i               2    0[BANK0 ] int 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1948 ;;      Params:         0       0       0       0       0
  1949 ;;      Locals:         0       3       0       0       0
  1950 ;;      Temps:          0       0       0       0       0
  1951 ;;      Totals:         0       3       0       0       0
  1952 ;;Total ram usage:        3 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    3
  1955 ;; This function calls:
  1956 ;;		_Lcd_Write_Char
  1957 ;; This function is called by:
  1958 ;;		_LCD_display
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _Lcd_Write_String
  1964  050C                     _Lcd_Write_String:
  1965                           
  1966                           ;incstack = 0
  1967                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1968                           ;Lcd_Write_String@a stored from wreg
  1969  050C  1283               	bcf	3,5	;RP0=0, select bank0
  1970  050D  1303               	bcf	3,6	;RP1=0, select bank0
  1971  050E  00A2               	movwf	Lcd_Write_String@a
  1972  050F                     l1681:
  1973                           
  1974                           ;LCD.c: 67: void Lcd_Write_String(char *a);LCD.c: 68: {;LCD.c: 69:  int i;;LCD.c: 70:  f
      +                          or(i=0;a[i]!='\0';i++)
  1975  050F  01A0               	clrf	Lcd_Write_String@i
  1976  0510  01A1               	clrf	Lcd_Write_String@i+1
  1977  0511  2D27               	goto	l1687
  1978  0512                     l1683:
  1979                           
  1980                           ;LCD.c: 71:     Lcd_Write_Char(a[i]);
  1981  0512  0820               	movf	Lcd_Write_String@i,w
  1982  0513  0722               	addwf	Lcd_Write_String@a,w
  1983  0514  0084               	movwf	4
  1984  0515  120A  118A  25CB  120A  118A  	fcall	stringdir
  1985  051A  120A  118A  2575  120A  118A  	fcall	_Lcd_Write_Char
  1986  051F                     l1685:
  1987  051F  3001               	movlw	1
  1988  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0522  07A0               	addwf	Lcd_Write_String@i,f
  1991  0523  1803               	skipnc
  1992  0524  0AA1               	incf	Lcd_Write_String@i+1,f
  1993  0525  3000               	movlw	0
  1994  0526  07A1               	addwf	Lcd_Write_String@i+1,f
  1995  0527                     l1687:
  1996  0527  0820               	movf	Lcd_Write_String@i,w
  1997  0528  0722               	addwf	Lcd_Write_String@a,w
  1998  0529  0084               	movwf	4
  1999  052A  120A  118A  25CB  120A  118A  	fcall	stringdir
  2000  052F  3A00               	xorlw	0
  2001  0530  1D03               	skipz
  2002  0531  2D33               	goto	u931
  2003  0532  2D34               	goto	u930
  2004  0533                     u931:
  2005  0533  2D12               	goto	l1683
  2006  0534                     u930:
  2007  0534                     l198:
  2008  0534  0008               	return
  2009  0535                     __end_of_Lcd_Write_String:
  2010                           
  2011                           	psect	text6
  2012  0575                     __ptext6:	
  2013 ;; *************** function _Lcd_Write_Char *****************
  2014 ;; Defined at:
  2015 ;;		line 58 in file "LCD.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  a               1    wreg     unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  a               1    5[COMMON] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2029 ;;      Params:         0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0
  2031 ;;      Temps:          1       0       0       0       0
  2032 ;;      Totals:         2       0       0       0       0
  2033 ;;Total ram usage:        2 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    2
  2036 ;; This function calls:
  2037 ;;		_Lcd_Port
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;;		_Lcd_Write_String
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _Lcd_Write_Char
  2046  0575                     _Lcd_Write_Char:
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2050                           ;Lcd_Write_Char@a stored from wreg
  2051  0575  00F5               	movwf	Lcd_Write_Char@a
  2052  0576                     l1649:
  2053                           
  2054                           ;LCD.c: 58: void Lcd_Write_Char(char a);LCD.c: 59: {;LCD.c: 60:     RE0 = 1;
  2055  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0578  1409               	bsf	9,0	;volatile
  2058  0579                     l1651:
  2059                           
  2060                           ;LCD.c: 61:    Lcd_Port(a);
  2061  0579  0875               	movf	Lcd_Write_Char@a,w
  2062  057A  120A  118A  25DF  120A  118A  	fcall	_Lcd_Port
  2063  057F                     l1653:
  2064                           
  2065                           ;LCD.c: 62:    RE1 = 1;
  2066  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0581  1489               	bsf	9,1	;volatile
  2069  0582                     l1655:
  2070                           
  2071                           ;LCD.c: 63:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2072  0582  301A               	movlw	26
  2073  0583  00F4               	movwf	??_Lcd_Write_Char
  2074  0584                     u1107:
  2075  0584  0BF4               	decfsz	??_Lcd_Write_Char,f
  2076  0585  2D84               	goto	u1107
  2077  0586  0000               	nop
  2078  0587                     l1657:
  2079                           
  2080                           ;LCD.c: 64:    RE1 = 0;
  2081  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0589  1089               	bcf	9,1	;volatile
  2084  058A                     l192:
  2085  058A  0008               	return
  2086  058B                     __end_of_Lcd_Write_Char:
  2087                           
  2088                           	psect	text7
  2089  0535                     __ptext7:	
  2090 ;; *************** function _Lcd_Set_Cursor *****************
  2091 ;; Defined at:
  2092 ;;		line 25 in file "LCD.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  a               1    wreg     unsigned char 
  2095 ;;  b               1    7[COMMON] unsigned char 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  a               1    1[BANK0 ] unsigned char 
  2098 ;;  temp            1    2[BANK0 ] unsigned char 
  2099 ;;  y               1    0        unsigned char 
  2100 ;;  z               1    0        unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         1       0       0       0       0
  2111 ;;      Locals:         0       2       0       0       0
  2112 ;;      Temps:          0       1       0       0       0
  2113 ;;      Totals:         1       3       0       0       0
  2114 ;;Total ram usage:        4 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    3
  2117 ;; This function calls:
  2118 ;;		_Lcd_Cmd
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;;		_LCD_display
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _Lcd_Set_Cursor
  2127  0535                     _Lcd_Set_Cursor:
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2131                           ;Lcd_Set_Cursor@a stored from wreg
  2132  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0537  00A1               	movwf	Lcd_Set_Cursor@a
  2135  0538                     l1669:
  2136                           
  2137                           ;LCD.c: 25: void Lcd_Set_Cursor(char a, char b);LCD.c: 26: {;LCD.c: 27:  char temp,z,y;;
      +                          LCD.c: 28:  if(a == 1)
  2138  0538  0321               	decf	Lcd_Set_Cursor@a,w
  2139  0539  1D03               	btfss	3,2
  2140  053A  2D3C               	goto	u911
  2141  053B  2D3D               	goto	u910
  2142  053C                     u911:
  2143  053C  2D49               	goto	l1675
  2144  053D                     u910:
  2145  053D                     l1671:
  2146                           
  2147                           ;LCD.c: 29:  {;LCD.c: 30:    temp = 0x80 + b - 1;
  2148  053D  0877               	movf	Lcd_Set_Cursor@b,w
  2149  053E  3E7F               	addlw	127
  2150  053F  00A0               	movwf	??_Lcd_Set_Cursor
  2151  0540  0820               	movf	??_Lcd_Set_Cursor,w
  2152  0541  00A2               	movwf	Lcd_Set_Cursor@temp
  2153  0542                     l1673:
  2154                           
  2155                           ;LCD.c: 31:   Lcd_Cmd(temp);
  2156  0542  0822               	movf	Lcd_Set_Cursor@temp,w
  2157  0543  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  2158                           
  2159                           ;LCD.c: 32:  }
  2160  0548  2D5A               	goto	l186
  2161  0549                     l1675:
  2162  0549  3002               	movlw	2
  2163  054A  0621               	xorwf	Lcd_Set_Cursor@a,w
  2164  054B  1D03               	btfss	3,2
  2165  054C  2D4E               	goto	u921
  2166  054D  2D4F               	goto	u920
  2167  054E                     u921:
  2168  054E  2D5A               	goto	l186
  2169  054F                     u920:
  2170  054F                     l1677:
  2171                           
  2172                           ;LCD.c: 34:  {;LCD.c: 35:   temp = 0xC0 + b - 1;
  2173  054F  0877               	movf	Lcd_Set_Cursor@b,w
  2174  0550  3EBF               	addlw	191
  2175  0551  00A0               	movwf	??_Lcd_Set_Cursor
  2176  0552  0820               	movf	??_Lcd_Set_Cursor,w
  2177  0553  00A2               	movwf	Lcd_Set_Cursor@temp
  2178  0554                     l1679:
  2179                           
  2180                           ;LCD.c: 36:   Lcd_Cmd(temp);
  2181  0554  0822               	movf	Lcd_Set_Cursor@temp,w
  2182  0555  120A  118A  255B  120A  118A  	fcall	_Lcd_Cmd
  2183  055A                     l186:
  2184  055A  0008               	return
  2185  055B                     __end_of_Lcd_Set_Cursor:
  2186                           
  2187                           	psect	text8
  2188  055B                     __ptext8:	
  2189 ;; *************** function _Lcd_Cmd *****************
  2190 ;; Defined at:
  2191 ;;		line 15 in file "LCD.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  a               1    wreg     unsigned char 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  a               1    6[COMMON] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       0       0       0       0
  2206 ;;      Locals:         1       0       0       0       0
  2207 ;;      Temps:          2       0       0       0       0
  2208 ;;      Totals:         3       0       0       0       0
  2209 ;;Total ram usage:        3 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    2
  2212 ;; This function calls:
  2213 ;;		_Lcd_Port
  2214 ;; This function is called by:
  2215 ;;		_Lcd_Set_Cursor
  2216 ;;		_Lcd_Init
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _Lcd_Cmd
  2222  055B                     _Lcd_Cmd:
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2226                           ;Lcd_Cmd@a stored from wreg
  2227  055B  00F6               	movwf	Lcd_Cmd@a
  2228  055C                     l1659:
  2229                           
  2230                           ;LCD.c: 15: void Lcd_Cmd(char a);LCD.c: 16: {;LCD.c: 17:  RE0 = 0;
  2231  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2232  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2233  055E  1009               	bcf	9,0	;volatile
  2234  055F                     l1661:
  2235                           
  2236                           ;LCD.c: 18:  Lcd_Port(a);
  2237  055F  0876               	movf	Lcd_Cmd@a,w
  2238  0560  120A  118A  25DF  120A  118A  	fcall	_Lcd_Port
  2239  0565                     l1663:
  2240                           
  2241                           ;LCD.c: 19:  RE1 = 1;
  2242  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0567  1489               	bsf	9,1	;volatile
  2245  0568                     l1665:
  2246                           
  2247                           ;LCD.c: 21:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2248  0568  301A               	movlw	26
  2249  0569  00F5               	movwf	??_Lcd_Cmd+1
  2250  056A  30F8               	movlw	248
  2251  056B  00F4               	movwf	??_Lcd_Cmd
  2252  056C                     u1117:
  2253  056C  0BF4               	decfsz	??_Lcd_Cmd,f
  2254  056D  2D6C               	goto	u1117
  2255  056E  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2256  056F  2D6C               	goto	u1117
  2257  0570  0000               	nop
  2258  0571                     l1667:
  2259                           
  2260                           ;LCD.c: 22:     RE1 = 0;
  2261  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0573  1089               	bcf	9,1	;volatile
  2264  0574                     l180:
  2265  0574  0008               	return
  2266  0575                     __end_of_Lcd_Cmd:
  2267                           
  2268                           	psect	text9
  2269  05DF                     __ptext9:	
  2270 ;; *************** function _Lcd_Port *****************
  2271 ;; Defined at:
  2272 ;;		line 10 in file "LCD.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  a               1    wreg     unsigned char 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  a               1    3[COMMON] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2286 ;;      Params:         0       0       0       0       0
  2287 ;;      Locals:         1       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0
  2289 ;;      Totals:         1       0       0       0       0
  2290 ;;Total ram usage:        1 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_Lcd_Cmd
  2297 ;;		_Lcd_Init
  2298 ;;		_Lcd_Write_Char
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           
  2303                           ;psect for function _Lcd_Port
  2304  05DF                     _Lcd_Port:
  2305                           
  2306                           ;incstack = 0
  2307                           ; Regs used in _Lcd_Port: [wreg]
  2308                           ;Lcd_Port@a stored from wreg
  2309  05DF  00F3               	movwf	Lcd_Port@a
  2310  05E0                     l1647:
  2311                           
  2312                           ;LCD.c: 10: void Lcd_Port(char a);LCD.c: 11: {;LCD.c: 12:  PORTD = a;
  2313  05E0  0873               	movf	Lcd_Port@a,w
  2314  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2315  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2316  05E3  0088               	movwf	8	;volatile
  2317  05E4                     l177:
  2318  05E4  0008               	return
  2319  05E5                     __end_of_Lcd_Port:
  2320                           
  2321                           	psect	text10
  2322  058B                     __ptext10:	
  2323 ;; *************** function _ADC *****************
  2324 ;; Defined at:
  2325 ;;		line 16 in file "ADC.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          1       0       0       0       0
  2342 ;;      Totals:         1       0       0       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    1
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_setup
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function _ADC
  2355  058B                     _ADC:
  2356  058B                     l1287:	
  2357                           ;incstack = 0
  2358                           ; Regs used in _ADC: [wreg+status,2+status,0]
  2359                           
  2360                           
  2361                           ;ADC.c: 18:         ADCON1bits.ADFM = 0;
  2362  058B  1683               	bsf	3,5	;RP0=1, select bank1
  2363  058C  1303               	bcf	3,6	;RP1=0, select bank1
  2364  058D  139F               	bcf	31,7	;volatile
  2365                           
  2366                           ;ADC.c: 19:         ADCON1bits.VCFG0 = 0;
  2367  058E  121F               	bcf	31,4	;volatile
  2368                           
  2369                           ;ADC.c: 20:         ADCON1bits.VCFG1 = 0;
  2370  058F  129F               	bcf	31,5	;volatile
  2371  0590                     l1289:
  2372                           
  2373                           ;ADC.c: 22:         ADCON0bits.ADCS = 0b10;
  2374  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0592  081F               	movf	31,w	;volatile
  2377  0593  393F               	andlw	-193
  2378  0594  3880               	iorlw	128
  2379  0595  009F               	movwf	31	;volatile
  2380                           
  2381                           ;ADC.c: 23:         ADCON0bits.CHS = 0;
  2382  0596  30C3               	movlw	-61
  2383  0597  059F               	andwf	31,f	;volatile
  2384  0598                     l1291:
  2385                           
  2386                           ;ADC.c: 24:         ADCON0bits.ADON = 1;
  2387  0598  141F               	bsf	31,0	;volatile
  2388  0599                     l1293:
  2389                           
  2390                           ;ADC.c: 25:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2391  0599  3021               	movlw	33
  2392  059A  00F3               	movwf	??_ADC
  2393  059B                     u1127:
  2394  059B  0BF3               	decfsz	??_ADC,f
  2395  059C  2D9B               	goto	u1127
  2396  059D                     l1295:
  2397                           
  2398                           ;ADC.c: 26:         ADCON0bits.GO = 1;
  2399  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2400  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2401  059F  149F               	bsf	31,1	;volatile
  2402  05A0                     l166:
  2403  05A0  0008               	return
  2404  05A1                     __end_of_ADC:
  2405                           
  2406                           	psect	text11
  2407  04E1                     __ptext11:	
  2408 ;; *************** function ___wmul *****************
  2409 ;; Defined at:
  2410 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  multiplier      2    3[COMMON] unsigned int 
  2413 ;;  multiplicand    2    5[COMMON] unsigned int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  product         2    0[BANK0 ] unsigned int 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2    3[COMMON] unsigned int 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         4       0       0       0       0
  2426 ;;      Locals:         0       2       0       0       0
  2427 ;;      Temps:          0       0       0       0       0
  2428 ;;      Totals:         4       2       0       0       0
  2429 ;;Total ram usage:        6 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function ___wmul
  2441  04E1                     ___wmul:
  2442  04E1                     l1785:	
  2443                           ;incstack = 0
  2444                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2445                           
  2446  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2447  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2448  04E3  01A0               	clrf	___wmul@product
  2449  04E4  01A1               	clrf	___wmul@product+1
  2450  04E5                     l1787:
  2451  04E5  1C73               	btfss	___wmul@multiplier,0
  2452  04E6  2CE8               	goto	u941
  2453  04E7  2CE9               	goto	u940
  2454  04E8                     u941:
  2455  04E8  2CF1               	goto	l297
  2456  04E9                     u940:
  2457  04E9                     l1789:
  2458  04E9  0875               	movf	___wmul@multiplicand,w
  2459  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2460  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2461  04EC  07A0               	addwf	___wmul@product,f
  2462  04ED  1803               	skipnc
  2463  04EE  0AA1               	incf	___wmul@product+1,f
  2464  04EF  0876               	movf	___wmul@multiplicand+1,w
  2465  04F0  07A1               	addwf	___wmul@product+1,f
  2466  04F1                     l297:
  2467  04F1  3001               	movlw	1
  2468  04F2                     u955:
  2469  04F2  1003               	clrc
  2470  04F3  0DF5               	rlf	___wmul@multiplicand,f
  2471  04F4  0DF6               	rlf	___wmul@multiplicand+1,f
  2472  04F5  3EFF               	addlw	-1
  2473  04F6  1D03               	skipz
  2474  04F7  2CF2               	goto	u955
  2475  04F8                     l1791:
  2476  04F8  3001               	movlw	1
  2477  04F9                     u965:
  2478  04F9  1003               	clrc
  2479  04FA  0CF4               	rrf	___wmul@multiplier+1,f
  2480  04FB  0CF3               	rrf	___wmul@multiplier,f
  2481  04FC  3EFF               	addlw	-1
  2482  04FD  1D03               	skipz
  2483  04FE  2CF9               	goto	u965
  2484  04FF                     l1793:
  2485  04FF  0873               	movf	___wmul@multiplier,w
  2486  0500  0474               	iorwf	___wmul@multiplier+1,w
  2487  0501  1D03               	btfss	3,2
  2488  0502  2D04               	goto	u971
  2489  0503  2D05               	goto	u970
  2490  0504                     u971:
  2491  0504  2CE5               	goto	l1787
  2492  0505                     u970:
  2493  0505                     l1795:
  2494  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0507  0821               	movf	___wmul@product+1,w
  2497  0508  00F4               	movwf	?___wmul+1
  2498  0509  0820               	movf	___wmul@product,w
  2499  050A  00F3               	movwf	?___wmul
  2500  050B                     l299:
  2501  050B  0008               	return
  2502  050C                     __end_of___wmul:
  2503                           
  2504                           	psect	text12
  2505  05B6                     __ptext12:	
  2506 ;; *************** function ___bmul *****************
  2507 ;; Defined at:
  2508 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  multiplier      1    wreg     unsigned char 
  2511 ;;  multiplicand    1    3[COMMON] unsigned char 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  multiplier      1    6[COMMON] unsigned char 
  2514 ;;  product         1    5[COMMON] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      unsigned char 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         1       0       0       0       0
  2525 ;;      Locals:         2       0       0       0       0
  2526 ;;      Temps:          1       0       0       0       0
  2527 ;;      Totals:         4       0       0       0       0
  2528 ;;Total ram usage:        4 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function ___bmul
  2540  05B6                     ___bmul:
  2541                           
  2542                           ;incstack = 0
  2543                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2544                           ;___bmul@multiplier stored from wreg
  2545  05B6  00F6               	movwf	___bmul@multiplier
  2546  05B7                     l1405:
  2547  05B7  01F5               	clrf	___bmul@product
  2548  05B8                     l1407:
  2549  05B8  1C76               	btfss	___bmul@multiplier,0
  2550  05B9  2DBB               	goto	u531
  2551  05BA  2DBC               	goto	u530
  2552  05BB                     u531:
  2553  05BB  2DC0               	goto	l1411
  2554  05BC                     u530:
  2555  05BC                     l1409:
  2556  05BC  0873               	movf	___bmul@multiplicand,w
  2557  05BD  00F4               	movwf	??___bmul
  2558  05BE  0874               	movf	??___bmul,w
  2559  05BF  07F5               	addwf	___bmul@product,f
  2560  05C0                     l1411:
  2561  05C0  1003               	clrc
  2562  05C1  0DF3               	rlf	___bmul@multiplicand,f
  2563  05C2                     l1413:
  2564  05C2  1003               	clrc
  2565  05C3  0CF6               	rrf	___bmul@multiplier,f
  2566  05C4  0876               	movf	___bmul@multiplier,w
  2567  05C5  1D03               	btfss	3,2
  2568  05C6  2DC8               	goto	u541
  2569  05C7  2DC9               	goto	u540
  2570  05C8                     u541:
  2571  05C8  2DB8               	goto	l1407
  2572  05C9                     u540:
  2573  05C9                     l1415:
  2574  05C9  0875               	movf	___bmul@product,w
  2575  05CA                     l323:
  2576  05CA  0008               	return
  2577  05CB                     __end_of___bmul:
  2578                           
  2579                           	psect	text13
  2580  03D8                     __ptext13:	
  2581 ;; *************** function ___awdiv *****************
  2582 ;; Defined at:
  2583 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  divisor         2    2[BANK0 ] int 
  2586 ;;  dividend        2    4[BANK0 ] int 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  quotient        2    8[BANK0 ] int 
  2589 ;;  sign            1    7[BANK0 ] unsigned char 
  2590 ;;  counter         1    6[BANK0 ] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  2    2[BANK0 ] int 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       4       0       0       0
  2601 ;;      Locals:         0       4       0       0       0
  2602 ;;      Temps:          1       0       0       0       0
  2603 ;;      Totals:         1       8       0       0       0
  2604 ;;Total ram usage:        9 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function ___awdiv
  2616  03D8                     ___awdiv:
  2617  03D8                     l1419:	
  2618                           ;incstack = 0
  2619                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2620                           
  2621  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2622  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2623  03DA  01A7               	clrf	___awdiv@sign
  2624  03DB                     l1421:
  2625  03DB  1FA3               	btfss	___awdiv@divisor+1,7
  2626  03DC  2BDE               	goto	u551
  2627  03DD  2BDF               	goto	u550
  2628  03DE                     u551:
  2629  03DE  2BE6               	goto	l1427
  2630  03DF                     u550:
  2631  03DF                     l1423:
  2632  03DF  09A2               	comf	___awdiv@divisor,f
  2633  03E0  09A3               	comf	___awdiv@divisor+1,f
  2634  03E1  0AA2               	incf	___awdiv@divisor,f
  2635  03E2  1903               	skipnz
  2636  03E3  0AA3               	incf	___awdiv@divisor+1,f
  2637  03E4                     l1425:
  2638  03E4  01A7               	clrf	___awdiv@sign
  2639  03E5  0AA7               	incf	___awdiv@sign,f
  2640  03E6                     l1427:
  2641  03E6  1FA5               	btfss	___awdiv@dividend+1,7
  2642  03E7  2BE9               	goto	u561
  2643  03E8  2BEA               	goto	u560
  2644  03E9                     u561:
  2645  03E9  2BF3               	goto	l1433
  2646  03EA                     u560:
  2647  03EA                     l1429:
  2648  03EA  09A4               	comf	___awdiv@dividend,f
  2649  03EB  09A5               	comf	___awdiv@dividend+1,f
  2650  03EC  0AA4               	incf	___awdiv@dividend,f
  2651  03ED  1903               	skipnz
  2652  03EE  0AA5               	incf	___awdiv@dividend+1,f
  2653  03EF                     l1431:
  2654  03EF  3001               	movlw	1
  2655  03F0  00F7               	movwf	??___awdiv
  2656  03F1  0877               	movf	??___awdiv,w
  2657  03F2  06A7               	xorwf	___awdiv@sign,f
  2658  03F3                     l1433:
  2659  03F3  01A8               	clrf	___awdiv@quotient
  2660  03F4  01A9               	clrf	___awdiv@quotient+1
  2661  03F5                     l1435:
  2662  03F5  0822               	movf	___awdiv@divisor,w
  2663  03F6  0423               	iorwf	___awdiv@divisor+1,w
  2664  03F7  1903               	btfsc	3,2
  2665  03F8  2BFA               	goto	u571
  2666  03F9  2BFB               	goto	u570
  2667  03FA                     u571:
  2668  03FA  2C32               	goto	l1455
  2669  03FB                     u570:
  2670  03FB                     l1437:
  2671  03FB  01A6               	clrf	___awdiv@counter
  2672  03FC  0AA6               	incf	___awdiv@counter,f
  2673  03FD  2C09               	goto	l1443
  2674  03FE                     l1439:
  2675  03FE  3001               	movlw	1
  2676  03FF                     u585:
  2677  03FF  1003               	clrc
  2678  0400  0DA2               	rlf	___awdiv@divisor,f
  2679  0401  0DA3               	rlf	___awdiv@divisor+1,f
  2680  0402  3EFF               	addlw	-1
  2681  0403  1D03               	skipz
  2682  0404  2BFF               	goto	u585
  2683  0405                     l1441:
  2684  0405  3001               	movlw	1
  2685  0406  00F7               	movwf	??___awdiv
  2686  0407  0877               	movf	??___awdiv,w
  2687  0408  07A6               	addwf	___awdiv@counter,f
  2688  0409                     l1443:
  2689  0409  1FA3               	btfss	___awdiv@divisor+1,7
  2690  040A  2C0C               	goto	u591
  2691  040B  2C0D               	goto	u590
  2692  040C                     u591:
  2693  040C  2BFE               	goto	l1439
  2694  040D                     u590:
  2695  040D                     l1445:
  2696  040D  3001               	movlw	1
  2697  040E                     u605:
  2698  040E  1003               	clrc
  2699  040F  0DA8               	rlf	___awdiv@quotient,f
  2700  0410  0DA9               	rlf	___awdiv@quotient+1,f
  2701  0411  3EFF               	addlw	-1
  2702  0412  1D03               	skipz
  2703  0413  2C0E               	goto	u605
  2704  0414  0823               	movf	___awdiv@divisor+1,w
  2705  0415  0225               	subwf	___awdiv@dividend+1,w
  2706  0416  1D03               	skipz
  2707  0417  2C1A               	goto	u615
  2708  0418  0822               	movf	___awdiv@divisor,w
  2709  0419  0224               	subwf	___awdiv@dividend,w
  2710  041A                     u615:
  2711  041A  1C03               	skipc
  2712  041B  2C1D               	goto	u611
  2713  041C  2C1E               	goto	u610
  2714  041D                     u611:
  2715  041D  2C25               	goto	l1451
  2716  041E                     u610:
  2717  041E                     l1447:
  2718  041E  0822               	movf	___awdiv@divisor,w
  2719  041F  02A4               	subwf	___awdiv@dividend,f
  2720  0420  0823               	movf	___awdiv@divisor+1,w
  2721  0421  1C03               	skipc
  2722  0422  03A5               	decf	___awdiv@dividend+1,f
  2723  0423  02A5               	subwf	___awdiv@dividend+1,f
  2724  0424                     l1449:
  2725  0424  1428               	bsf	___awdiv@quotient,0
  2726  0425                     l1451:
  2727  0425  3001               	movlw	1
  2728  0426                     u625:
  2729  0426  1003               	clrc
  2730  0427  0CA3               	rrf	___awdiv@divisor+1,f
  2731  0428  0CA2               	rrf	___awdiv@divisor,f
  2732  0429  3EFF               	addlw	-1
  2733  042A  1D03               	skipz
  2734  042B  2C26               	goto	u625
  2735  042C                     l1453:
  2736  042C  3001               	movlw	1
  2737  042D  02A6               	subwf	___awdiv@counter,f
  2738  042E  1D03               	btfss	3,2
  2739  042F  2C31               	goto	u631
  2740  0430  2C32               	goto	u630
  2741  0431                     u631:
  2742  0431  2C0D               	goto	l1445
  2743  0432                     u630:
  2744  0432                     l1455:
  2745  0432  0827               	movf	___awdiv@sign,w
  2746  0433  1903               	btfsc	3,2
  2747  0434  2C36               	goto	u641
  2748  0435  2C37               	goto	u640
  2749  0436                     u641:
  2750  0436  2C3C               	goto	l1459
  2751  0437                     u640:
  2752  0437                     l1457:
  2753  0437  09A8               	comf	___awdiv@quotient,f
  2754  0438  09A9               	comf	___awdiv@quotient+1,f
  2755  0439  0AA8               	incf	___awdiv@quotient,f
  2756  043A  1903               	skipnz
  2757  043B  0AA9               	incf	___awdiv@quotient+1,f
  2758  043C                     l1459:
  2759  043C  0829               	movf	___awdiv@quotient+1,w
  2760  043D  00A3               	movwf	?___awdiv+1
  2761  043E  0828               	movf	___awdiv@quotient,w
  2762  043F  00A2               	movwf	?___awdiv
  2763  0440                     l450:
  2764  0440  0008               	return
  2765  0441                     __end_of___awdiv:
  2766                           
  2767                           	psect	text14
  2768  0290                     __ptext14:	
  2769 ;; *************** function _isr *****************
  2770 ;; Defined at:
  2771 ;;		line 162 in file "Lab02_main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0
  2787 ;;      Temps:          3       0       0       0       0
  2788 ;;      Totals:         3       0       0       0       0
  2789 ;;Total ram usage:        3 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		Interrupt level 1
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _isr
  2800  0290                     _isr:
  2801  0290                     i1l1541:
  2802                           
  2803                           ;Lab02_main.c: 163:         } else if (flag == 3){
  2804  0290  1D0B               	btfss	11,2	;volatile
  2805  0291  2A93               	goto	u73_21
  2806  0292  2A94               	goto	u73_20
  2807  0293                     u73_21:
  2808  0293  2A9B               	goto	i1l1547
  2809  0294                     u73_20:
  2810  0294                     i1l1543:
  2811                           
  2812                           ;Lab02_main.c: 164:             TXREG = display_decimal_2 + 48;
  2813  0294  3001               	movlw	1
  2814  0295  00F0               	movwf	??_isr
  2815  0296  0870               	movf	??_isr,w
  2816  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2818  0299  07BF               	addwf	_cont,f
  2819  029A                     i1l1545:
  2820                           
  2821                           ;Lab02_main.c: 165:             flag = 4;
  2822  029A  110B               	bcf	11,2	;volatile
  2823  029B                     i1l1547:
  2824                           
  2825                           ;Lab02_main.c: 168:             flag = 5;
  2826  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2827  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2828  029D  1F0C               	btfss	12,6	;volatile
  2829  029E  2AA0               	goto	u74_21
  2830  029F  2AA1               	goto	u74_20
  2831  02A0                     u74_21:
  2832  02A0  2ABD               	goto	i1l1567
  2833  02A1                     u74_20:
  2834  02A1                     i1l1549:
  2835                           
  2836                           ;Lab02_main.c: 171:             TXREG = display_unidad_s2 + 48;
  2837  02A1  0378               	decf	_flag_1,w
  2838  02A2  1D03               	btfss	3,2
  2839  02A3  2AA5               	goto	u75_21
  2840  02A4  2AA6               	goto	u75_20
  2841  02A5                     u75_21:
  2842  02A5  2AAD               	goto	i1l1557
  2843  02A6                     u75_20:
  2844  02A6                     i1l1551:
  2845                           
  2846                           ;Lab02_main.c: 172:             flag = 6;
  2847  02A6  081E               	movf	30,w	;volatile
  2848  02A7  00F0               	movwf	??_isr
  2849  02A8  0870               	movf	??_isr,w
  2850  02A9  00C2               	movwf	_POT1
  2851  02AA                     i1l1553:
  2852                           
  2853                           ;Lab02_main.c: 173:         } else if (flag == 6){
  2854  02AA  151F               	bsf	31,2	;volatile
  2855  02AB                     i1l1555:
  2856                           
  2857                           ;Lab02_main.c: 174:             TXREG = 0x2E;
  2858  02AB  01F8               	clrf	_flag_1
  2859                           
  2860                           ;Lab02_main.c: 175:             flag = 7;
  2861  02AC  2AB4               	goto	i1l1563
  2862  02AD                     i1l1557:
  2863                           
  2864                           ;Lab02_main.c: 176:         } else if (flag == 7){
  2865  02AD  081E               	movf	30,w	;volatile
  2866  02AE  00F0               	movwf	??_isr
  2867  02AF  0870               	movf	??_isr,w
  2868  02B0  00C1               	movwf	_POT2
  2869  02B1                     i1l1559:
  2870                           
  2871                           ;Lab02_main.c: 177:             TXREG = display_decimal_s2 + 48;
  2872  02B1  111F               	bcf	31,2	;volatile
  2873  02B2                     i1l1561:
  2874                           
  2875                           ;Lab02_main.c: 178:             flag = 8;
  2876  02B2  01F8               	clrf	_flag_1
  2877  02B3  0AF8               	incf	_flag_1,f
  2878  02B4                     i1l1563:
  2879                           
  2880                           ;Lab02_main.c: 181:             flag = 9;
  2881  02B4  130C               	bcf	12,6	;volatile
  2882                           
  2883                           ;Lab02_main.c: 182:         } else if (flag == 9){
  2884  02B5  3027               	movlw	39
  2885  02B6  00F0               	movwf	??_isr
  2886  02B7                     u113_27:
  2887  02B7  0BF0               	decfsz	??_isr,f
  2888  02B8  2AB7               	goto	u113_27
  2889  02B9  2ABA               	nop2
  2890  02BA                     i1l1565:
  2891                           
  2892                           ;Lab02_main.c: 183:             TXREG = 0x0D;
  2893  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2894  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2895  02BC  149F               	bsf	31,1	;volatile
  2896  02BD                     i1l1567:
  2897                           
  2898                           ;Lab02_main.c: 186:     TXIF = 0;
  2899  02BD  1E8C               	btfss	12,5	;volatile
  2900  02BE  2AC0               	goto	u76_21
  2901  02BF  2AC1               	goto	u76_20
  2902  02C0                     u76_21:
  2903  02C0  2AE2               	goto	i1l1589
  2904  02C1                     u76_20:
  2905  02C1                     i1l1569:
  2906                           
  2907                           ;Lab02_main.c: 188: }
  2908  02C1  1785               	bsf	5,7	;volatile
  2909  02C2                     i1l1571:
  2910                           
  2911                           ;Lab02_main.c: 189: 
  2912  02C2  300D               	movlw	13
  2913  02C3  061A               	xorwf	26,w	;volatile
  2914  02C4  1D03               	btfss	3,2
  2915  02C5  2AC7               	goto	u77_21
  2916  02C6  2AC8               	goto	u77_20
  2917  02C7                     u77_21:
  2918  02C7  2ADD               	goto	i1l1587
  2919  02C8                     u77_20:
  2920  02C8                     i1l1573:
  2921                           
  2922                           ;Lab02_main.c: 190: 
  2923  02C8  1385               	bcf	5,7	;volatile
  2924  02C9                     i1l1575:
  2925                           
  2926                           ;Lab02_main.c: 191: 
  2927  02C9  302B               	movlw	43
  2928  02CA  067A               	xorwf	_var_temp,w
  2929  02CB  1D03               	btfss	3,2
  2930  02CC  2ACE               	goto	u78_21
  2931  02CD  2ACF               	goto	u78_20
  2932  02CE                     u78_21:
  2933  02CE  2AD4               	goto	i1l1581
  2934  02CF                     u78_20:
  2935  02CF                     i1l1577:
  2936                           
  2937                           ;Lab02_main.c: 192: 
  2938  02CF  3001               	movlw	1
  2939  02D0  00F0               	movwf	??_isr
  2940  02D1  0870               	movf	??_isr,w
  2941  02D2  07C0               	addwf	_contador,f
  2942                           
  2943                           ;Lab02_main.c: 193: 
  2944  02D3  2AE2               	goto	i1l1589
  2945  02D4                     i1l1581:
  2946  02D4  302D               	movlw	45
  2947  02D5  067A               	xorwf	_var_temp,w
  2948  02D6  1D03               	btfss	3,2
  2949  02D7  2AD9               	goto	u79_21
  2950  02D8  2ADA               	goto	u79_20
  2951  02D9                     u79_21:
  2952  02D9  2AE2               	goto	i1l130
  2953  02DA                     u79_20:
  2954  02DA                     i1l1583:
  2955                           
  2956                           ;Lab02_main.c: 198:     Lcd_Set_Cursor(2,1);
  2957  02DA  3001               	movlw	1
  2958  02DB  02C0               	subwf	_contador,f
  2959                           
  2960                           ;Lab02_main.c: 199:     Lcd_Write_String("0.00");
  2961  02DC  2AE2               	goto	i1l1589
  2962  02DD                     i1l1587:
  2963                           
  2964                           ;Lab02_main.c: 205:     Lcd_Write_String("S3");
  2965  02DD  081A               	movf	26,w	;volatile
  2966  02DE  00F0               	movwf	??_isr
  2967  02DF  0870               	movf	??_isr,w
  2968  02E0  00FA               	movwf	_var_temp
  2969  02E1  2AE2               	goto	i1l1589
  2970  02E2                     i1l130:	
  2971                           ;Lab02_main.c: 206:     Lcd_Set_Cursor(2,13);
  2972                           
  2973  02E2                     i1l1589:
  2974                           
  2975                           ;Lab02_main.c: 209: }
  2976  02E2  1E0C               	btfss	12,4	;volatile
  2977  02E3  2AE5               	goto	u80_21
  2978  02E4  2AE6               	goto	u80_20
  2979  02E5                     u80_21:
  2980  02E5  2B68               	goto	i1l151
  2981  02E6                     u80_20:
  2982  02E6                     i1l1591:
  2983                           
  2984                           ;Lab02_main.c: 210: 
  2985  02E6  0879               	movf	_flag,w
  2986  02E7  1D03               	btfss	3,2
  2987  02E8  2AEA               	goto	u81_21
  2988  02E9  2AEB               	goto	u81_20
  2989  02EA                     u81_21:
  2990  02EA  2AF1               	goto	i1l1597
  2991  02EB                     u81_20:
  2992  02EB                     i1l1593:
  2993                           
  2994                           ;Lab02_main.c: 212: 
  2995  02EB  083E               	movf	_display_unidad,w
  2996  02EC  3E30               	addlw	48
  2997  02ED  0099               	movwf	25	;volatile
  2998  02EE                     i1l1595:
  2999                           
  3000                           ;Lab02_main.c: 213: 
  3001  02EE  01F9               	clrf	_flag
  3002  02EF  0AF9               	incf	_flag,f
  3003                           
  3004                           ;Lab02_main.c: 214: void setup(void){
  3005  02F0  2B67               	goto	i1l1645
  3006  02F1                     i1l1597:
  3007  02F1  0379               	decf	_flag,w
  3008  02F2  1D03               	btfss	3,2
  3009  02F3  2AF5               	goto	u82_21
  3010  02F4  2AF6               	goto	u82_20
  3011  02F5                     u82_21:
  3012  02F5  2AFD               	goto	i1l1601
  3013  02F6                     u82_20:
  3014  02F6                     i1l1599:
  3015                           
  3016                           ;Lab02_main.c: 215: 
  3017  02F6  302E               	movlw	46
  3018  02F7  0099               	movwf	25	;volatile
  3019                           
  3020                           ;Lab02_main.c: 216: 
  3021  02F8  3002               	movlw	2
  3022  02F9  00F0               	movwf	??_isr
  3023  02FA  0870               	movf	??_isr,w
  3024  02FB  00F9               	movwf	_flag
  3025                           
  3026                           ;Lab02_main.c: 217:     OSCCONbits.IRCF2 = 1;
  3027  02FC  2B67               	goto	i1l1645
  3028  02FD                     i1l1601:
  3029  02FD  3002               	movlw	2
  3030  02FE  0679               	xorwf	_flag,w
  3031  02FF  1D03               	btfss	3,2
  3032  0300  2B02               	goto	u83_21
  3033  0301  2B03               	goto	u83_20
  3034  0302                     u83_21:
  3035  0302  2B0B               	goto	i1l1607
  3036  0303                     u83_20:
  3037  0303                     i1l1603:
  3038                           
  3039                           ;Lab02_main.c: 218:     OSCCONbits.IRCF1 = 1;
  3040  0303  083D               	movf	_display_decimal,w
  3041  0304  3E30               	addlw	48
  3042  0305  0099               	movwf	25	;volatile
  3043  0306                     i1l1605:
  3044                           
  3045                           ;Lab02_main.c: 219:     OSCCONbits.IRCF0 = 1;
  3046  0306  3003               	movlw	3
  3047  0307  00F0               	movwf	??_isr
  3048  0308  0870               	movf	??_isr,w
  3049  0309  00F9               	movwf	_flag
  3050                           
  3051                           ;Lab02_main.c: 220:     OSCCONbits.SCS = 1;
  3052  030A  2B67               	goto	i1l1645
  3053  030B                     i1l1607:
  3054  030B  3003               	movlw	3
  3055  030C  0679               	xorwf	_flag,w
  3056  030D  1D03               	btfss	3,2
  3057  030E  2B10               	goto	u84_21
  3058  030F  2B11               	goto	u84_20
  3059  0310                     u84_21:
  3060  0310  2B19               	goto	i1l1613
  3061  0311                     u84_20:
  3062  0311                     i1l1609:
  3063                           
  3064                           ;Lab02_main.c: 221: 
  3065  0311  083C               	movf	_display_decimal_2,w
  3066  0312  3E30               	addlw	48
  3067  0313  0099               	movwf	25	;volatile
  3068  0314                     i1l1611:
  3069                           
  3070                           ;Lab02_main.c: 222: 
  3071  0314  3004               	movlw	4
  3072  0315  00F0               	movwf	??_isr
  3073  0316  0870               	movf	??_isr,w
  3074  0317  00F9               	movwf	_flag
  3075                           
  3076                           ;Lab02_main.c: 223:     ANSELH = 0x00;
  3077  0318  2B67               	goto	i1l1645
  3078  0319                     i1l1613:
  3079  0319  3004               	movlw	4
  3080  031A  0679               	xorwf	_flag,w
  3081  031B  1D03               	btfss	3,2
  3082  031C  2B1E               	goto	u85_21
  3083  031D  2B1F               	goto	u85_20
  3084  031E                     u85_21:
  3085  031E  2B26               	goto	i1l1617
  3086  031F                     u85_20:
  3087  031F                     i1l1615:
  3088                           
  3089                           ;Lab02_main.c: 224:     ANSEL = 0x03;
  3090  031F  302D               	movlw	45
  3091  0320  0099               	movwf	25	;volatile
  3092                           
  3093                           ;Lab02_main.c: 225: 
  3094  0321  3005               	movlw	5
  3095  0322  00F0               	movwf	??_isr
  3096  0323  0870               	movf	??_isr,w
  3097  0324  00F9               	movwf	_flag
  3098                           
  3099                           ;Lab02_main.c: 226:     TRISA = 0x03;
  3100  0325  2B67               	goto	i1l1645
  3101  0326                     i1l1617:
  3102  0326  3005               	movlw	5
  3103  0327  0679               	xorwf	_flag,w
  3104  0328  1D03               	btfss	3,2
  3105  0329  2B2B               	goto	u86_21
  3106  032A  2B2C               	goto	u86_20
  3107  032B                     u86_21:
  3108  032B  2B34               	goto	i1l1623
  3109  032C                     u86_20:
  3110  032C                     i1l1619:
  3111                           
  3112                           ;Lab02_main.c: 228:     TRISD = 0x00;
  3113  032C  083B               	movf	_display_unidad_s2,w
  3114  032D  3E30               	addlw	48
  3115  032E  0099               	movwf	25	;volatile
  3116  032F                     i1l1621:
  3117                           
  3118                           ;Lab02_main.c: 229:     TRISE = 0x00;
  3119  032F  3006               	movlw	6
  3120  0330  00F0               	movwf	??_isr
  3121  0331  0870               	movf	??_isr,w
  3122  0332  00F9               	movwf	_flag
  3123                           
  3124                           ;Lab02_main.c: 230: 
  3125  0333  2B67               	goto	i1l1645
  3126  0334                     i1l1623:
  3127  0334  3006               	movlw	6
  3128  0335  0679               	xorwf	_flag,w
  3129  0336  1D03               	btfss	3,2
  3130  0337  2B39               	goto	u87_21
  3131  0338  2B3A               	goto	u87_20
  3132  0339                     u87_21:
  3133  0339  2B41               	goto	i1l1627
  3134  033A                     u87_20:
  3135  033A                     i1l1625:
  3136                           
  3137                           ;Lab02_main.c: 231:     PORTA = 0x00;
  3138  033A  302E               	movlw	46
  3139  033B  0099               	movwf	25	;volatile
  3140                           
  3141                           ;Lab02_main.c: 232:     PORTC = 0x00;
  3142  033C  3007               	movlw	7
  3143  033D  00F0               	movwf	??_isr
  3144  033E  0870               	movf	??_isr,w
  3145  033F  00F9               	movwf	_flag
  3146                           
  3147                           ;Lab02_main.c: 233:     PORTD = 0x00;
  3148  0340  2B67               	goto	i1l1645
  3149  0341                     i1l1627:
  3150  0341  3007               	movlw	7
  3151  0342  0679               	xorwf	_flag,w
  3152  0343  1D03               	btfss	3,2
  3153  0344  2B46               	goto	u88_21
  3154  0345  2B47               	goto	u88_20
  3155  0346                     u88_21:
  3156  0346  2B4F               	goto	i1l1633
  3157  0347                     u88_20:
  3158  0347                     i1l1629:
  3159                           
  3160                           ;Lab02_main.c: 234:     PORTE = 0x00;
  3161  0347  083A               	movf	_display_decimal_s2,w
  3162  0348  3E30               	addlw	48
  3163  0349  0099               	movwf	25	;volatile
  3164  034A                     i1l1631:
  3165                           
  3166                           ;Lab02_main.c: 235: 
  3167  034A  3008               	movlw	8
  3168  034B  00F0               	movwf	??_isr
  3169  034C  0870               	movf	??_isr,w
  3170  034D  00F9               	movwf	_flag
  3171                           
  3172                           ;Lab02_main.c: 236: 
  3173  034E  2B67               	goto	i1l1645
  3174  034F                     i1l1633:
  3175  034F  3008               	movlw	8
  3176  0350  0679               	xorwf	_flag,w
  3177  0351  1D03               	btfss	3,2
  3178  0352  2B54               	goto	u89_21
  3179  0353  2B55               	goto	u89_20
  3180  0354                     u89_21:
  3181  0354  2B5D               	goto	i1l1639
  3182  0355                     u89_20:
  3183  0355                     i1l1635:
  3184                           
  3185                           ;Lab02_main.c: 237:     ADC();
  3186  0355  0839               	movf	_display_decimal_2_s2,w
  3187  0356  3E30               	addlw	48
  3188  0357  0099               	movwf	25	;volatile
  3189  0358                     i1l1637:
  3190                           
  3191                           ;Lab02_main.c: 238: 
  3192  0358  3009               	movlw	9
  3193  0359  00F0               	movwf	??_isr
  3194  035A  0870               	movf	??_isr,w
  3195  035B  00F9               	movwf	_flag
  3196                           
  3197                           ;Lab02_main.c: 239: 
  3198  035C  2B67               	goto	i1l1645
  3199  035D                     i1l1639:
  3200  035D  3009               	movlw	9
  3201  035E  0679               	xorwf	_flag,w
  3202  035F  1D03               	btfss	3,2
  3203  0360  2B62               	goto	u90_21
  3204  0361  2B63               	goto	u90_20
  3205  0362                     u90_21:
  3206  0362  2B67               	goto	i1l145
  3207  0363                     u90_20:
  3208  0363                     i1l1641:
  3209                           
  3210                           ;Lab02_main.c: 240:     INTCONbits.GIE = 1;
  3211  0363  300D               	movlw	13
  3212  0364  0099               	movwf	25	;volatile
  3213  0365                     i1l1643:
  3214                           
  3215                           ;Lab02_main.c: 241:     INTCONbits.T0IE = 1;
  3216  0365  01F9               	clrf	_flag
  3217  0366  2B67               	goto	i1l1645
  3218  0367                     i1l145:
  3219  0367                     i1l1645:
  3220                           
  3221                           ;Lab02_main.c: 243:     INTCONbits.PEIE = 1;
  3222  0367  120C               	bcf	12,4	;volatile
  3223  0368                     i1l151:
  3224  0368  0872               	movf	??_isr+2,w
  3225  0369  008A               	movwf	10
  3226  036A  0E71               	swapf	??_isr+1,w
  3227  036B  0083               	movwf	3
  3228  036C  0EFE               	swapf	btemp,f
  3229  036D  0E7E               	swapf	btemp,w
  3230  036E  0009               	retfie
  3231  036F                     __end_of_isr:
  3232  007E                     btemp	set	126	;btemp
  3233  007E                     wtemp0	set	126
  3234                           
  3235                           	psect	intentry
  3236  0004                     __pintentry:	
  3237                           ;incstack = 0
  3238                           ; Regs used in _isr: [wreg+status,2+status,0]
  3239                           
  3240  0004                     interrupt_function:
  3241  007E                     saved_w	set	btemp
  3242  0004  00FE               	movwf	btemp
  3243  0005  0E03               	swapf	3,w
  3244  0006  00F1               	movwf	??_isr+1
  3245  0007  080A               	movf	10,w
  3246  0008  00F2               	movwf	??_isr+2
  3247  0009  120A  118A  2A90   	ljmp	_isr
  3248                           
  3249                           	psect	config
  3250                           
  3251                           ;Config register CONFIG1 @ 0x2007
  3252                           ;	Oscillator Selection bits
  3253                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3254                           ;	Watchdog Timer Enable bit
  3255                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3256                           ;	Power-up Timer Enable bit
  3257                           ;	PWRTE = OFF, PWRT disabled
  3258                           ;	RE3/MCLR pin function select bit
  3259                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3260                           ;	Code Protection bit
  3261                           ;	CP = OFF, Program memory code protection is disabled
  3262                           ;	Data Code Protection bit
  3263                           ;	CPD = OFF, Data memory code protection is disabled
  3264                           ;	Brown Out Reset Selection bits
  3265                           ;	BOREN = OFF, BOR disabled
  3266                           ;	Internal External Switchover bit
  3267                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3268                           ;	Fail-Safe Clock Monitor Enabled bit
  3269                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3270                           ;	Low Voltage Programming Enable bit
  3271                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3272                           ;	In-Circuit Debugger Mode bit
  3273                           ;	DEBUG = 0x1, unprogrammed default
  3274  2007                     	org	8199
  3275  2007  20D4               	dw	8404
  3276                           
  3277                           ;Config register CONFIG2 @ 0x2008
  3278                           ;	Brown-out Reset Selection bit
  3279                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3280                           ;	Flash Program Memory Self Write Enable bits
  3281                           ;	WRT = OFF, Write protection off
  3282  2008                     	org	8200
  3283  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___awdiv
    _Lcd_Init->_Lcd_Cmd
    _LCD_display->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    _setup->_LCD_display
    _LCD_display->_Lcd_Set_Cursor
    _LCD_display->_Lcd_Write_String
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    6967
                                             10 BANK0     10    10      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2105
                                _ADC
                        _LCD_display
                           _Lcd_Init
                              _USART
 ---------------------------------------------------------------------------------
 (2) _USART                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_display                                          1     1      0    2012
                                              3 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     3     3      0     408
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1    1604
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1216
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     396
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1516
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup
     _ADC
     _LCD_display
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _USART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 11:22:19 2021

                        _a 0034                          pc 0002             ___bmul@product 0075  
             ___awdiv@sign 0027                         fsr 0004        ___wmul@multiplicand 0075  
                      l110 01CF                        l105 019D                        l106 01A7  
                      l211 05B5                        l107 01B1                        l108 01BB  
                      l109 01C5                        l154 03D7                        l323 05CA  
                      l180 0574                        l157 04E0                        l166 05A0  
                      _ADC 058B                        l192 058A                        l177 05E4  
                      l450 0440                        l186 055A                        l189 049D  
                      l198 0534                        l297 04F1                        l299 050B  
                      _RA7 002F                        _RE0 0048                        _RE1 0049  
                      u610 041E                        u530 05BC                        u611 041D  
                      u531 05BB                        u540 05C9                        u605 040E  
                      u541 05C8                        u630 0432                        u550 03DF  
                      u631 0431                        u615 041A                        u551 03DE  
                      u640 0437                        u560 03EA                        u641 0436  
                      u625 0426                        u561 03E9                        u570 03FB  
                      u571 03FA                        u590 040D                        u910 053D  
                      u591 040C                        u911 053C                        u920 054F  
                      u585 03FF                        u921 054E                        u930 0534  
                      u931 0533                        u940 04E9                        u941 04E8  
                      u970 0505                        u971 0504                        u955 04F2  
                      u980 0034                        u965 04F9                        u981 0033  
                      u990 0199                        u991 0198                        _isr 0290  
                      fsr0 0004                       ?_ADC 0070                       l1321 05A1  
                     l1411 05C0                       l1331 05B1                       l1323 05A8  
                     l1421 03DB                       l1413 05C2                       l1405 05B7  
                     l1333 05B2                       l1325 05AC                       l1431 03EF  
                     l1423 03DF                       l1415 05C9                       l1407 05B8  
                     l1327 05AD                       l1441 0405                       l1433 03F3  
                     l1425 03E4                       l1409 05BC                       l1329 05B0  
                     l1451 0425                       l1443 0409                       l1435 03F5  
                     l1427 03E6                       l1419 03D8                       l1291 0598  
                     l1453 042C                       l1445 040D                       l1437 03FB  
                     l1429 03EA                       l1293 0599                       l1701 03B3  
                     l1447 041E                       l1439 03FE                       l1455 0432  
                     l1295 059D                       l1287 058B                       l1703 03C5  
                     l1711 044C                       l1457 0437                       l1449 0424  
                     l1289 0590                       l1705 03D1                       l1721 047F  
                     l1713 0452                       l1801 002C                       l1459 043C  
                     l1651 0579                       l1723 0485                       l1715 0462  
                     l1731 049E                       l1811 008E                       l1803 0034  
                     l1661 055F                       l1653 057F                       l1725 048B  
                     l1717 046C                       l1709 0441                       l1741 04AF  
                     l1733 04A4                       l1821 014C                       l1813 00A1  
                     l1805 0035                       l1647 05E0                       l1663 0565  
                     l1671 053D                       l1655 0582                       l1727 0491  
                     l1719 0479                       l1751 04B6                       l1743 04B0  
                     l1735 04A7                       l1831 01AD                       l1823 018F  
                     l1815 00E4                       l1807 0038                       l1665 0568  
                     l1673 0542                       l1657 0587                       l1649 0576  
                     l1681 050F                       l1729 0497                       l1761 04BF  
                     l1753 04B7                       l1745 04B1                       l1737 04A9  
                     l1841 01D9                       l1833 01B7                       l1825 0193  
                     l1817 00FA                       l1809 004F                       l1667 0571  
                     l1659 055C                       l1675 0549                       l1683 0512  
                     l1691 037B                       l1771 04D0                       l1763 04C0  
                     l1755 04BC                       l1747 04B4                       l1739 04AD  
                     l1851 020B                       l1843 01E1                       l1835 01C1  
                     l1827 0199                       l1819 0139                       l1677 054F  
                     l1669 0538                       l1685 051F                       l1693 0381  
                     l1781 04DB                       l1773 04D5                       l1765 04C3  
                     l1757 04BD                       l1749 04B5                       l1861 023E  
                     l1853 0214                       l1845 01EA                       l1837 01CB  
                     l1829 01A3                       l1791 04F8                       l1679 0554  
                     l1687 0527                       l1695 038F                       l1783 04DC  
                     l1775 04D8                       l1767 04C6                       l1759 04BE  
                     l1871 0274                       l1863 024A                       l1855 0220  
                     l1847 01F6                       l1839 01D5                       l1793 04FF  
                     l1785 04E1                       l1697 039B                       l1689 036F  
                     l1777 04D9                       l1769 04CB                       l1873 027A  
                     l1865 0253                       l1857 0229                       l1849 01FF  
                     l1795 0505                       l1787 04E5                       l1699 03AD  
                     l1779 04DA                       l1875 0286                       l1867 025F  
                     l1859 0235                       l1789 04E9                       l1869 0268  
                     l1799 0027                       _ADIF 0066                       ?_isr 0070  
                     STR_1 05D6                       STR_2 05D1                       STR_3 05D9  
                     STR_4 05D1                       STR_5 05DC                       STR_6 05D1  
                     u1000 01A3                       u1001 01A2                       u1010 01AD  
                     u1011 01AC                       u1020 01B7                       u1021 01B6  
                     u1030 01C1                       u1031 01C0                       u1040 01CB  
                     u1041 01CA                       u1050 01D5                       u1107 0584  
                     u1051 01D4                       u1117 056C                       u1127 059B  
             ?_LCD_display 0070                       u1067 0447                       u1077 0458  
                     u1087 0468                       u1097 0476                       _POT1 0042  
                     _POT2 0041                       _TMR0 0001                       _TXIE 0464  
                     _TXIF 0064          ?_Lcd_Write_String 0070                       _flag 0079  
                     _cont 003F                       _main 0027                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 0575  
        ___bmul@multiplier 0076                      ??_ADC 0073                      ??_isr 0070  
                    ?_main 0070            __end_of___awdiv 0441                      _ANSEL 0188  
          ___awdiv@divisor 0022                      i1l130 02E2                      i1l151 0368  
                    i1l145 0367            ___awdiv@counter 0026                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u80_20 02E6  
                    u80_21 02E5                      u81_20 02EB                      u73_20 0294  
                    u81_21 02EA                      u73_21 0293    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      u90_20 0363                      u82_20 02F6  
                    u74_20 02A1                      u90_21 0362                      u82_21 02F5  
                    u74_21 02A0                      _USART 05A1                      u83_20 0303  
                    u75_20 02A6                      u83_21 0302                      u75_21 02A5  
                    u84_20 0311                      u76_20 02C1                      u84_21 0310  
                    u76_21 02C0                      u85_20 031F                      u77_20 02C8  
                    u85_21 031E                      u77_21 02C7                      u86_20 032C  
                    u78_20 02CF                      u86_21 032B                      u78_21 02CE  
                    u87_20 033A                      u79_20 02DA                      u87_21 0339  
                    u79_21 02D9                      u88_20 0347                      u88_21 0346  
                    u89_20 0355                      u89_21 0354                      _TXREG 0019  
                    _setup 049E                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 049E           __end_of_Lcd_Port 05E5  
          __initialization 000F               __end_of_main 0290                     ??_main 002A  
                   ?_USART 0070                     _ADRESH 001E           ___awdiv@dividend 0024  
                   ?_setup 0070                     _ANSELH 0189                     i1l1601 02FD  
                   i1l1611 0314                     i1l1603 0303                     i1l1621 032F  
                   i1l1613 0319                     i1l1605 0306                     i1l1541 0290  
                   i1l1631 034A                     i1l1623 0334                     i1l1615 031F  
                   i1l1607 030B                     i1l1551 02A6                     i1l1543 0294  
                   i1l1641 0363                     i1l1633 034F                     i1l1625 033A  
                   i1l1617 0326                     i1l1609 0311                     i1l1561 02B2  
                   i1l1553 02AA                     i1l1545 029A                     i1l1643 0365  
                   i1l1635 0355                     i1l1627 0341                     i1l1619 032C  
                   i1l1571 02C2                     i1l1563 02B4                     i1l1555 02AB  
                   i1l1547 029B                     i1l1637 0358                     i1l1629 0347  
                   i1l1645 0367                     i1l1581 02D4                     i1l1573 02C8  
                   i1l1565 02BA                     i1l1557 02AD                     i1l1549 02A1  
                   i1l1639 035D                     i1l1591 02E6                     i1l1583 02DA  
                   i1l1575 02C9                     u113_27 02B7                     i1l1559 02B1  
                   i1l1567 02BD                     i1l1593 02EB                     i1l1577 02CF  
                   i1l1569 02C1                     i1l1595 02EE                     i1l1587 02DD  
                   i1l1597 02F1                     i1l1589 02E2                     i1l1599 02F6  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   ___bmul 05B6                     ___wmul 04E1                  ??___awdiv 0077  
                   _flag_1 0078           ___awdiv@quotient 0028                     saved_w 007E  
          Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077    __end_of__initialization 0023  
     __size_of_LCD_display 0069        ___bmul@multiplicand 0073              __end_of_USART 05B6  
           __pcstackCOMMON 0070              __end_of_setup 04E1             _Lcd_Set_Cursor 0535  
           _OPTION_REGbits 0081                    ??_USART 0073                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0078                 __pbssBANK0 0034  
               __pmaintext 0027       _display_decimal_2_s2 0039       _display_decimal_2_s3 0036  
       _display_decimal_s2 003A         _display_decimal_s3 0037                    ?___bmul 0073  
                  ?___wmul 0073                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 055B                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
               __stringtab 05CB             _Lcd_Write_Char 0575                    _Lcd_Cmd 055B  
          __size_of___bmul 0015                    ___awdiv 03D8            __size_of___wmul 002B  
          ?_Lcd_Set_Cursor 0077                    __ptext1 049E                    __ptext2 05A1  
                  __ptext3 0441                    __ptext4 036F                    __ptext5 050C  
                  __ptext6 0575                    __ptext7 0535                    __ptext8 055B  
                  __ptext9 05DF               __size_of_ADC 0016               __size_of_isr 00DF  
   __end_of_Lcd_Write_Char 058B       end_of_initialization 0023                  _RCSTAbits 0018  
                Lcd_Port@a 0073            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020                  _TXSTAbits 0098             __end_of___bmul 05CB  
           __end_of___wmul 050C           _Lcd_Write_String 050C                _BAUDCTLbits 0187  
      start_initialization 000F                __end_of_ADC 05A1                __end_of_isr 036F  
            ??_LCD_display 0023          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0006  
                 ??___bmul 0074                   ??___wmul 0077            Lcd_Write_Char@a 0075  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070        __end_of_LCD_display 03D8                  _main$1122 0032  
        _display_decimal_2 003C           ??_Lcd_Set_Cursor 0020                   ?___awdiv 0022  
                __pstrings 05CB             __size_of_USART 0015             __size_of_setup 0043  
        interrupt_function 0004             ___wmul@product 0020                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                 _ADCON0bits 001F  
              __stringbase 05D0                 _ADCON1bits 009F          ___wmul@multiplier 0073  
        _display_unidad_s2 003B          _display_unidad_s3 0038           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 0441                   _Lcd_Port 05DF                _LCD_display 036F  
 __end_of_Lcd_Write_String 0535           __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069  
       __end_of__stringtab 05D1                   __ptext10 058B                   __ptext11 04E1  
                 __ptext12 05B6                   __ptext13 03D8                   __ptext14 0290  
                 _contador 0040              __size_of_main 0269                   _var_temp 007A  
               _INTCONbits 000B                   intlevel1 0000            _display_decimal 003D  
                stringcode 05CB                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0022  
                 stringdir 05CB                   stringtab 05CB             _display_unidad 003E  
