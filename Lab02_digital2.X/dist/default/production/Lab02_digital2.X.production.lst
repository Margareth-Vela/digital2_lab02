

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 15:00:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  0001                     _TMR0	set	1
   457  0009                     _PORTE	set	9
   458  0008                     _PORTD	set	8
   459  0007                     _PORTC	set	7
   460  0005                     _PORTA	set	5
   461  0019                     _TXREG	set	25
   462  001A                     _RCREG	set	26
   463  000C                     _PIR1bits	set	12
   464  001F                     _ADCON0bits	set	31
   465  001E                     _ADRESH	set	30
   466  000B                     _INTCONbits	set	11
   467  0049                     _RE1	set	73
   468  0048                     _RE0	set	72
   469  0064                     _TXIF	set	100
   470  002F                     _RA7	set	47
   471  0066                     _ADIF	set	102
   472  009A                     _SPBRGH	set	154
   473  0099                     _SPBRG	set	153
   474  0098                     _TXSTAbits	set	152
   475  009F                     _ADCON1bits	set	159
   476  0081                     _OPTION_REGbits	set	129
   477  008C                     _PIE1bits	set	140
   478  0089                     _TRISE	set	137
   479  0088                     _TRISD	set	136
   480  0087                     _TRISC	set	135
   481  0085                     _TRISA	set	133
   482  008F                     _OSCCONbits	set	143
   483  0464                     _TXIE	set	1124
   484  0187                     _BAUDCTLbits	set	391
   485  0188                     _ANSEL	set	392
   486  0189                     _ANSELH	set	393
   487                           
   488                           	psect	strings
   489  0622                     __pstrings:
   490  0622                     stringtab:
   491  0622                     __stringtab:
   492  0622                     stringcode:	
   493                           ;	String table - string pointers are 1 byte each
   494                           
   495  0622                     stringdir:
   496  0622  3006               	movlw	high stringdir
   497  0623  008A               	movwf	10
   498  0624  0804               	movf	4,w
   499  0625  0A84               	incf	4,f
   500  0626  0782               	addwf	2,f
   501  0627                     __stringbase:
   502  0627  3400               	retlw	0
   503  0628                     __end_of__stringtab:
   504  0628                     STR_2:
   505  0628  3430               	retlw	48	;'0'
   506  0629  342E               	retlw	46	;'.'
   507  062A  3430               	retlw	48	;'0'
   508  062B  3430               	retlw	48	;'0'
   509  062C  3400               	retlw	0
   510  062D                     STR_6:
   511  062D  3430               	retlw	48	;'0'
   512  062E  3430               	retlw	48	;'0'
   513  062F  3430               	retlw	48	;'0'
   514  0630  3400               	retlw	0
   515  0631                     STR_1:
   516  0631  3453               	retlw	83	;'S'
   517  0632  3431               	retlw	49	;'1'
   518  0633  3400               	retlw	0
   519  0634                     STR_3:
   520  0634  3453               	retlw	83	;'S'
   521  0635  3432               	retlw	50	;'2'
   522  0636  3400               	retlw	0
   523  0637                     STR_5:
   524  0637  3453               	retlw	83	;'S'
   525  0638  3433               	retlw	51	;'3'
   526  0639  3400               	retlw	0
   527  0628                     
   528                           	psect	cinit
   529  000F                     start_initialization:	
   530                           ; #config settings
   531                           
   532  000F                     __initialization:
   533                           
   534                           ; Clear objects allocated to COMMON
   535  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   536  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   537  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   538                           
   539                           ; Clear objects allocated to BANK0
   540  0012  1383               	bcf	3,7	;select IRP bank0
   541  0013  3034               	movlw	low __pbssBANK0
   542  0014  0084               	movwf	4
   543  0015  3044               	movlw	low (__pbssBANK0+16)
   544  0016  120A  118A  2690  120A  118A  	fcall	clear_ram0
   545  001B                     end_of_initialization:	
   546                           ;End of C runtime variable initialization code
   547                           
   548  001B                     __end_of__initialization:
   549  001B  0183               	clrf	3
   550  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   551                           
   552                           	psect	bssCOMMON
   553  0078                     __pbssCOMMON:
   554  0078                     _flag_1:
   555  0078                     	ds	1
   556  0079                     _flag:
   557  0079                     	ds	1
   558  007A                     _var_temp:
   559  007A                     	ds	1
   560                           
   561                           	psect	bssBANK0
   562  0034                     __pbssBANK0:
   563  0034                     _a:
   564  0034                     	ds	2
   565  0036                     _unidades:
   566  0036                     	ds	1
   567  0037                     _decenas:
   568  0037                     	ds	1
   569  0038                     _decenas_temp:
   570  0038                     	ds	1
   571  0039                     _centenas:
   572  0039                     	ds	1
   573  003A                     _display_decimal_2_s2:
   574  003A                     	ds	1
   575  003B                     _display_decimal_s2:
   576  003B                     	ds	1
   577  003C                     _display_unidad_s2:
   578  003C                     	ds	1
   579  003D                     _display_decimal_2:
   580  003D                     	ds	1
   581  003E                     _display_decimal:
   582  003E                     	ds	1
   583  003F                     _display_unidad:
   584  003F                     	ds	1
   585  0040                     _cont:
   586  0040                     	ds	1
   587  0041                     _contador:
   588  0041                     	ds	1
   589  0042                     _POT2:
   590  0042                     	ds	1
   591  0043                     _POT1:
   592  0043                     	ds	1
   593                           
   594                           	psect	clrtext
   595  0690                     clear_ram0:	
   596                           ;	Called with FSR containing the base address, and
   597                           ;	W with the last address+1
   598                           
   599  0690  0064               	clrwdt	;clear the watchdog before getting into this loop
   600  0691                     clrloop0:
   601  0691  0180               	clrf	0	;clear RAM location pointed to by FSR
   602  0692  0A84               	incf	4,f	;increment pointer
   603  0693  0604               	xorwf	4,w	;XOR with final address
   604  0694  1903               	btfsc	3,2	;have we reached the end yet?
   605  0695  3400               	retlw	0	;all done for this memory range, return
   606  0696  0604               	xorwf	4,w	;XOR again to restore value
   607  0697  2E91               	goto	clrloop0	;do the next byte
   608                           
   609                           	psect	cstackCOMMON
   610  0070                     __pcstackCOMMON:
   611  0070                     ?_setup:
   612  0070                     ?_Lcd_Write_Char:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_Lcd_Write_String:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_ADC:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Lcd_Init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_USART:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_main:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_isr:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ??_isr:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_LCD_display:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_Lcd_Port:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_Lcd_Cmd:	
   643                           ; 1 bytes @ 0x0
   644                           
   645                           
   646                           ; 1 bytes @ 0x0
   647  0070                     	ds	3
   648  0073                     ??_ADC:
   649  0073                     ??_USART:	
   650                           ; 1 bytes @ 0x3
   651                           
   652  0073                     ??_Lcd_Port:	
   653                           ; 1 bytes @ 0x3
   654                           
   655  0073                     ?___bmul:	
   656                           ; 1 bytes @ 0x3
   657                           
   658  0073                     ?___wmul:	
   659                           ; 1 bytes @ 0x3
   660                           
   661  0073                     ?___awmod:	
   662                           ; 2 bytes @ 0x3
   663                           
   664  0073                     Lcd_Port@a:	
   665                           ; 2 bytes @ 0x3
   666                           
   667  0073                     ___bmul@multiplicand:	
   668                           ; 1 bytes @ 0x3
   669                           
   670  0073                     ___wmul@multiplier:	
   671                           ; 1 bytes @ 0x3
   672                           
   673  0073                     ___awmod@divisor:	
   674                           ; 2 bytes @ 0x3
   675                           
   676                           
   677                           ; 2 bytes @ 0x3
   678  0073                     	ds	1
   679  0074                     ??_Lcd_Write_Char:
   680  0074                     ??_Lcd_Cmd:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ??___bmul:	
   684                           ; 1 bytes @ 0x4
   685                           
   686                           
   687                           ; 1 bytes @ 0x4
   688  0074                     	ds	1
   689  0075                     Lcd_Write_Char@a:
   690  0075                     ___bmul@product:	
   691                           ; 1 bytes @ 0x5
   692                           
   693  0075                     ___wmul@multiplicand:	
   694                           ; 1 bytes @ 0x5
   695                           
   696  0075                     ___awmod@dividend:	
   697                           ; 2 bytes @ 0x5
   698                           
   699                           
   700                           ; 2 bytes @ 0x5
   701  0075                     	ds	1
   702  0076                     ??_Lcd_Write_String:
   703  0076                     Lcd_Cmd@a:	
   704                           ; 1 bytes @ 0x6
   705                           
   706  0076                     ___bmul@multiplier:	
   707                           ; 1 bytes @ 0x6
   708                           
   709                           
   710                           ; 1 bytes @ 0x6
   711  0076                     	ds	1
   712  0077                     ?_Lcd_Set_Cursor:
   713  0077                     ??___wmul:	
   714                           ; 1 bytes @ 0x7
   715                           
   716  0077                     ??___awdiv:	
   717                           ; 1 bytes @ 0x7
   718                           
   719  0077                     ??___awmod:	
   720                           ; 1 bytes @ 0x7
   721                           
   722  0077                     Lcd_Set_Cursor@b:	
   723                           ; 1 bytes @ 0x7
   724                           
   725                           
   726                           ; 1 bytes @ 0x7
   727  0077                     	ds	1
   728  0078                     ??_setup:
   729                           
   730                           	psect	cstackBANK0
   731  0020                     __pcstackBANK0:	
   732                           ; 1 bytes @ 0x8
   733                           
   734  0020                     ??_Lcd_Set_Cursor:
   735  0020                     ??_Lcd_Init:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     ___awmod@counter:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     Lcd_Write_String@i:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0020                     ___wmul@product:	
   745                           ; 2 bytes @ 0x0
   746                           
   747                           
   748                           ; 2 bytes @ 0x0
   749  0020                     	ds	1
   750  0021                     Lcd_Set_Cursor@a:
   751  0021                     ___awmod@sign:	
   752                           ; 1 bytes @ 0x1
   753                           
   754                           
   755                           ; 1 bytes @ 0x1
   756  0021                     	ds	1
   757  0022                     ?___awdiv:
   758  0022                     Lcd_Set_Cursor@temp:	
   759                           ; 2 bytes @ 0x2
   760                           
   761  0022                     Lcd_Write_String@a:	
   762                           ; 1 bytes @ 0x2
   763                           
   764  0022                     ___awdiv@divisor:	
   765                           ; 1 bytes @ 0x2
   766                           
   767                           
   768                           ; 2 bytes @ 0x2
   769  0022                     	ds	1
   770  0023                     ??_LCD_display:
   771                           
   772                           ; 1 bytes @ 0x3
   773  0023                     	ds	1
   774  0024                     ___awdiv@dividend:
   775                           
   776                           ; 2 bytes @ 0x4
   777  0024                     	ds	2
   778  0026                     ___awdiv@counter:
   779                           
   780                           ; 1 bytes @ 0x6
   781  0026                     	ds	1
   782  0027                     ___awdiv@sign:
   783                           
   784                           ; 1 bytes @ 0x7
   785  0027                     	ds	1
   786  0028                     ___awdiv@quotient:
   787                           
   788                           ; 2 bytes @ 0x8
   789  0028                     	ds	2
   790  002A                     ??_main:
   791                           
   792                           ; 1 bytes @ 0xA
   793  002A                     	ds	8
   794  0032                     _main$1123:
   795                           
   796                           ; 2 bytes @ 0x12
   797  0032                     	ds	2
   798                           
   799                           	psect	maintext
   800  001F                     __pmaintext:	
   801 ;;
   802 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   803 ;;
   804 ;; *************** function _main *****************
   805 ;; Defined at:
   806 ;;		line 91 in file "Lab02_main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : B00/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         0       2       0       0       0
   822 ;;      Temps:          0       8       0       0       0
   823 ;;      Totals:         0      10       0       0       0
   824 ;;Total ram usage:       10 bytes
   825 ;; Hardware stack levels required when called:    6
   826 ;; This function calls:
   827 ;;		_Lcd_Set_Cursor
   828 ;;		_Lcd_Write_Char
   829 ;;		___awdiv
   830 ;;		___awmod
   831 ;;		___bmul
   832 ;;		___wmul
   833 ;;		_setup
   834 ;; This function is called by:
   835 ;;		Startup code after reset
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _main
   841  001F                     _main:
   842  001F                     l1927:	
   843                           ;incstack = 0
   844                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   845                           
   846                           
   847                           ;Lab02_main.c: 92:     Lcd_Write_Char(display_unidad_s2 +48);
   848  001F  120A  118A  254B  120A  118A  	fcall	_setup
   849  0024                     l1929:
   850                           
   851                           ;Lab02_main.c: 94:     Lcd_Write_Char(display_decimal_s2 + 48);
   852  0024  3010               	movlw	16
   853  0025  1283               	bcf	3,5	;RP0=0, select bank0
   854  0026  1303               	bcf	3,6	;RP1=0, select bank0
   855  0027  0240               	subwf	_cont,w
   856  0028  1C03               	skipc
   857  0029  282B               	goto	u1251
   858  002A  282C               	goto	u1250
   859  002B                     u1251:
   860  002B  2830               	goto	l1935
   861  002C                     u1250:
   862  002C                     l1931:
   863                           
   864                           ;Lab02_main.c: 95:     Lcd_Set_Cursor(2,10);
   865  002C  01C0               	clrf	_cont
   866  002D                     l1933:
   867                           
   868                           ;Lab02_main.c: 96:     Lcd_Write_Char(display_decimal_2_s2 + 48);
   869  002D  1683               	bsf	3,5	;RP0=1, select bank1
   870  002E  1303               	bcf	3,6	;RP1=0, select bank1
   871  002F  160C               	bsf	12,4	;volatile
   872  0030                     l1935:
   873                           
   874                           ;Lab02_main.c: 100:     Lcd_Write_Char(centenas +48);
   875  0030  3033               	movlw	51
   876  0031  1283               	bcf	3,5	;RP0=0, select bank0
   877  0032  00A2               	movwf	___awdiv@divisor
   878  0033  3000               	movlw	0
   879  0034  00A3               	movwf	___awdiv@divisor+1
   880  0035  0843               	movf	_POT1,w
   881  0036  00AA               	movwf	??_main
   882  0037  01AB               	clrf	??_main+1
   883  0038  082A               	movf	??_main,w
   884  0039  00A4               	movwf	___awdiv@dividend
   885  003A  082B               	movf	??_main+1,w
   886  003B  00A5               	movwf	___awdiv@dividend+1
   887  003C  120A  118A  242A  120A  118A  	fcall	___awdiv
   888  0041  1283               	bcf	3,5	;RP0=0, select bank0
   889  0042  1303               	bcf	3,6	;RP1=0, select bank0
   890  0043  0822               	movf	?___awdiv,w
   891  0044  00AC               	movwf	??_main+2
   892  0045  082C               	movf	??_main+2,w
   893  0046  00BF               	movwf	_display_unidad
   894  0047                     l1937:
   895                           
   896                           ;Lab02_main.c: 101:     Lcd_Set_Cursor(2,14);
   897  0047  3033               	movlw	51
   898  0048  00A2               	movwf	___awdiv@divisor
   899  0049  3000               	movlw	0
   900  004A  00A3               	movwf	___awdiv@divisor+1
   901  004B  0843               	movf	_POT1,w
   902  004C  00AA               	movwf	??_main
   903  004D  01AB               	clrf	??_main+1
   904  004E  082A               	movf	??_main,w
   905  004F  00F3               	movwf	___wmul@multiplier
   906  0050  082B               	movf	??_main+1,w
   907  0051  00F4               	movwf	___wmul@multiplier+1
   908  0052  3064               	movlw	100
   909  0053  00F5               	movwf	___wmul@multiplicand
   910  0054  3000               	movlw	0
   911  0055  00F6               	movwf	___wmul@multiplicand+1
   912  0056  120A  118A  258E  120A  118A  	fcall	___wmul
   913  005B  0874               	movf	?___wmul+1,w
   914  005C  1283               	bcf	3,5	;RP0=0, select bank0
   915  005D  1303               	bcf	3,6	;RP1=0, select bank0
   916  005E  00A5               	movwf	___awdiv@dividend+1
   917  005F  0873               	movf	?___wmul,w
   918  0060  00A4               	movwf	___awdiv@dividend
   919  0061  120A  118A  242A  120A  118A  	fcall	___awdiv
   920  0066  1283               	bcf	3,5	;RP0=0, select bank0
   921  0067  1303               	bcf	3,6	;RP1=0, select bank0
   922  0068  0822               	movf	?___awdiv,w
   923  0069  00AC               	movwf	??_main+2
   924  006A  0823               	movf	?___awdiv+1,w
   925  006B  00AD               	movwf	??_main+3
   926  006C  083F               	movf	_display_unidad,w
   927  006D  00AE               	movwf	??_main+4
   928  006E  01AF               	clrf	??_main+5
   929  006F  082E               	movf	??_main+4,w
   930  0070  00F3               	movwf	___wmul@multiplier
   931  0071  082F               	movf	??_main+5,w
   932  0072  00F4               	movwf	___wmul@multiplier+1
   933  0073  309C               	movlw	156
   934  0074  00F5               	movwf	___wmul@multiplicand
   935  0075  30FF               	movlw	255
   936  0076  00F6               	movwf	___wmul@multiplicand+1
   937  0077  120A  118A  258E  120A  118A  	fcall	___wmul
   938  007C  0873               	movf	?___wmul,w
   939  007D  1283               	bcf	3,5	;RP0=0, select bank0
   940  007E  1303               	bcf	3,6	;RP1=0, select bank0
   941  007F  072C               	addwf	??_main+2,w
   942  0080  00B2               	movwf	_main$1123
   943  0081  0874               	movf	?___wmul+1,w
   944  0082  1803               	skipnc
   945  0083  0A74               	incf	?___wmul+1,w
   946  0084  072D               	addwf	??_main+3,w
   947  0085  00B3               	movwf	_main$1123+1
   948  0086                     l1939:
   949                           
   950                           ;Lab02_main.c: 101:     Lcd_Set_Cursor(2,14);
   951  0086  300A               	movlw	10
   952  0087  00A2               	movwf	___awdiv@divisor
   953  0088  3000               	movlw	0
   954  0089  00A3               	movwf	___awdiv@divisor+1
   955  008A  0833               	movf	_main$1123+1,w
   956  008B  00A5               	movwf	___awdiv@dividend+1
   957  008C  0832               	movf	_main$1123,w
   958  008D  00A4               	movwf	___awdiv@dividend
   959  008E  120A  118A  242A  120A  118A  	fcall	___awdiv
   960  0093  1283               	bcf	3,5	;RP0=0, select bank0
   961  0094  1303               	bcf	3,6	;RP1=0, select bank0
   962  0095  0822               	movf	?___awdiv,w
   963  0096  00AA               	movwf	??_main
   964  0097  082A               	movf	??_main,w
   965  0098  00BE               	movwf	_display_decimal
   966  0099                     l1941:
   967                           
   968                           ;Lab02_main.c: 102:     Lcd_Write_Char(decenas + 48);
   969  0099  3033               	movlw	51
   970  009A  00A2               	movwf	___awdiv@divisor
   971  009B  3000               	movlw	0
   972  009C  00A3               	movwf	___awdiv@divisor+1
   973  009D  0843               	movf	_POT1,w
   974  009E  00AA               	movwf	??_main
   975  009F  01AB               	clrf	??_main+1
   976  00A0  082A               	movf	??_main,w
   977  00A1  00F3               	movwf	___wmul@multiplier
   978  00A2  082B               	movf	??_main+1,w
   979  00A3  00F4               	movwf	___wmul@multiplier+1
   980  00A4  3064               	movlw	100
   981  00A5  00F5               	movwf	___wmul@multiplicand
   982  00A6  3000               	movlw	0
   983  00A7  00F6               	movwf	___wmul@multiplicand+1
   984  00A8  120A  118A  258E  120A  118A  	fcall	___wmul
   985  00AD  0874               	movf	?___wmul+1,w
   986  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   987  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   988  00B0  00A5               	movwf	___awdiv@dividend+1
   989  00B1  0873               	movf	?___wmul,w
   990  00B2  00A4               	movwf	___awdiv@dividend
   991  00B3  120A  118A  242A  120A  118A  	fcall	___awdiv
   992  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   993  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   994  00BA  0822               	movf	?___awdiv,w
   995  00BB  00AC               	movwf	??_main+2
   996  00BC  0823               	movf	?___awdiv+1,w
   997  00BD  00AD               	movwf	??_main+3
   998  00BE  309C               	movlw	156
   999  00BF  00AE               	movwf	??_main+4
  1000  00C0  082E               	movf	??_main+4,w
  1001  00C1  00F3               	movwf	___bmul@multiplicand
  1002  00C2  083F               	movf	_display_unidad,w
  1003  00C3  120A  118A  267B  120A  118A  	fcall	___bmul
  1004  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1005  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1006  00CA  00AF               	movwf	??_main+5
  1007  00CB  30F6               	movlw	246
  1008  00CC  00B0               	movwf	??_main+6
  1009  00CD  0830               	movf	??_main+6,w
  1010  00CE  00F3               	movwf	___bmul@multiplicand
  1011  00CF  083E               	movf	_display_decimal,w
  1012  00D0  120A  118A  267B  120A  118A  	fcall	___bmul
  1013  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1014  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1015  00D7  072F               	addwf	??_main+5,w
  1016  00D8  072C               	addwf	??_main+2,w
  1017  00D9  00B1               	movwf	??_main+7
  1018  00DA  0831               	movf	??_main+7,w
  1019  00DB  00BD               	movwf	_display_decimal_2
  1020  00DC                     l1943:
  1021                           
  1022                           ;Lab02_main.c: 104:     Lcd_Write_Char(unidades + 48);
  1023  00DC  3033               	movlw	51
  1024  00DD  00A2               	movwf	___awdiv@divisor
  1025  00DE  3000               	movlw	0
  1026  00DF  00A3               	movwf	___awdiv@divisor+1
  1027  00E0  0842               	movf	_POT2,w
  1028  00E1  00AA               	movwf	??_main
  1029  00E2  01AB               	clrf	??_main+1
  1030  00E3  082A               	movf	??_main,w
  1031  00E4  00A4               	movwf	___awdiv@dividend
  1032  00E5  082B               	movf	??_main+1,w
  1033  00E6  00A5               	movwf	___awdiv@dividend+1
  1034  00E7  120A  118A  242A  120A  118A  	fcall	___awdiv
  1035  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1036  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1037  00EE  0822               	movf	?___awdiv,w
  1038  00EF  00AC               	movwf	??_main+2
  1039  00F0  082C               	movf	??_main+2,w
  1040  00F1  00BC               	movwf	_display_unidad_s2
  1041  00F2                     l1945:
  1042                           
  1043                           ;Lab02_main.c: 105:    }
  1044  00F2  3033               	movlw	51
  1045  00F3  00A2               	movwf	___awdiv@divisor
  1046  00F4  3000               	movlw	0
  1047  00F5  00A3               	movwf	___awdiv@divisor+1
  1048  00F6  0842               	movf	_POT2,w
  1049  00F7  00AA               	movwf	??_main
  1050  00F8  01AB               	clrf	??_main+1
  1051  00F9  082A               	movf	??_main,w
  1052  00FA  00F3               	movwf	___wmul@multiplier
  1053  00FB  082B               	movf	??_main+1,w
  1054  00FC  00F4               	movwf	___wmul@multiplier+1
  1055  00FD  3064               	movlw	100
  1056  00FE  00F5               	movwf	___wmul@multiplicand
  1057  00FF  3000               	movlw	0
  1058  0100  00F6               	movwf	___wmul@multiplicand+1
  1059  0101  120A  118A  258E  120A  118A  	fcall	___wmul
  1060  0106  0874               	movf	?___wmul+1,w
  1061  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0109  00A5               	movwf	___awdiv@dividend+1
  1064  010A  0873               	movf	?___wmul,w
  1065  010B  00A4               	movwf	___awdiv@dividend
  1066  010C  120A  118A  242A  120A  118A  	fcall	___awdiv
  1067  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0113  0822               	movf	?___awdiv,w
  1070  0114  00AC               	movwf	??_main+2
  1071  0115  0823               	movf	?___awdiv+1,w
  1072  0116  00AD               	movwf	??_main+3
  1073  0117  083C               	movf	_display_unidad_s2,w
  1074  0118  00AE               	movwf	??_main+4
  1075  0119  01AF               	clrf	??_main+5
  1076  011A  082E               	movf	??_main+4,w
  1077  011B  00F3               	movwf	___wmul@multiplier
  1078  011C  082F               	movf	??_main+5,w
  1079  011D  00F4               	movwf	___wmul@multiplier+1
  1080  011E  309C               	movlw	156
  1081  011F  00F5               	movwf	___wmul@multiplicand
  1082  0120  30FF               	movlw	255
  1083  0121  00F6               	movwf	___wmul@multiplicand+1
  1084  0122  120A  118A  258E  120A  118A  	fcall	___wmul
  1085  0127  0873               	movf	?___wmul,w
  1086  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1088  012A  072C               	addwf	??_main+2,w
  1089  012B  00B2               	movwf	_main$1123
  1090  012C  0874               	movf	?___wmul+1,w
  1091  012D  1803               	skipnc
  1092  012E  0A74               	incf	?___wmul+1,w
  1093  012F  072D               	addwf	??_main+3,w
  1094  0130  00B3               	movwf	_main$1123+1
  1095  0131                     l1947:
  1096                           
  1097                           ;Lab02_main.c: 105:    }
  1098  0131  300A               	movlw	10
  1099  0132  00A2               	movwf	___awdiv@divisor
  1100  0133  3000               	movlw	0
  1101  0134  00A3               	movwf	___awdiv@divisor+1
  1102  0135  0833               	movf	_main$1123+1,w
  1103  0136  00A5               	movwf	___awdiv@dividend+1
  1104  0137  0832               	movf	_main$1123,w
  1105  0138  00A4               	movwf	___awdiv@dividend
  1106  0139  120A  118A  242A  120A  118A  	fcall	___awdiv
  1107  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1108  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0140  0822               	movf	?___awdiv,w
  1110  0141  00AA               	movwf	??_main
  1111  0142  082A               	movf	??_main,w
  1112  0143  00BB               	movwf	_display_decimal_s2
  1113  0144                     l1949:
  1114                           
  1115                           ;Lab02_main.c: 106: }
  1116  0144  3033               	movlw	51
  1117  0145  00A2               	movwf	___awdiv@divisor
  1118  0146  3000               	movlw	0
  1119  0147  00A3               	movwf	___awdiv@divisor+1
  1120  0148  0842               	movf	_POT2,w
  1121  0149  00AA               	movwf	??_main
  1122  014A  01AB               	clrf	??_main+1
  1123  014B  082A               	movf	??_main,w
  1124  014C  00F3               	movwf	___wmul@multiplier
  1125  014D  082B               	movf	??_main+1,w
  1126  014E  00F4               	movwf	___wmul@multiplier+1
  1127  014F  3064               	movlw	100
  1128  0150  00F5               	movwf	___wmul@multiplicand
  1129  0151  3000               	movlw	0
  1130  0152  00F6               	movwf	___wmul@multiplicand+1
  1131  0153  120A  118A  258E  120A  118A  	fcall	___wmul
  1132  0158  0874               	movf	?___wmul+1,w
  1133  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1134  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1135  015B  00A5               	movwf	___awdiv@dividend+1
  1136  015C  0873               	movf	?___wmul,w
  1137  015D  00A4               	movwf	___awdiv@dividend
  1138  015E  120A  118A  242A  120A  118A  	fcall	___awdiv
  1139  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0165  0822               	movf	?___awdiv,w
  1142  0166  00AC               	movwf	??_main+2
  1143  0167  0823               	movf	?___awdiv+1,w
  1144  0168  00AD               	movwf	??_main+3
  1145  0169  309C               	movlw	156
  1146  016A  00AE               	movwf	??_main+4
  1147  016B  082E               	movf	??_main+4,w
  1148  016C  00F3               	movwf	___bmul@multiplicand
  1149  016D  083C               	movf	_display_unidad_s2,w
  1150  016E  120A  118A  267B  120A  118A  	fcall	___bmul
  1151  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0175  00AF               	movwf	??_main+5
  1154  0176  30F6               	movlw	246
  1155  0177  00B0               	movwf	??_main+6
  1156  0178  0830               	movf	??_main+6,w
  1157  0179  00F3               	movwf	___bmul@multiplicand
  1158  017A  083B               	movf	_display_decimal_s2,w
  1159  017B  120A  118A  267B  120A  118A  	fcall	___bmul
  1160  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0182  072F               	addwf	??_main+5,w
  1163  0183  072C               	addwf	??_main+2,w
  1164  0184  00B1               	movwf	??_main+7
  1165  0185  0831               	movf	??_main+7,w
  1166  0186  00BA               	movwf	_display_decimal_2_s2
  1167  0187                     l1951:
  1168                           
  1169                           ;Lab02_main.c: 109: 
  1170  0187  3064               	movlw	100
  1171  0188  00A2               	movwf	___awdiv@divisor
  1172  0189  3000               	movlw	0
  1173  018A  00A3               	movwf	___awdiv@divisor+1
  1174  018B  0841               	movf	_contador,w
  1175  018C  00AA               	movwf	??_main
  1176  018D  01AB               	clrf	??_main+1
  1177  018E  082A               	movf	??_main,w
  1178  018F  00A4               	movwf	___awdiv@dividend
  1179  0190  082B               	movf	??_main+1,w
  1180  0191  00A5               	movwf	___awdiv@dividend+1
  1181  0192  120A  118A  242A  120A  118A  	fcall	___awdiv
  1182  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0199  0822               	movf	?___awdiv,w
  1185  019A  00AC               	movwf	??_main+2
  1186  019B  082C               	movf	??_main+2,w
  1187  019C  00B9               	movwf	_centenas
  1188  019D                     l1953:
  1189                           
  1190                           ;Lab02_main.c: 110: 
  1191  019D  3064               	movlw	100
  1192  019E  00F3               	movwf	___awmod@divisor
  1193  019F  3000               	movlw	0
  1194  01A0  00F4               	movwf	___awmod@divisor+1
  1195  01A1  0841               	movf	_contador,w
  1196  01A2  00AA               	movwf	??_main
  1197  01A3  01AB               	clrf	??_main+1
  1198  01A4  082A               	movf	??_main,w
  1199  01A5  00F5               	movwf	___awmod@dividend
  1200  01A6  082B               	movf	??_main+1,w
  1201  01A7  00F6               	movwf	___awmod@dividend+1
  1202  01A8  120A  118A  24F0  120A  118A  	fcall	___awmod
  1203  01AD  0873               	movf	?___awmod,w
  1204  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1205  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1206  01B0  00AC               	movwf	??_main+2
  1207  01B1  082C               	movf	??_main+2,w
  1208  01B2  00B8               	movwf	_decenas_temp
  1209  01B3                     l1955:
  1210                           
  1211                           ;Lab02_main.c: 111: void __attribute__((picinterrupt(("")))) isr(void){
  1212  01B3  300A               	movlw	10
  1213  01B4  00A2               	movwf	___awdiv@divisor
  1214  01B5  3000               	movlw	0
  1215  01B6  00A3               	movwf	___awdiv@divisor+1
  1216  01B7  0838               	movf	_decenas_temp,w
  1217  01B8  00AA               	movwf	??_main
  1218  01B9  01AB               	clrf	??_main+1
  1219  01BA  082A               	movf	??_main,w
  1220  01BB  00A4               	movwf	___awdiv@dividend
  1221  01BC  082B               	movf	??_main+1,w
  1222  01BD  00A5               	movwf	___awdiv@dividend+1
  1223  01BE  120A  118A  242A  120A  118A  	fcall	___awdiv
  1224  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1225  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1226  01C5  0822               	movf	?___awdiv,w
  1227  01C6  00AC               	movwf	??_main+2
  1228  01C7  082C               	movf	??_main+2,w
  1229  01C8  00B7               	movwf	_decenas
  1230  01C9                     l1957:
  1231                           
  1232                           ;Lab02_main.c: 113:         cont++;
  1233  01C9  300A               	movlw	10
  1234  01CA  00F3               	movwf	___awmod@divisor
  1235  01CB  3000               	movlw	0
  1236  01CC  00F4               	movwf	___awmod@divisor+1
  1237  01CD  0841               	movf	_contador,w
  1238  01CE  00AA               	movwf	??_main
  1239  01CF  01AB               	clrf	??_main+1
  1240  01D0  082A               	movf	??_main,w
  1241  01D1  00F5               	movwf	___awmod@dividend
  1242  01D2  082B               	movf	??_main+1,w
  1243  01D3  00F6               	movwf	___awmod@dividend+1
  1244  01D4  120A  118A  24F0  120A  118A  	fcall	___awmod
  1245  01D9  0873               	movf	?___awmod,w
  1246  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1247  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1248  01DC  00AC               	movwf	??_main+2
  1249  01DD  082C               	movf	??_main+2,w
  1250  01DE  00B6               	movwf	_unidades
  1251  01DF                     l1959:
  1252                           
  1253                           ;Lab02_main.c: 116: 
  1254  01DF  300A               	movlw	10
  1255  01E0  023E               	subwf	_display_decimal,w
  1256  01E1  1C03               	skipc
  1257  01E2  29E4               	goto	u1261
  1258  01E3  29E5               	goto	u1260
  1259  01E4                     u1261:
  1260  01E4  29E9               	goto	l107
  1261  01E5                     u1260:
  1262  01E5                     l1961:
  1263                           
  1264                           ;Lab02_main.c: 117:     if(ADIF == 1){
  1265  01E5  3009               	movlw	9
  1266  01E6  00AA               	movwf	??_main
  1267  01E7  082A               	movf	??_main,w
  1268  01E8  00BE               	movwf	_display_decimal
  1269  01E9                     l107:	
  1270                           ;Lab02_main.c: 118:         if (flag_1 == 1){
  1271                           
  1272                           
  1273                           ;Lab02_main.c: 119:             POT1 = ADRESH;
  1274  01E9  300A               	movlw	10
  1275  01EA  023D               	subwf	_display_decimal_2,w
  1276  01EB  1C03               	skipc
  1277  01EC  29EE               	goto	u1271
  1278  01ED  29EF               	goto	u1270
  1279  01EE                     u1271:
  1280  01EE  29F3               	goto	l108
  1281  01EF                     u1270:
  1282  01EF                     l1963:
  1283                           
  1284                           ;Lab02_main.c: 120:             ADCON0bits.CHS0 = 1;
  1285  01EF  3009               	movlw	9
  1286  01F0  00AA               	movwf	??_main
  1287  01F1  082A               	movf	??_main,w
  1288  01F2  00BD               	movwf	_display_decimal_2
  1289  01F3                     l108:	
  1290                           ;Lab02_main.c: 121:             flag_1 = 0;
  1291                           
  1292                           
  1293                           ;Lab02_main.c: 122:         } else{
  1294  01F3  300A               	movlw	10
  1295  01F4  023B               	subwf	_display_decimal_s2,w
  1296  01F5  1C03               	skipc
  1297  01F6  29F8               	goto	u1281
  1298  01F7  29F9               	goto	u1280
  1299  01F8                     u1281:
  1300  01F8  29FD               	goto	l109
  1301  01F9                     u1280:
  1302  01F9                     l1965:
  1303                           
  1304                           ;Lab02_main.c: 123:             POT2 = ADRESH;
  1305  01F9  3009               	movlw	9
  1306  01FA  00AA               	movwf	??_main
  1307  01FB  082A               	movf	??_main,w
  1308  01FC  00BB               	movwf	_display_decimal_s2
  1309  01FD                     l109:	
  1310                           ;Lab02_main.c: 124:             ADCON0bits.CHS0 = 0;
  1311                           
  1312                           
  1313                           ;Lab02_main.c: 125:             flag_1 = 1;
  1314  01FD  300A               	movlw	10
  1315  01FE  023A               	subwf	_display_decimal_2_s2,w
  1316  01FF  1C03               	skipc
  1317  0200  2A02               	goto	u1291
  1318  0201  2A03               	goto	u1290
  1319  0202                     u1291:
  1320  0202  2A07               	goto	l110
  1321  0203                     u1290:
  1322  0203                     l1967:
  1323                           
  1324                           ;Lab02_main.c: 126:         }
  1325  0203  3009               	movlw	9
  1326  0204  00AA               	movwf	??_main
  1327  0205  082A               	movf	??_main,w
  1328  0206  00BA               	movwf	_display_decimal_2_s2
  1329  0207                     l110:	
  1330                           ;Lab02_main.c: 127: 
  1331                           
  1332                           
  1333                           ;Lab02_main.c: 129:         _delay((unsigned long)((60)*(8000000/4000000.0)));
  1334  0207  3006               	movlw	6
  1335  0208  023F               	subwf	_display_unidad,w
  1336  0209  1C03               	skipc
  1337  020A  2A0C               	goto	u1301
  1338  020B  2A0D               	goto	u1300
  1339  020C                     u1301:
  1340  020C  2A11               	goto	l111
  1341  020D                     u1300:
  1342  020D                     l1969:
  1343                           
  1344                           ;Lab02_main.c: 130:         ADCON0bits.GO = 1;
  1345  020D  3005               	movlw	5
  1346  020E  00AA               	movwf	??_main
  1347  020F  082A               	movf	??_main,w
  1348  0210  00BF               	movwf	_display_unidad
  1349  0211                     l111:	
  1350                           ;Lab02_main.c: 131:     }
  1351                           
  1352                           
  1353                           ;Lab02_main.c: 132: 
  1354  0211  3006               	movlw	6
  1355  0212  023C               	subwf	_display_unidad_s2,w
  1356  0213  1C03               	skipc
  1357  0214  2A16               	goto	u1311
  1358  0215  2A17               	goto	u1310
  1359  0216                     u1311:
  1360  0216  2A1B               	goto	l112
  1361  0217                     u1310:
  1362  0217                     l1971:
  1363                           
  1364                           ;Lab02_main.c: 133:     if(PIR1bits.RCIF == 1){
  1365  0217  3005               	movlw	5
  1366  0218  00AA               	movwf	??_main
  1367  0219  082A               	movf	??_main,w
  1368  021A  00BF               	movwf	_display_unidad
  1369  021B                     l112:	
  1370                           ;Lab02_main.c: 134: 
  1371                           
  1372                           
  1373                           ;Lab02_main.c: 135:         RA7 = 1;
  1374  021B  3006               	movlw	6
  1375  021C  0241               	subwf	_contador,w
  1376  021D  1C03               	skipc
  1377  021E  2A20               	goto	u1321
  1378  021F  2A21               	goto	u1320
  1379  0220                     u1321:
  1380  0220  2A25               	goto	l1975
  1381  0221                     u1320:
  1382  0221                     l1973:
  1383                           
  1384                           ;Lab02_main.c: 136:         if (RCREG == 0x0D){
  1385  0221  3005               	movlw	5
  1386  0222  00AA               	movwf	??_main
  1387  0223  082A               	movf	??_main,w
  1388  0224  00BF               	movwf	_display_unidad
  1389  0225                     l1975:
  1390                           
  1391                           ;Lab02_main.c: 140:                 if (contador > 255){
  1392  0225  01F7               	clrf	Lcd_Set_Cursor@b
  1393  0226  0AF7               	incf	Lcd_Set_Cursor@b,f
  1394  0227  3002               	movlw	2
  1395  0228  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1396  022D                     l1977:
  1397                           
  1398                           ;Lab02_main.c: 141:                     contador = 0;
  1399  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1400  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1401  022F  083F               	movf	_display_unidad,w
  1402  0230  3E30               	addlw	48
  1403  0231  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1404  0236                     l1979:
  1405                           
  1406                           ;Lab02_main.c: 142:                 } }
  1407  0236  3003               	movlw	3
  1408  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0239  00AA               	movwf	??_main
  1411  023A  082A               	movf	??_main,w
  1412  023B  00F7               	movwf	Lcd_Set_Cursor@b
  1413  023C  3002               	movlw	2
  1414  023D  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1415  0242                     l1981:
  1416                           
  1417                           ;Lab02_main.c: 143: 
  1418  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1420  0244  083E               	movf	_display_decimal,w
  1421  0245  3E30               	addlw	48
  1422  0246  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1423  024B                     l1983:
  1424                           
  1425                           ;Lab02_main.c: 144:             else if (var_temp == 0x2D){
  1426  024B  3004               	movlw	4
  1427  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1428  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1429  024E  00AA               	movwf	??_main
  1430  024F  082A               	movf	??_main,w
  1431  0250  00F7               	movwf	Lcd_Set_Cursor@b
  1432  0251  3002               	movlw	2
  1433  0252  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1434  0257                     l1985:
  1435                           
  1436                           ;Lab02_main.c: 145:                 contador--;
  1437  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0259  083D               	movf	_display_decimal_2,w
  1440  025A  3E30               	addlw	48
  1441  025B  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1442  0260                     l1987:
  1443                           
  1444                           ;Lab02_main.c: 148:                 }
  1445  0260  3007               	movlw	7
  1446  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0263  00AA               	movwf	??_main
  1449  0264  082A               	movf	??_main,w
  1450  0265  00F7               	movwf	Lcd_Set_Cursor@b
  1451  0266  3002               	movlw	2
  1452  0267  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1453  026C                     l1989:
  1454                           
  1455                           ;Lab02_main.c: 149:             }
  1456  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1457  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1458  026E  083C               	movf	_display_unidad_s2,w
  1459  026F  3E30               	addlw	48
  1460  0270  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1461  0275                     l1991:
  1462                           
  1463                           ;Lab02_main.c: 150:         }
  1464  0275  3009               	movlw	9
  1465  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0278  00AA               	movwf	??_main
  1468  0279  082A               	movf	??_main,w
  1469  027A  00F7               	movwf	Lcd_Set_Cursor@b
  1470  027B  3002               	movlw	2
  1471  027C  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1472  0281                     l1993:
  1473                           
  1474                           ;Lab02_main.c: 151:         else {
  1475  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0283  083B               	movf	_display_decimal_s2,w
  1478  0284  3E30               	addlw	48
  1479  0285  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1480  028A                     l1995:
  1481                           
  1482                           ;Lab02_main.c: 152:         var_temp = RCREG;
  1483  028A  300A               	movlw	10
  1484  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1485  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1486  028D  00AA               	movwf	??_main
  1487  028E  082A               	movf	??_main,w
  1488  028F  00F7               	movwf	Lcd_Set_Cursor@b
  1489  0290  3002               	movlw	2
  1490  0291  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1491  0296                     l1997:
  1492                           
  1493                           ;Lab02_main.c: 153:         }
  1494  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0298  083A               	movf	_display_decimal_2_s2,w
  1497  0299  3E30               	addlw	48
  1498  029A  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1499  029F                     l1999:
  1500                           
  1501                           ;Lab02_main.c: 156:     if (TXIF == 1){
  1502  029F  300D               	movlw	13
  1503  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1504  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1505  02A2  00AA               	movwf	??_main
  1506  02A3  082A               	movf	??_main,w
  1507  02A4  00F7               	movwf	Lcd_Set_Cursor@b
  1508  02A5  3002               	movlw	2
  1509  02A6  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1510  02AB                     l2001:
  1511                           
  1512                           ;Lab02_main.c: 157:         if (flag == 0){
  1513  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1514  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1515  02AD  0839               	movf	_centenas,w
  1516  02AE  3E30               	addlw	48
  1517  02AF  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1518  02B4                     l2003:
  1519                           
  1520                           ;Lab02_main.c: 158:             TXREG = display_unidad + 48;
  1521  02B4  300E               	movlw	14
  1522  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1523  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1524  02B7  00AA               	movwf	??_main
  1525  02B8  082A               	movf	??_main,w
  1526  02B9  00F7               	movwf	Lcd_Set_Cursor@b
  1527  02BA  3002               	movlw	2
  1528  02BB  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1529  02C0                     l2005:
  1530                           
  1531                           ;Lab02_main.c: 159:             flag = 1;
  1532  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1533  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1534  02C2  0837               	movf	_decenas,w
  1535  02C3  3E30               	addlw	48
  1536  02C4  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1537  02C9                     l2007:
  1538                           
  1539                           ;Lab02_main.c: 160:         } else if (flag == 1){
  1540  02C9  300F               	movlw	15
  1541  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1542  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1543  02CC  00AA               	movwf	??_main
  1544  02CD  082A               	movf	??_main,w
  1545  02CE  00F7               	movwf	Lcd_Set_Cursor@b
  1546  02CF  3002               	movlw	2
  1547  02D0  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1548  02D5                     l2009:
  1549                           
  1550                           ;Lab02_main.c: 161:             TXREG = 0x2E;
  1551  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1552  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1553  02D7  0836               	movf	_unidades,w
  1554  02D8  3E30               	addlw	48
  1555  02D9  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  1556  02DE  2824               	goto	l1929
  1557  02DF  120A  118A  280C   	ljmp	start
  1558  02E2                     __end_of_main:
  1559                           
  1560                           	psect	text1
  1561  054B                     __ptext1:	
  1562 ;; *************** function _setup *****************
  1563 ;; Defined at:
  1564 ;;		line 274 in file "Lab02_main.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1578 ;;      Params:         0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0
  1581 ;;      Totals:         0       0       0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    5
  1585 ;; This function calls:
  1586 ;;		_ADC
  1587 ;;		_LCD_display
  1588 ;;		_Lcd_Init
  1589 ;;		_USART
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _setup
  1597  054B                     _setup:
  1598  054B                     l1821:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1601                           
  1602  054B  1683               	bsf	3,5	;RP0=1, select bank1
  1603  054C  1303               	bcf	3,6	;RP1=0, select bank1
  1604  054D  170F               	bsf	15,6	;volatile
  1605  054E  168F               	bsf	15,5	;volatile
  1606  054F  160F               	bsf	15,4	;volatile
  1607  0550  140F               	bsf	15,0	;volatile
  1608  0551                     l1823:
  1609  0551  1683               	bsf	3,5	;RP0=1, select bank3
  1610  0552  1703               	bsf	3,6	;RP1=1, select bank3
  1611  0553  0189               	clrf	9	;volatile
  1612  0554                     l1825:
  1613  0554  3003               	movlw	3
  1614  0555  0088               	movwf	8	;volatile
  1615  0556                     l1827:
  1616  0556  3003               	movlw	3
  1617  0557  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0558  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0559  0085               	movwf	5	;volatile
  1620  055A                     l1829:
  1621  055A  3080               	movlw	128
  1622  055B  0087               	movwf	7	;volatile
  1623  055C                     l1831:
  1624  055C  0188               	clrf	8	;volatile
  1625  055D                     l1833:
  1626  055D  0189               	clrf	9	;volatile
  1627  055E                     l1835:
  1628  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1629  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0560  0185               	clrf	5	;volatile
  1631  0561                     l1837:
  1632  0561  0187               	clrf	7	;volatile
  1633  0562                     l1839:
  1634  0562  0188               	clrf	8	;volatile
  1635  0563                     l1841:
  1636  0563  0189               	clrf	9	;volatile
  1637  0564                     l1843:
  1638  0564  120A  118A  2650  120A  118A  	fcall	_ADC
  1639  0569                     l1845:
  1640  0569  178B               	bsf	11,7	;volatile
  1641  056A                     l1847:
  1642  056A  168B               	bsf	11,5	;volatile
  1643  056B                     l1849:
  1644  056B  110B               	bcf	11,2	;volatile
  1645  056C                     l1851:
  1646  056C  170B               	bsf	11,6	;volatile
  1647  056D                     l1853:
  1648  056D  1683               	bsf	3,5	;RP0=1, select bank1
  1649  056E  1303               	bcf	3,6	;RP1=0, select bank1
  1650  056F  170C               	bsf	12,6	;volatile
  1651  0570                     l1855:
  1652  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0572  130C               	bcf	12,6	;volatile
  1655  0573                     l1857:
  1656  0573  120A  118A  2493  120A  118A  	fcall	_Lcd_Init
  1657  0578                     l1859:
  1658  0578  120A  118A  2666  120A  118A  	fcall	_USART
  1659  057D                     l1861:
  1660  057D  120A  118A  23C1  120A  118A  	fcall	_LCD_display
  1661  0582                     l1863:
  1662  0582  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0583  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0584  1281               	bcf	1,5	;volatile
  1665  0585                     l1865:
  1666  0585  1181               	bcf	1,3	;volatile
  1667  0586                     l1867:
  1668  0586  1501               	bsf	1,2	;volatile
  1669  0587                     l1869:
  1670  0587  1481               	bsf	1,1	;volatile
  1671  0588                     l1871:
  1672  0588  1401               	bsf	1,0	;volatile
  1673  0589                     l1873:
  1674  0589  300A               	movlw	10
  1675  058A  1283               	bcf	3,5	;RP0=0, select bank0
  1676  058B  1303               	bcf	3,6	;RP1=0, select bank0
  1677  058C  0081               	movwf	1	;volatile
  1678  058D                     l159:
  1679  058D  0008               	return
  1680  058E                     __end_of_setup:
  1681                           
  1682                           	psect	text2
  1683  0666                     __ptext2:	
  1684 ;; *************** function _USART *****************
  1685 ;; Defined at:
  1686 ;;		line 11 in file "USART.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0
  1703 ;;      Totals:         0       0       0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_setup
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _USART
  1716  0666                     _USART:
  1717  0666                     l1367:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _USART: [wreg+status,2]
  1720                           
  1721                           
  1722                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  1723  0666  1683               	bsf	3,5	;RP0=1, select bank1
  1724  0667  1303               	bcf	3,6	;RP1=0, select bank1
  1725  0668  1218               	bcf	24,4	;volatile
  1726                           
  1727                           ;USART.c: 14:     TXSTAbits.BRGH = 1;
  1728  0669  1518               	bsf	24,2	;volatile
  1729                           
  1730                           ;USART.c: 16:     BAUDCTLbits.BRG16 = 1;
  1731  066A  1683               	bsf	3,5	;RP0=1, select bank3
  1732  066B  1703               	bsf	3,6	;RP1=1, select bank3
  1733  066C  1587               	bsf	7,3	;volatile
  1734  066D                     l1369:
  1735                           
  1736                           ;USART.c: 18:     SPBRG = 207;
  1737  066D  30CF               	movlw	207
  1738  066E  1683               	bsf	3,5	;RP0=1, select bank1
  1739  066F  1303               	bcf	3,6	;RP1=0, select bank1
  1740  0670  0099               	movwf	25	;volatile
  1741  0671                     l1371:
  1742                           
  1743                           ;USART.c: 19:     SPBRGH = 0;
  1744  0671  019A               	clrf	26	;volatile
  1745  0672                     l1373:
  1746                           
  1747                           ;USART.c: 21:     RCSTAbits.SPEN = 1;
  1748  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0674  1798               	bsf	24,7	;volatile
  1751  0675                     l1375:
  1752                           
  1753                           ;USART.c: 22:     RCSTAbits.RX9 = 0;
  1754  0675  1318               	bcf	24,6	;volatile
  1755  0676                     l1377:
  1756                           
  1757                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  1758  0676  1618               	bsf	24,4	;volatile
  1759  0677                     l1379:
  1760                           
  1761                           ;USART.c: 25:     TXSTAbits.TXEN = 1;
  1762  0677  1683               	bsf	3,5	;RP0=1, select bank1
  1763  0678  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0679  1698               	bsf	24,5	;volatile
  1765  067A                     l213:
  1766  067A  0008               	return
  1767  067B                     __end_of_USART:
  1768                           
  1769                           	psect	text3
  1770  0493                     __ptext3:	
  1771 ;; *************** function _Lcd_Init *****************
  1772 ;; Defined at:
  1773 ;;		line 43 in file "LCD.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0
  1789 ;;      Temps:          0       2       0       0       0
  1790 ;;      Totals:         0       2       0       0       0
  1791 ;;Total ram usage:        2 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    3
  1794 ;; This function calls:
  1795 ;;		_Lcd_Cmd
  1796 ;;		_Lcd_Port
  1797 ;; This function is called by:
  1798 ;;		_setup
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _Lcd_Init
  1804  0493                     _Lcd_Init:
  1805  0493                     l1799:	
  1806                           ;incstack = 0
  1807                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1808                           
  1809                           
  1810                           ;LCD.c: 44:    _delay((unsigned long)((15)*(8000000/4000.0)));
  1811  0493  3027               	movlw	39
  1812  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0496  00A1               	movwf	??_Lcd_Init+1
  1815  0497  30F4               	movlw	244
  1816  0498  00A0               	movwf	??_Lcd_Init
  1817  0499                     u1337:
  1818  0499  0BA0               	decfsz	??_Lcd_Init,f
  1819  049A  2C99               	goto	u1337
  1820  049B  0BA1               	decfsz	??_Lcd_Init+1,f
  1821  049C  2C99               	goto	u1337
  1822  049D  0000               	nop
  1823  049E                     l1801:
  1824                           
  1825                           ;LCD.c: 45:   Lcd_Port(0x00);
  1826  049E  3000               	movlw	0
  1827  049F  120A  118A  2698  120A  118A  	fcall	_Lcd_Port
  1828  04A4                     l1803:
  1829                           
  1830                           ;LCD.c: 46:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1831  04A4  3034               	movlw	52
  1832  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1833  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  1834  04A7  00A1               	movwf	??_Lcd_Init+1
  1835  04A8  30F1               	movlw	241
  1836  04A9  00A0               	movwf	??_Lcd_Init
  1837  04AA                     u1347:
  1838  04AA  0BA0               	decfsz	??_Lcd_Init,f
  1839  04AB  2CAA               	goto	u1347
  1840  04AC  0BA1               	decfsz	??_Lcd_Init+1,f
  1841  04AD  2CAA               	goto	u1347
  1842                           
  1843                           ;LCD.c: 47:   Lcd_Cmd(0x030);
  1844  04AE  3030               	movlw	48
  1845  04AF  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  1846  04B4                     l1805:
  1847                           
  1848                           ;LCD.c: 48:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1849  04B4  300D               	movlw	13
  1850  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1851  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1852  04B7  00A1               	movwf	??_Lcd_Init+1
  1853  04B8  30FB               	movlw	251
  1854  04B9  00A0               	movwf	??_Lcd_Init
  1855  04BA                     u1357:
  1856  04BA  0BA0               	decfsz	??_Lcd_Init,f
  1857  04BB  2CBA               	goto	u1357
  1858  04BC  0BA1               	decfsz	??_Lcd_Init+1,f
  1859  04BD  2CBA               	goto	u1357
  1860  04BE                     l1807:
  1861                           
  1862                           ;LCD.c: 49:   Lcd_Cmd(0x030);
  1863  04BE  3030               	movlw	48
  1864  04BF  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  1865                           
  1866                           ;LCD.c: 50:  _delay((unsigned long)((160)*(8000000/4000000.0)));
  1867  04C4  3069               	movlw	105
  1868  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1869  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1870  04C7  00A0               	movwf	??_Lcd_Init
  1871  04C8                     u1367:
  1872  04C8  0BA0               	decfsz	??_Lcd_Init,f
  1873  04C9  2CC8               	goto	u1367
  1874  04CA  2CCB               	nop2
  1875  04CB                     l1809:
  1876                           
  1877                           ;LCD.c: 51:   Lcd_Cmd(0x030);
  1878  04CB  3030               	movlw	48
  1879  04CC  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  1880  04D1                     l1811:
  1881                           
  1882                           ;LCD.c: 53:   Lcd_Cmd(0x038);
  1883  04D1  3038               	movlw	56
  1884  04D2  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  1885  04D7                     l1813:
  1886                           
  1887                           ;LCD.c: 54:   Lcd_Cmd(0x010);
  1888  04D7  3010               	movlw	16
  1889  04D8  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  1890  04DD                     l1815:
  1891                           
  1892                           ;LCD.c: 55:   Lcd_Cmd(0x001);
  1893  04DD  3001               	movlw	1
  1894  04DE  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  1895  04E3                     l1817:
  1896                           
  1897                           ;LCD.c: 56:   Lcd_Cmd(0x006);
  1898  04E3  3006               	movlw	6
  1899  04E4  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  1900  04E9                     l1819:
  1901                           
  1902                           ;LCD.c: 58:   Lcd_Cmd(0x0C);
  1903  04E9  300C               	movlw	12
  1904  04EA  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  1905  04EF                     l191:
  1906  04EF  0008               	return
  1907  04F0                     __end_of_Lcd_Init:
  1908                           
  1909                           	psect	text4
  1910  03C1                     __ptext4:	
  1911 ;; *************** function _LCD_display *****************
  1912 ;; Defined at:
  1913 ;;		line 254 in file "Lab02_main.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       1       0       0       0
  1930 ;;      Totals:         0       1       0       0       0
  1931 ;;Total ram usage:        1 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    4
  1934 ;; This function calls:
  1935 ;;		_Lcd_Set_Cursor
  1936 ;;		_Lcd_Write_String
  1937 ;; This function is called by:
  1938 ;;		_setup
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _LCD_display
  1944  03C1                     _LCD_display:
  1945  03C1                     l1779:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _LCD_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1948                           
  1949                           
  1950                           ;Lab02_main.c: 256: 
  1951  03C1  3003               	movlw	3
  1952  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1953  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1954  03C4  00A3               	movwf	??_LCD_display
  1955  03C5  0823               	movf	??_LCD_display,w
  1956  03C6  00F7               	movwf	Lcd_Set_Cursor@b
  1957  03C7  3001               	movlw	1
  1958  03C8  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1959  03CD                     l1781:
  1960                           
  1961                           ;Lab02_main.c: 257:     LCD_display();
  1962  03CD  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1963  03CE  120A  118A  25B9  120A  118A  	fcall	_Lcd_Write_String
  1964  03D3                     l1783:
  1965                           
  1966                           ;Lab02_main.c: 258: 
  1967  03D3  01F7               	clrf	Lcd_Set_Cursor@b
  1968  03D4  0AF7               	incf	Lcd_Set_Cursor@b,f
  1969  03D5  3002               	movlw	2
  1970  03D6  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1971                           
  1972                           ;Lab02_main.c: 259: 
  1973  03DB  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1974  03DC  120A  118A  25B9  120A  118A  	fcall	_Lcd_Write_String
  1975  03E1                     l1785:
  1976                           
  1977                           ;Lab02_main.c: 260:     OPTION_REGbits.T0CS = 0;
  1978  03E1  3008               	movlw	8
  1979  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1980  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1981  03E4  00A3               	movwf	??_LCD_display
  1982  03E5  0823               	movf	??_LCD_display,w
  1983  03E6  00F7               	movwf	Lcd_Set_Cursor@b
  1984  03E7  3001               	movlw	1
  1985  03E8  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1986  03ED                     l1787:
  1987                           
  1988                           ;Lab02_main.c: 261:     OPTION_REGbits.PSA = 0;
  1989  03ED  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1990  03EE  120A  118A  25B9  120A  118A  	fcall	_Lcd_Write_String
  1991                           
  1992                           ;Lab02_main.c: 262:     OPTION_REGbits.PS2 = 1;
  1993  03F3  3007               	movlw	7
  1994  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1995  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1996  03F6  00A3               	movwf	??_LCD_display
  1997  03F7  0823               	movf	??_LCD_display,w
  1998  03F8  00F7               	movwf	Lcd_Set_Cursor@b
  1999  03F9  3002               	movlw	2
  2000  03FA  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  2001  03FF                     l1789:
  2002                           
  2003                           ;Lab02_main.c: 263:     OPTION_REGbits.PS1 = 1;
  2004  03FF  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2005  0400  120A  118A  25B9  120A  118A  	fcall	_Lcd_Write_String
  2006  0405                     l1791:
  2007                           
  2008                           ;Lab02_main.c: 264:     OPTION_REGbits.PS0 = 1;
  2009  0405  300D               	movlw	13
  2010  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0408  00A3               	movwf	??_LCD_display
  2013  0409  0823               	movf	??_LCD_display,w
  2014  040A  00F7               	movwf	Lcd_Set_Cursor@b
  2015  040B  3001               	movlw	1
  2016  040C  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  2017                           
  2018                           ;Lab02_main.c: 265:     TMR0 = 10;
  2019  0411  3010               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2020  0412  120A  118A  25B9  120A  118A  	fcall	_Lcd_Write_String
  2021  0417                     l1793:
  2022                           
  2023                           ;Lab02_main.c: 266: }
  2024  0417  300D               	movlw	13
  2025  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2027  041A  00A3               	movwf	??_LCD_display
  2028  041B  0823               	movf	??_LCD_display,w
  2029  041C  00F7               	movwf	Lcd_Set_Cursor@b
  2030  041D  3002               	movlw	2
  2031  041E  120A  118A  25E2  120A  118A  	fcall	_Lcd_Set_Cursor
  2032  0423                     l1795:
  2033  0423  3006               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2034  0424  120A  118A  25B9  120A  118A  	fcall	_Lcd_Write_String
  2035  0429                     l156:
  2036  0429  0008               	return
  2037  042A                     __end_of_LCD_display:
  2038                           
  2039                           	psect	text5
  2040  05B9                     __ptext5:	
  2041 ;; *************** function _Lcd_Write_String *****************
  2042 ;; Defined at:
  2043 ;;		line 70 in file "LCD.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  a               1    wreg     PTR unsigned char 
  2046 ;;		 -> STR_6(4), STR_5(3), STR_4(5), STR_3(3), 
  2047 ;;		 -> STR_2(5), STR_1(3), 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2050 ;;		 -> STR_6(4), STR_5(3), STR_4(5), STR_3(3), 
  2051 ;;		 -> STR_2(5), STR_1(3), 
  2052 ;;  i               2    0[BANK0 ] int 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         0       3       0       0       0
  2064 ;;      Temps:          0       0       0       0       0
  2065 ;;      Totals:         0       3       0       0       0
  2066 ;;Total ram usage:        3 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    3
  2069 ;; This function calls:
  2070 ;;		_Lcd_Write_Char
  2071 ;; This function is called by:
  2072 ;;		_LCD_display
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _Lcd_Write_String
  2078  05B9                     _Lcd_Write_String:
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2082                           ;Lcd_Write_String@a stored from wreg
  2083  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2084  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2085  05BB  00A2               	movwf	Lcd_Write_String@a
  2086  05BC                     l1771:
  2087                           
  2088                           ;LCD.c: 70: void Lcd_Write_String(char *a);LCD.c: 71: {;LCD.c: 72:  int i;;LCD.c: 73:  f
      +                          or(i=0;a[i]!='\0';i++)
  2089  05BC  01A0               	clrf	Lcd_Write_String@i
  2090  05BD  01A1               	clrf	Lcd_Write_String@i+1
  2091  05BE  2DD4               	goto	l1777
  2092  05BF                     l1773:
  2093                           
  2094                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  2095  05BF  0820               	movf	Lcd_Write_String@i,w
  2096  05C0  0722               	addwf	Lcd_Write_String@a,w
  2097  05C1  0084               	movwf	4
  2098  05C2  120A  118A  2622  120A  118A  	fcall	stringdir
  2099  05C7  120A  118A  263A  120A  118A  	fcall	_Lcd_Write_Char
  2100  05CC                     l1775:
  2101  05CC  3001               	movlw	1
  2102  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2103  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2104  05CF  07A0               	addwf	Lcd_Write_String@i,f
  2105  05D0  1803               	skipnc
  2106  05D1  0AA1               	incf	Lcd_Write_String@i+1,f
  2107  05D2  3000               	movlw	0
  2108  05D3  07A1               	addwf	Lcd_Write_String@i+1,f
  2109  05D4                     l1777:
  2110  05D4  0820               	movf	Lcd_Write_String@i,w
  2111  05D5  0722               	addwf	Lcd_Write_String@a,w
  2112  05D6  0084               	movwf	4
  2113  05D7  120A  118A  2622  120A  118A  	fcall	stringdir
  2114  05DC  3A00               	xorlw	0
  2115  05DD  1D03               	skipz
  2116  05DE  2DE0               	goto	u1111
  2117  05DF  2DE1               	goto	u1110
  2118  05E0                     u1111:
  2119  05E0  2DBF               	goto	l1773
  2120  05E1                     u1110:
  2121  05E1                     l200:
  2122  05E1  0008               	return
  2123  05E2                     __end_of_Lcd_Write_String:
  2124                           
  2125                           	psect	text6
  2126  063A                     __ptext6:	
  2127 ;; *************** function _Lcd_Write_Char *****************
  2128 ;; Defined at:
  2129 ;;		line 61 in file "LCD.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  a               1    wreg     unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  a               1    5[COMMON] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0
  2145 ;;      Temps:          1       0       0       0       0
  2146 ;;      Totals:         2       0       0       0       0
  2147 ;;Total ram usage:        2 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    2
  2150 ;; This function calls:
  2151 ;;		_Lcd_Port
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;;		_Lcd_Write_String
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _Lcd_Write_Char
  2160  063A                     _Lcd_Write_Char:
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2164                           ;Lcd_Write_Char@a stored from wreg
  2165  063A  00F5               	movwf	Lcd_Write_Char@a
  2166  063B                     l1739:
  2167                           
  2168                           ;LCD.c: 61: void Lcd_Write_Char(char a);LCD.c: 62: {;LCD.c: 63:     RE0 = 1;
  2169  063B  1283               	bcf	3,5	;RP0=0, select bank0
  2170  063C  1303               	bcf	3,6	;RP1=0, select bank0
  2171  063D  1409               	bsf	9,0	;volatile
  2172  063E                     l1741:
  2173                           
  2174                           ;LCD.c: 64:    Lcd_Port(a);
  2175  063E  0875               	movf	Lcd_Write_Char@a,w
  2176  063F  120A  118A  2698  120A  118A  	fcall	_Lcd_Port
  2177  0644                     l1743:
  2178                           
  2179                           ;LCD.c: 65:    RE1 = 1;
  2180  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0646  1489               	bsf	9,1	;volatile
  2183  0647                     l1745:
  2184                           
  2185                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2186  0647  301A               	movlw	26
  2187  0648  00F4               	movwf	??_Lcd_Write_Char
  2188  0649                     u1377:
  2189  0649  0BF4               	decfsz	??_Lcd_Write_Char,f
  2190  064A  2E49               	goto	u1377
  2191  064B  0000               	nop
  2192  064C                     l1747:
  2193                           
  2194                           ;LCD.c: 67:    RE1 = 0;
  2195  064C  1283               	bcf	3,5	;RP0=0, select bank0
  2196  064D  1303               	bcf	3,6	;RP1=0, select bank0
  2197  064E  1089               	bcf	9,1	;volatile
  2198  064F                     l194:
  2199  064F  0008               	return
  2200  0650                     __end_of_Lcd_Write_Char:
  2201                           
  2202                           	psect	text7
  2203  05E2                     __ptext7:	
  2204 ;; *************** function _Lcd_Set_Cursor *****************
  2205 ;; Defined at:
  2206 ;;		line 28 in file "LCD.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  a               1    wreg     unsigned char 
  2209 ;;  b               1    7[COMMON] unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  a               1    1[BANK0 ] unsigned char 
  2212 ;;  temp            1    2[BANK0 ] unsigned char 
  2213 ;;  y               1    0        unsigned char 
  2214 ;;  z               1    0        unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         1       0       0       0       0
  2225 ;;      Locals:         0       2       0       0       0
  2226 ;;      Temps:          0       1       0       0       0
  2227 ;;      Totals:         1       3       0       0       0
  2228 ;;Total ram usage:        4 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    3
  2231 ;; This function calls:
  2232 ;;		_Lcd_Cmd
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;;		_LCD_display
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _Lcd_Set_Cursor
  2241  05E2                     _Lcd_Set_Cursor:
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2245                           ;Lcd_Set_Cursor@a stored from wreg
  2246  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2247  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2248  05E4  00A1               	movwf	Lcd_Set_Cursor@a
  2249  05E5                     l1759:
  2250                           
  2251                           ;LCD.c: 28: void Lcd_Set_Cursor(char a, char b);LCD.c: 29: {;LCD.c: 30:  char temp,z,y;;
      +                          LCD.c: 31:  if(a == 1)
  2252  05E5  0321               	decf	Lcd_Set_Cursor@a,w
  2253  05E6  1D03               	btfss	3,2
  2254  05E7  2DE9               	goto	u1091
  2255  05E8  2DEA               	goto	u1090
  2256  05E9                     u1091:
  2257  05E9  2DF6               	goto	l1765
  2258  05EA                     u1090:
  2259  05EA                     l1761:
  2260                           
  2261                           ;LCD.c: 32:  {;LCD.c: 33:    temp = 0x80 + b - 1;
  2262  05EA  0877               	movf	Lcd_Set_Cursor@b,w
  2263  05EB  3E7F               	addlw	127
  2264  05EC  00A0               	movwf	??_Lcd_Set_Cursor
  2265  05ED  0820               	movf	??_Lcd_Set_Cursor,w
  2266  05EE  00A2               	movwf	Lcd_Set_Cursor@temp
  2267  05EF                     l1763:
  2268                           
  2269                           ;LCD.c: 34:   Lcd_Cmd(temp);
  2270  05EF  0822               	movf	Lcd_Set_Cursor@temp,w
  2271  05F0  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  2272                           
  2273                           ;LCD.c: 35:  }
  2274  05F5  2E07               	goto	l188
  2275  05F6                     l1765:
  2276  05F6  3002               	movlw	2
  2277  05F7  0621               	xorwf	Lcd_Set_Cursor@a,w
  2278  05F8  1D03               	btfss	3,2
  2279  05F9  2DFB               	goto	u1101
  2280  05FA  2DFC               	goto	u1100
  2281  05FB                     u1101:
  2282  05FB  2E07               	goto	l188
  2283  05FC                     u1100:
  2284  05FC                     l1767:
  2285                           
  2286                           ;LCD.c: 37:  {;LCD.c: 38:   temp = 0xC0 + b - 1;
  2287  05FC  0877               	movf	Lcd_Set_Cursor@b,w
  2288  05FD  3EBF               	addlw	191
  2289  05FE  00A0               	movwf	??_Lcd_Set_Cursor
  2290  05FF  0820               	movf	??_Lcd_Set_Cursor,w
  2291  0600  00A2               	movwf	Lcd_Set_Cursor@temp
  2292  0601                     l1769:
  2293                           
  2294                           ;LCD.c: 39:   Lcd_Cmd(temp);
  2295  0601  0822               	movf	Lcd_Set_Cursor@temp,w
  2296  0602  120A  118A  2608  120A  118A  	fcall	_Lcd_Cmd
  2297  0607                     l188:
  2298  0607  0008               	return
  2299  0608                     __end_of_Lcd_Set_Cursor:
  2300                           
  2301                           	psect	text8
  2302  0608                     __ptext8:	
  2303 ;; *************** function _Lcd_Cmd *****************
  2304 ;; Defined at:
  2305 ;;		line 18 in file "LCD.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  a               1    wreg     unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  a               1    6[COMMON] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2319 ;;      Params:         0       0       0       0       0
  2320 ;;      Locals:         1       0       0       0       0
  2321 ;;      Temps:          2       0       0       0       0
  2322 ;;      Totals:         3       0       0       0       0
  2323 ;;Total ram usage:        3 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    2
  2326 ;; This function calls:
  2327 ;;		_Lcd_Port
  2328 ;; This function is called by:
  2329 ;;		_Lcd_Set_Cursor
  2330 ;;		_Lcd_Init
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _Lcd_Cmd
  2336  0608                     _Lcd_Cmd:
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2340                           ;Lcd_Cmd@a stored from wreg
  2341  0608  00F6               	movwf	Lcd_Cmd@a
  2342  0609                     l1749:
  2343                           
  2344                           ;LCD.c: 18: void Lcd_Cmd(char a);LCD.c: 19: {;LCD.c: 20:  RE0 = 0;
  2345  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2346  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2347  060B  1009               	bcf	9,0	;volatile
  2348  060C                     l1751:
  2349                           
  2350                           ;LCD.c: 21:  Lcd_Port(a);
  2351  060C  0876               	movf	Lcd_Cmd@a,w
  2352  060D  120A  118A  2698  120A  118A  	fcall	_Lcd_Port
  2353  0612                     l1753:
  2354                           
  2355                           ;LCD.c: 22:  RE1 = 1;
  2356  0612  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0613  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0614  1489               	bsf	9,1	;volatile
  2359  0615                     l1755:
  2360                           
  2361                           ;LCD.c: 24:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2362  0615  301A               	movlw	26
  2363  0616  00F5               	movwf	??_Lcd_Cmd+1
  2364  0617  30F8               	movlw	248
  2365  0618  00F4               	movwf	??_Lcd_Cmd
  2366  0619                     u1387:
  2367  0619  0BF4               	decfsz	??_Lcd_Cmd,f
  2368  061A  2E19               	goto	u1387
  2369  061B  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2370  061C  2E19               	goto	u1387
  2371  061D  0000               	nop
  2372  061E                     l1757:
  2373                           
  2374                           ;LCD.c: 25:     RE1 = 0;
  2375  061E  1283               	bcf	3,5	;RP0=0, select bank0
  2376  061F  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0620  1089               	bcf	9,1	;volatile
  2378  0621                     l182:
  2379  0621  0008               	return
  2380  0622                     __end_of_Lcd_Cmd:
  2381                           
  2382                           	psect	text9
  2383  0698                     __ptext9:	
  2384 ;; *************** function _Lcd_Port *****************
  2385 ;; Defined at:
  2386 ;;		line 13 in file "LCD.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  a               1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  a               1    3[COMMON] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         1       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0
  2403 ;;      Totals:         1       0       0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_Lcd_Cmd
  2411 ;;		_Lcd_Init
  2412 ;;		_Lcd_Write_Char
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _Lcd_Port
  2418  0698                     _Lcd_Port:
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _Lcd_Port: [wreg]
  2422                           ;Lcd_Port@a stored from wreg
  2423  0698  00F3               	movwf	Lcd_Port@a
  2424  0699                     l1737:
  2425                           
  2426                           ;LCD.c: 13: void Lcd_Port(char a);LCD.c: 14: {;LCD.c: 15:  PORTD = a;
  2427  0699  0873               	movf	Lcd_Port@a,w
  2428  069A  1283               	bcf	3,5	;RP0=0, select bank0
  2429  069B  1303               	bcf	3,6	;RP1=0, select bank0
  2430  069C  0088               	movwf	8	;volatile
  2431  069D                     l179:
  2432  069D  0008               	return
  2433  069E                     __end_of_Lcd_Port:
  2434                           
  2435                           	psect	text10
  2436  0650                     __ptext10:	
  2437 ;; *************** function _ADC *****************
  2438 ;; Defined at:
  2439 ;;		line 16 in file "ADC.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0
  2455 ;;      Temps:          1       0       0       0       0
  2456 ;;      Totals:         1       0       0       0       0
  2457 ;;Total ram usage:        1 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_setup
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _ADC
  2469  0650                     _ADC:
  2470  0650                     l1333:	
  2471                           ;incstack = 0
  2472                           ; Regs used in _ADC: [wreg+status,2+status,0]
  2473                           
  2474                           
  2475                           ;ADC.c: 18:         ADCON1bits.ADFM = 0;
  2476  0650  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0651  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0652  139F               	bcf	31,7	;volatile
  2479                           
  2480                           ;ADC.c: 19:         ADCON1bits.VCFG0 = 0;
  2481  0653  121F               	bcf	31,4	;volatile
  2482                           
  2483                           ;ADC.c: 20:         ADCON1bits.VCFG1 = 0;
  2484  0654  129F               	bcf	31,5	;volatile
  2485  0655                     l1335:
  2486                           
  2487                           ;ADC.c: 22:         ADCON0bits.ADCS = 0b10;
  2488  0655  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0656  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0657  081F               	movf	31,w	;volatile
  2491  0658  393F               	andlw	-193
  2492  0659  3880               	iorlw	128
  2493  065A  009F               	movwf	31	;volatile
  2494                           
  2495                           ;ADC.c: 23:         ADCON0bits.CHS = 0;
  2496  065B  30C3               	movlw	-61
  2497  065C  059F               	andwf	31,f	;volatile
  2498  065D                     l1337:
  2499                           
  2500                           ;ADC.c: 24:         ADCON0bits.ADON = 1;
  2501  065D  141F               	bsf	31,0	;volatile
  2502  065E                     l1339:
  2503                           
  2504                           ;ADC.c: 25:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2505  065E  3021               	movlw	33
  2506  065F  00F3               	movwf	??_ADC
  2507  0660                     u1397:
  2508  0660  0BF3               	decfsz	??_ADC,f
  2509  0661  2E60               	goto	u1397
  2510  0662                     l1341:
  2511                           
  2512                           ;ADC.c: 26:         ADCON0bits.GO = 1;
  2513  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0664  149F               	bsf	31,1	;volatile
  2516  0665                     l168:
  2517  0665  0008               	return
  2518  0666                     __end_of_ADC:
  2519                           
  2520                           	psect	text11
  2521  058E                     __ptext11:	
  2522 ;; *************** function ___wmul *****************
  2523 ;; Defined at:
  2524 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  multiplier      2    3[COMMON] unsigned int 
  2527 ;;  multiplicand    2    5[COMMON] unsigned int 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  product         2    0[BANK0 ] unsigned int 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  2    3[COMMON] unsigned int 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2539 ;;      Params:         4       0       0       0       0
  2540 ;;      Locals:         0       2       0       0       0
  2541 ;;      Temps:          0       0       0       0       0
  2542 ;;      Totals:         4       2       0       0       0
  2543 ;;Total ram usage:        6 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    1
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           
  2554                           ;psect for function ___wmul
  2555  058E                     ___wmul:
  2556  058E                     l1875:	
  2557                           ;incstack = 0
  2558                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2559                           
  2560  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2561  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0590  01A0               	clrf	___wmul@product
  2563  0591  01A1               	clrf	___wmul@product+1
  2564  0592                     l1877:
  2565  0592  1C73               	btfss	___wmul@multiplier,0
  2566  0593  2D95               	goto	u1121
  2567  0594  2D96               	goto	u1120
  2568  0595                     u1121:
  2569  0595  2D9E               	goto	l299
  2570  0596                     u1120:
  2571  0596                     l1879:
  2572  0596  0875               	movf	___wmul@multiplicand,w
  2573  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0599  07A0               	addwf	___wmul@product,f
  2576  059A  1803               	skipnc
  2577  059B  0AA1               	incf	___wmul@product+1,f
  2578  059C  0876               	movf	___wmul@multiplicand+1,w
  2579  059D  07A1               	addwf	___wmul@product+1,f
  2580  059E                     l299:
  2581  059E  3001               	movlw	1
  2582  059F                     u1135:
  2583  059F  1003               	clrc
  2584  05A0  0DF5               	rlf	___wmul@multiplicand,f
  2585  05A1  0DF6               	rlf	___wmul@multiplicand+1,f
  2586  05A2  3EFF               	addlw	-1
  2587  05A3  1D03               	skipz
  2588  05A4  2D9F               	goto	u1135
  2589  05A5                     l1881:
  2590  05A5  3001               	movlw	1
  2591  05A6                     u1145:
  2592  05A6  1003               	clrc
  2593  05A7  0CF4               	rrf	___wmul@multiplier+1,f
  2594  05A8  0CF3               	rrf	___wmul@multiplier,f
  2595  05A9  3EFF               	addlw	-1
  2596  05AA  1D03               	skipz
  2597  05AB  2DA6               	goto	u1145
  2598  05AC                     l1883:
  2599  05AC  0873               	movf	___wmul@multiplier,w
  2600  05AD  0474               	iorwf	___wmul@multiplier+1,w
  2601  05AE  1D03               	btfss	3,2
  2602  05AF  2DB1               	goto	u1151
  2603  05B0  2DB2               	goto	u1150
  2604  05B1                     u1151:
  2605  05B1  2D92               	goto	l1877
  2606  05B2                     u1150:
  2607  05B2                     l1885:
  2608  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  2609  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  2610  05B4  0821               	movf	___wmul@product+1,w
  2611  05B5  00F4               	movwf	?___wmul+1
  2612  05B6  0820               	movf	___wmul@product,w
  2613  05B7  00F3               	movwf	?___wmul
  2614  05B8                     l301:
  2615  05B8  0008               	return
  2616  05B9                     __end_of___wmul:
  2617                           
  2618                           	psect	text12
  2619  067B                     __ptext12:	
  2620 ;; *************** function ___bmul *****************
  2621 ;; Defined at:
  2622 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  multiplier      1    wreg     unsigned char 
  2625 ;;  multiplicand    1    3[COMMON] unsigned char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  multiplier      1    6[COMMON] unsigned char 
  2628 ;;  product         1    5[COMMON] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      unsigned char 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         1       0       0       0       0
  2639 ;;      Locals:         2       0       0       0       0
  2640 ;;      Temps:          1       0       0       0       0
  2641 ;;      Totals:         4       0       0       0       0
  2642 ;;Total ram usage:        4 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function ___bmul
  2654  067B                     ___bmul:
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2658                           ;___bmul@multiplier stored from wreg
  2659  067B  00F6               	movwf	___bmul@multiplier
  2660  067C                     l1451:
  2661  067C  01F5               	clrf	___bmul@product
  2662  067D                     l1453:
  2663  067D  1C76               	btfss	___bmul@multiplier,0
  2664  067E  2E80               	goto	u621
  2665  067F  2E81               	goto	u620
  2666  0680                     u621:
  2667  0680  2E85               	goto	l1457
  2668  0681                     u620:
  2669  0681                     l1455:
  2670  0681  0873               	movf	___bmul@multiplicand,w
  2671  0682  00F4               	movwf	??___bmul
  2672  0683  0874               	movf	??___bmul,w
  2673  0684  07F5               	addwf	___bmul@product,f
  2674  0685                     l1457:
  2675  0685  1003               	clrc
  2676  0686  0DF3               	rlf	___bmul@multiplicand,f
  2677  0687                     l1459:
  2678  0687  1003               	clrc
  2679  0688  0CF6               	rrf	___bmul@multiplier,f
  2680  0689  0876               	movf	___bmul@multiplier,w
  2681  068A  1D03               	btfss	3,2
  2682  068B  2E8D               	goto	u631
  2683  068C  2E8E               	goto	u630
  2684  068D                     u631:
  2685  068D  2E7D               	goto	l1453
  2686  068E                     u630:
  2687  068E                     l1461:
  2688  068E  0875               	movf	___bmul@product,w
  2689  068F                     l325:
  2690  068F  0008               	return
  2691  0690                     __end_of___bmul:
  2692                           
  2693                           	psect	text13
  2694  04F0                     __ptext13:	
  2695 ;; *************** function ___awmod *****************
  2696 ;; Defined at:
  2697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  divisor         2    3[COMMON] int 
  2700 ;;  dividend        2    5[COMMON] int 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  sign            1    1[BANK0 ] unsigned char 
  2703 ;;  counter         1    0[BANK0 ] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  2    3[COMMON] int 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         4       0       0       0       0
  2714 ;;      Locals:         0       2       0       0       0
  2715 ;;      Temps:          1       0       0       0       0
  2716 ;;      Totals:         5       2       0       0       0
  2717 ;;Total ram usage:        7 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           
  2728                           ;psect for function ___awmod
  2729  04F0                     ___awmod:
  2730  04F0                     l1889:	
  2731                           ;incstack = 0
  2732                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2733                           
  2734  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2735  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2736  04F2  01A1               	clrf	___awmod@sign
  2737  04F3                     l1891:
  2738  04F3  1FF6               	btfss	___awmod@dividend+1,7
  2739  04F4  2CF6               	goto	u1161
  2740  04F5  2CF7               	goto	u1160
  2741  04F6                     u1161:
  2742  04F6  2CFE               	goto	l1897
  2743  04F7                     u1160:
  2744  04F7                     l1893:
  2745  04F7  09F5               	comf	___awmod@dividend,f
  2746  04F8  09F6               	comf	___awmod@dividend+1,f
  2747  04F9  0AF5               	incf	___awmod@dividend,f
  2748  04FA  1903               	skipnz
  2749  04FB  0AF6               	incf	___awmod@dividend+1,f
  2750  04FC                     l1895:
  2751  04FC  01A1               	clrf	___awmod@sign
  2752  04FD  0AA1               	incf	___awmod@sign,f
  2753  04FE                     l1897:
  2754  04FE  1FF4               	btfss	___awmod@divisor+1,7
  2755  04FF  2D01               	goto	u1171
  2756  0500  2D02               	goto	u1170
  2757  0501                     u1171:
  2758  0501  2D07               	goto	l1901
  2759  0502                     u1170:
  2760  0502                     l1899:
  2761  0502  09F3               	comf	___awmod@divisor,f
  2762  0503  09F4               	comf	___awmod@divisor+1,f
  2763  0504  0AF3               	incf	___awmod@divisor,f
  2764  0505  1903               	skipnz
  2765  0506  0AF4               	incf	___awmod@divisor+1,f
  2766  0507                     l1901:
  2767  0507  0873               	movf	___awmod@divisor,w
  2768  0508  0474               	iorwf	___awmod@divisor+1,w
  2769  0509  1903               	btfsc	3,2
  2770  050A  2D0C               	goto	u1181
  2771  050B  2D0D               	goto	u1180
  2772  050C                     u1181:
  2773  050C  2D3C               	goto	l1919
  2774  050D                     u1180:
  2775  050D                     l1903:
  2776  050D  01A0               	clrf	___awmod@counter
  2777  050E  0AA0               	incf	___awmod@counter,f
  2778  050F  2D1B               	goto	l1909
  2779  0510                     l1905:
  2780  0510  3001               	movlw	1
  2781  0511                     u1195:
  2782  0511  1003               	clrc
  2783  0512  0DF3               	rlf	___awmod@divisor,f
  2784  0513  0DF4               	rlf	___awmod@divisor+1,f
  2785  0514  3EFF               	addlw	-1
  2786  0515  1D03               	skipz
  2787  0516  2D11               	goto	u1195
  2788  0517                     l1907:
  2789  0517  3001               	movlw	1
  2790  0518  00F7               	movwf	??___awmod
  2791  0519  0877               	movf	??___awmod,w
  2792  051A  07A0               	addwf	___awmod@counter,f
  2793  051B                     l1909:
  2794  051B  1FF4               	btfss	___awmod@divisor+1,7
  2795  051C  2D1E               	goto	u1201
  2796  051D  2D1F               	goto	u1200
  2797  051E                     u1201:
  2798  051E  2D10               	goto	l1905
  2799  051F                     u1200:
  2800  051F                     l1911:
  2801  051F  0874               	movf	___awmod@divisor+1,w
  2802  0520  0276               	subwf	___awmod@dividend+1,w
  2803  0521  1D03               	skipz
  2804  0522  2D25               	goto	u1215
  2805  0523  0873               	movf	___awmod@divisor,w
  2806  0524  0275               	subwf	___awmod@dividend,w
  2807  0525                     u1215:
  2808  0525  1C03               	skipc
  2809  0526  2D28               	goto	u1211
  2810  0527  2D29               	goto	u1210
  2811  0528                     u1211:
  2812  0528  2D2F               	goto	l1915
  2813  0529                     u1210:
  2814  0529                     l1913:
  2815  0529  0873               	movf	___awmod@divisor,w
  2816  052A  02F5               	subwf	___awmod@dividend,f
  2817  052B  0874               	movf	___awmod@divisor+1,w
  2818  052C  1C03               	skipc
  2819  052D  03F6               	decf	___awmod@dividend+1,f
  2820  052E  02F6               	subwf	___awmod@dividend+1,f
  2821  052F                     l1915:
  2822  052F  3001               	movlw	1
  2823  0530                     u1225:
  2824  0530  1003               	clrc
  2825  0531  0CF4               	rrf	___awmod@divisor+1,f
  2826  0532  0CF3               	rrf	___awmod@divisor,f
  2827  0533  3EFF               	addlw	-1
  2828  0534  1D03               	skipz
  2829  0535  2D30               	goto	u1225
  2830  0536                     l1917:
  2831  0536  3001               	movlw	1
  2832  0537  02A0               	subwf	___awmod@counter,f
  2833  0538  1D03               	btfss	3,2
  2834  0539  2D3B               	goto	u1231
  2835  053A  2D3C               	goto	u1230
  2836  053B                     u1231:
  2837  053B  2D1F               	goto	l1911
  2838  053C                     u1230:
  2839  053C                     l1919:
  2840  053C  0821               	movf	___awmod@sign,w
  2841  053D  1903               	btfsc	3,2
  2842  053E  2D40               	goto	u1241
  2843  053F  2D41               	goto	u1240
  2844  0540                     u1241:
  2845  0540  2D46               	goto	l1923
  2846  0541                     u1240:
  2847  0541                     l1921:
  2848  0541  09F5               	comf	___awmod@dividend,f
  2849  0542  09F6               	comf	___awmod@dividend+1,f
  2850  0543  0AF5               	incf	___awmod@dividend,f
  2851  0544  1903               	skipnz
  2852  0545  0AF6               	incf	___awmod@dividend+1,f
  2853  0546                     l1923:
  2854  0546  0876               	movf	___awmod@dividend+1,w
  2855  0547  00F4               	movwf	?___awmod+1
  2856  0548  0875               	movf	___awmod@dividend,w
  2857  0549  00F3               	movwf	?___awmod
  2858  054A                     l465:
  2859  054A  0008               	return
  2860  054B                     __end_of___awmod:
  2861                           
  2862                           	psect	text14
  2863  042A                     __ptext14:	
  2864 ;; *************** function ___awdiv *****************
  2865 ;; Defined at:
  2866 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  divisor         2    2[BANK0 ] int 
  2869 ;;  dividend        2    4[BANK0 ] int 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  quotient        2    8[BANK0 ] int 
  2872 ;;  sign            1    7[BANK0 ] unsigned char 
  2873 ;;  counter         1    6[BANK0 ] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2    2[BANK0 ] int 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         0       4       0       0       0
  2884 ;;      Locals:         0       4       0       0       0
  2885 ;;      Temps:          1       0       0       0       0
  2886 ;;      Totals:         1       8       0       0       0
  2887 ;;Total ram usage:        9 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function ___awdiv
  2899  042A                     ___awdiv:
  2900  042A                     l1465:	
  2901                           ;incstack = 0
  2902                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2903                           
  2904  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2905  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2906  042C  01A7               	clrf	___awdiv@sign
  2907  042D                     l1467:
  2908  042D  1FA3               	btfss	___awdiv@divisor+1,7
  2909  042E  2C30               	goto	u641
  2910  042F  2C31               	goto	u640
  2911  0430                     u641:
  2912  0430  2C38               	goto	l1473
  2913  0431                     u640:
  2914  0431                     l1469:
  2915  0431  09A2               	comf	___awdiv@divisor,f
  2916  0432  09A3               	comf	___awdiv@divisor+1,f
  2917  0433  0AA2               	incf	___awdiv@divisor,f
  2918  0434  1903               	skipnz
  2919  0435  0AA3               	incf	___awdiv@divisor+1,f
  2920  0436                     l1471:
  2921  0436  01A7               	clrf	___awdiv@sign
  2922  0437  0AA7               	incf	___awdiv@sign,f
  2923  0438                     l1473:
  2924  0438  1FA5               	btfss	___awdiv@dividend+1,7
  2925  0439  2C3B               	goto	u651
  2926  043A  2C3C               	goto	u650
  2927  043B                     u651:
  2928  043B  2C45               	goto	l1479
  2929  043C                     u650:
  2930  043C                     l1475:
  2931  043C  09A4               	comf	___awdiv@dividend,f
  2932  043D  09A5               	comf	___awdiv@dividend+1,f
  2933  043E  0AA4               	incf	___awdiv@dividend,f
  2934  043F  1903               	skipnz
  2935  0440  0AA5               	incf	___awdiv@dividend+1,f
  2936  0441                     l1477:
  2937  0441  3001               	movlw	1
  2938  0442  00F7               	movwf	??___awdiv
  2939  0443  0877               	movf	??___awdiv,w
  2940  0444  06A7               	xorwf	___awdiv@sign,f
  2941  0445                     l1479:
  2942  0445  01A8               	clrf	___awdiv@quotient
  2943  0446  01A9               	clrf	___awdiv@quotient+1
  2944  0447                     l1481:
  2945  0447  0822               	movf	___awdiv@divisor,w
  2946  0448  0423               	iorwf	___awdiv@divisor+1,w
  2947  0449  1903               	btfsc	3,2
  2948  044A  2C4C               	goto	u661
  2949  044B  2C4D               	goto	u660
  2950  044C                     u661:
  2951  044C  2C84               	goto	l1501
  2952  044D                     u660:
  2953  044D                     l1483:
  2954  044D  01A6               	clrf	___awdiv@counter
  2955  044E  0AA6               	incf	___awdiv@counter,f
  2956  044F  2C5B               	goto	l1489
  2957  0450                     l1485:
  2958  0450  3001               	movlw	1
  2959  0451                     u675:
  2960  0451  1003               	clrc
  2961  0452  0DA2               	rlf	___awdiv@divisor,f
  2962  0453  0DA3               	rlf	___awdiv@divisor+1,f
  2963  0454  3EFF               	addlw	-1
  2964  0455  1D03               	skipz
  2965  0456  2C51               	goto	u675
  2966  0457                     l1487:
  2967  0457  3001               	movlw	1
  2968  0458  00F7               	movwf	??___awdiv
  2969  0459  0877               	movf	??___awdiv,w
  2970  045A  07A6               	addwf	___awdiv@counter,f
  2971  045B                     l1489:
  2972  045B  1FA3               	btfss	___awdiv@divisor+1,7
  2973  045C  2C5E               	goto	u681
  2974  045D  2C5F               	goto	u680
  2975  045E                     u681:
  2976  045E  2C50               	goto	l1485
  2977  045F                     u680:
  2978  045F                     l1491:
  2979  045F  3001               	movlw	1
  2980  0460                     u695:
  2981  0460  1003               	clrc
  2982  0461  0DA8               	rlf	___awdiv@quotient,f
  2983  0462  0DA9               	rlf	___awdiv@quotient+1,f
  2984  0463  3EFF               	addlw	-1
  2985  0464  1D03               	skipz
  2986  0465  2C60               	goto	u695
  2987  0466  0823               	movf	___awdiv@divisor+1,w
  2988  0467  0225               	subwf	___awdiv@dividend+1,w
  2989  0468  1D03               	skipz
  2990  0469  2C6C               	goto	u705
  2991  046A  0822               	movf	___awdiv@divisor,w
  2992  046B  0224               	subwf	___awdiv@dividend,w
  2993  046C                     u705:
  2994  046C  1C03               	skipc
  2995  046D  2C6F               	goto	u701
  2996  046E  2C70               	goto	u700
  2997  046F                     u701:
  2998  046F  2C77               	goto	l1497
  2999  0470                     u700:
  3000  0470                     l1493:
  3001  0470  0822               	movf	___awdiv@divisor,w
  3002  0471  02A4               	subwf	___awdiv@dividend,f
  3003  0472  0823               	movf	___awdiv@divisor+1,w
  3004  0473  1C03               	skipc
  3005  0474  03A5               	decf	___awdiv@dividend+1,f
  3006  0475  02A5               	subwf	___awdiv@dividend+1,f
  3007  0476                     l1495:
  3008  0476  1428               	bsf	___awdiv@quotient,0
  3009  0477                     l1497:
  3010  0477  3001               	movlw	1
  3011  0478                     u715:
  3012  0478  1003               	clrc
  3013  0479  0CA3               	rrf	___awdiv@divisor+1,f
  3014  047A  0CA2               	rrf	___awdiv@divisor,f
  3015  047B  3EFF               	addlw	-1
  3016  047C  1D03               	skipz
  3017  047D  2C78               	goto	u715
  3018  047E                     l1499:
  3019  047E  3001               	movlw	1
  3020  047F  02A6               	subwf	___awdiv@counter,f
  3021  0480  1D03               	btfss	3,2
  3022  0481  2C83               	goto	u721
  3023  0482  2C84               	goto	u720
  3024  0483                     u721:
  3025  0483  2C5F               	goto	l1491
  3026  0484                     u720:
  3027  0484                     l1501:
  3028  0484  0827               	movf	___awdiv@sign,w
  3029  0485  1903               	btfsc	3,2
  3030  0486  2C88               	goto	u731
  3031  0487  2C89               	goto	u730
  3032  0488                     u731:
  3033  0488  2C8E               	goto	l1505
  3034  0489                     u730:
  3035  0489                     l1503:
  3036  0489  09A8               	comf	___awdiv@quotient,f
  3037  048A  09A9               	comf	___awdiv@quotient+1,f
  3038  048B  0AA8               	incf	___awdiv@quotient,f
  3039  048C  1903               	skipnz
  3040  048D  0AA9               	incf	___awdiv@quotient+1,f
  3041  048E                     l1505:
  3042  048E  0829               	movf	___awdiv@quotient+1,w
  3043  048F  00A3               	movwf	?___awdiv+1
  3044  0490  0828               	movf	___awdiv@quotient,w
  3045  0491  00A2               	movwf	?___awdiv
  3046  0492                     l452:
  3047  0492  0008               	return
  3048  0493                     __end_of___awdiv:
  3049                           
  3050                           	psect	text15
  3051  02E2                     __ptext15:	
  3052 ;; *************** function _isr *****************
  3053 ;; Defined at:
  3054 ;;		line 168 in file "Lab02_main.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0
  3070 ;;      Temps:          3       0       0       0       0
  3071 ;;      Totals:         3       0       0       0       0
  3072 ;;Total ram usage:        3 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		Interrupt level 1
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function _isr
  3083  02E2                     _isr:
  3084  02E2                     i1l1631:
  3085                           
  3086                           ;Lab02_main.c: 169:         } else if (flag == 4){
  3087  02E2  1D0B               	btfss	11,2	;volatile
  3088  02E3  2AE5               	goto	u91_21
  3089  02E4  2AE6               	goto	u91_20
  3090  02E5                     u91_21:
  3091  02E5  2AED               	goto	i1l1637
  3092  02E6                     u91_20:
  3093  02E6                     i1l1633:
  3094                           
  3095                           ;Lab02_main.c: 170:             TXREG = 0x2D;
  3096  02E6  3001               	movlw	1
  3097  02E7  00F0               	movwf	??_isr
  3098  02E8  0870               	movf	??_isr,w
  3099  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3100  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3101  02EB  07C0               	addwf	_cont,f
  3102  02EC                     i1l1635:
  3103                           
  3104                           ;Lab02_main.c: 171:             flag = 5;
  3105  02EC  110B               	bcf	11,2	;volatile
  3106  02ED                     i1l1637:
  3107                           
  3108                           ;Lab02_main.c: 174:             TXREG = display_unidad_s2 + 48;
  3109  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3110  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  3111  02EF  1F0C               	btfss	12,6	;volatile
  3112  02F0  2AF2               	goto	u92_21
  3113  02F1  2AF3               	goto	u92_20
  3114  02F2                     u92_21:
  3115  02F2  2B0F               	goto	i1l1657
  3116  02F3                     u92_20:
  3117  02F3                     i1l1639:
  3118                           
  3119                           ;Lab02_main.c: 175:             flag = 6;
  3120  02F3  0378               	decf	_flag_1,w
  3121  02F4  1D03               	btfss	3,2
  3122  02F5  2AF7               	goto	u93_21
  3123  02F6  2AF8               	goto	u93_20
  3124  02F7                     u93_21:
  3125  02F7  2AFF               	goto	i1l1647
  3126  02F8                     u93_20:
  3127  02F8                     i1l1641:
  3128                           
  3129                           ;Lab02_main.c: 176:         } else if (flag == 6){
  3130  02F8  081E               	movf	30,w	;volatile
  3131  02F9  00F0               	movwf	??_isr
  3132  02FA  0870               	movf	??_isr,w
  3133  02FB  00C3               	movwf	_POT1
  3134  02FC                     i1l1643:
  3135                           
  3136                           ;Lab02_main.c: 177:             TXREG = 0x2E;
  3137  02FC  151F               	bsf	31,2	;volatile
  3138  02FD                     i1l1645:
  3139                           
  3140                           ;Lab02_main.c: 178:             flag = 7;
  3141  02FD  01F8               	clrf	_flag_1
  3142                           
  3143                           ;Lab02_main.c: 179:         } else if (flag == 7){
  3144  02FE  2B06               	goto	i1l1653
  3145  02FF                     i1l1647:
  3146                           
  3147                           ;Lab02_main.c: 180:             TXREG = display_decimal_s2 + 48;
  3148  02FF  081E               	movf	30,w	;volatile
  3149  0300  00F0               	movwf	??_isr
  3150  0301  0870               	movf	??_isr,w
  3151  0302  00C2               	movwf	_POT2
  3152  0303                     i1l1649:
  3153                           
  3154                           ;Lab02_main.c: 181:             flag = 8;
  3155  0303  111F               	bcf	31,2	;volatile
  3156  0304                     i1l1651:
  3157                           
  3158                           ;Lab02_main.c: 182:         } else if (flag == 8){
  3159  0304  01F8               	clrf	_flag_1
  3160  0305  0AF8               	incf	_flag_1,f
  3161  0306                     i1l1653:
  3162                           
  3163                           ;Lab02_main.c: 185:         } else if (flag == 9){
  3164  0306  130C               	bcf	12,6	;volatile
  3165                           
  3166                           ;Lab02_main.c: 186:             TXREG = 0x0D;
  3167  0307  3027               	movlw	39
  3168  0308  00F0               	movwf	??_isr
  3169  0309                     u140_27:
  3170  0309  0BF0               	decfsz	??_isr,f
  3171  030A  2B09               	goto	u140_27
  3172  030B  2B0C               	nop2
  3173  030C                     i1l1655:
  3174                           
  3175                           ;Lab02_main.c: 187:             flag = 0;
  3176  030C  1283               	bcf	3,5	;RP0=0, select bank0
  3177  030D  1303               	bcf	3,6	;RP1=0, select bank0
  3178  030E  149F               	bsf	31,1	;volatile
  3179  030F                     i1l1657:
  3180                           
  3181                           ;Lab02_main.c: 190:     }
  3182  030F  1E8C               	btfss	12,5	;volatile
  3183  0310  2B12               	goto	u94_21
  3184  0311  2B13               	goto	u94_20
  3185  0312                     u94_21:
  3186  0312  2B34               	goto	i1l1679
  3187  0313                     u94_20:
  3188  0313                     i1l1659:
  3189                           
  3190                           ;Lab02_main.c: 192: 
  3191  0313  1785               	bsf	5,7	;volatile
  3192  0314                     i1l1661:
  3193                           
  3194                           ;Lab02_main.c: 193: 
  3195  0314  300D               	movlw	13
  3196  0315  061A               	xorwf	26,w	;volatile
  3197  0316  1D03               	btfss	3,2
  3198  0317  2B19               	goto	u95_21
  3199  0318  2B1A               	goto	u95_20
  3200  0319                     u95_21:
  3201  0319  2B2F               	goto	i1l1677
  3202  031A                     u95_20:
  3203  031A                     i1l1663:
  3204                           
  3205                           ;Lab02_main.c: 194: 
  3206  031A  1385               	bcf	5,7	;volatile
  3207  031B                     i1l1665:
  3208                           
  3209                           ;Lab02_main.c: 195: 
  3210  031B  302B               	movlw	43
  3211  031C  067A               	xorwf	_var_temp,w
  3212  031D  1D03               	btfss	3,2
  3213  031E  2B20               	goto	u96_21
  3214  031F  2B21               	goto	u96_20
  3215  0320                     u96_21:
  3216  0320  2B26               	goto	i1l1671
  3217  0321                     u96_20:
  3218  0321                     i1l1667:
  3219                           
  3220                           ;Lab02_main.c: 196: 
  3221  0321  3001               	movlw	1
  3222  0322  00F0               	movwf	??_isr
  3223  0323  0870               	movf	??_isr,w
  3224  0324  07C1               	addwf	_contador,f
  3225                           
  3226                           ;Lab02_main.c: 197: void LCD_display(){
  3227  0325  2B34               	goto	i1l1679
  3228  0326                     i1l1671:
  3229  0326  302D               	movlw	45
  3230  0327  067A               	xorwf	_var_temp,w
  3231  0328  1D03               	btfss	3,2
  3232  0329  2B2B               	goto	u97_21
  3233  032A  2B2C               	goto	u97_20
  3234  032B                     u97_21:
  3235  032B  2B34               	goto	i1l132
  3236  032C                     u97_20:
  3237  032C                     i1l1673:
  3238                           
  3239                           ;Lab02_main.c: 202:     Lcd_Write_String("0.00");
  3240  032C  3001               	movlw	1
  3241  032D  02C1               	subwf	_contador,f
  3242                           
  3243                           ;Lab02_main.c: 203:     Lcd_Set_Cursor(1,8);
  3244  032E  2B34               	goto	i1l1679
  3245  032F                     i1l1677:
  3246                           
  3247                           ;Lab02_main.c: 209:     Lcd_Set_Cursor(2,13);
  3248  032F  081A               	movf	26,w	;volatile
  3249  0330  00F0               	movwf	??_isr
  3250  0331  0870               	movf	??_isr,w
  3251  0332  00FA               	movwf	_var_temp
  3252  0333  2B34               	goto	i1l1679
  3253  0334                     i1l132:	
  3254                           ;Lab02_main.c: 210:     Lcd_Write_String("000");
  3255                           
  3256  0334                     i1l1679:
  3257                           
  3258                           ;Lab02_main.c: 213: 
  3259  0334  1E0C               	btfss	12,4	;volatile
  3260  0335  2B37               	goto	u98_21
  3261  0336  2B38               	goto	u98_20
  3262  0337                     u98_21:
  3263  0337  2BBA               	goto	i1l153
  3264  0338                     u98_20:
  3265  0338                     i1l1681:
  3266                           
  3267                           ;Lab02_main.c: 214: 
  3268  0338  0879               	movf	_flag,w
  3269  0339  1D03               	btfss	3,2
  3270  033A  2B3C               	goto	u99_21
  3271  033B  2B3D               	goto	u99_20
  3272  033C                     u99_21:
  3273  033C  2B43               	goto	i1l1687
  3274  033D                     u99_20:
  3275  033D                     i1l1683:
  3276                           
  3277                           ;Lab02_main.c: 215: 
  3278  033D  083F               	movf	_display_unidad,w
  3279  033E  3E30               	addlw	48
  3280  033F  0099               	movwf	25	;volatile
  3281  0340                     i1l1685:
  3282                           
  3283                           ;Lab02_main.c: 216: 
  3284  0340  01F9               	clrf	_flag
  3285  0341  0AF9               	incf	_flag,f
  3286                           
  3287                           ;Lab02_main.c: 217: void setup(void){
  3288  0342  2BB9               	goto	i1l1735
  3289  0343                     i1l1687:
  3290  0343  0379               	decf	_flag,w
  3291  0344  1D03               	btfss	3,2
  3292  0345  2B47               	goto	u100_21
  3293  0346  2B48               	goto	u100_20
  3294  0347                     u100_21:
  3295  0347  2B4F               	goto	i1l1691
  3296  0348                     u100_20:
  3297  0348                     i1l1689:
  3298                           
  3299                           ;Lab02_main.c: 218: 
  3300  0348  302E               	movlw	46
  3301  0349  0099               	movwf	25	;volatile
  3302                           
  3303                           ;Lab02_main.c: 219: 
  3304  034A  3002               	movlw	2
  3305  034B  00F0               	movwf	??_isr
  3306  034C  0870               	movf	??_isr,w
  3307  034D  00F9               	movwf	_flag
  3308                           
  3309                           ;Lab02_main.c: 220:     OSCCONbits.IRCF2 = 1;
  3310  034E  2BB9               	goto	i1l1735
  3311  034F                     i1l1691:
  3312  034F  3002               	movlw	2
  3313  0350  0679               	xorwf	_flag,w
  3314  0351  1D03               	btfss	3,2
  3315  0352  2B54               	goto	u101_21
  3316  0353  2B55               	goto	u101_20
  3317  0354                     u101_21:
  3318  0354  2B5D               	goto	i1l1697
  3319  0355                     u101_20:
  3320  0355                     i1l1693:
  3321                           
  3322                           ;Lab02_main.c: 221:     OSCCONbits.IRCF1 = 1;
  3323  0355  083E               	movf	_display_decimal,w
  3324  0356  3E30               	addlw	48
  3325  0357  0099               	movwf	25	;volatile
  3326  0358                     i1l1695:
  3327                           
  3328                           ;Lab02_main.c: 222:     OSCCONbits.IRCF0 = 1;
  3329  0358  3003               	movlw	3
  3330  0359  00F0               	movwf	??_isr
  3331  035A  0870               	movf	??_isr,w
  3332  035B  00F9               	movwf	_flag
  3333                           
  3334                           ;Lab02_main.c: 223:     OSCCONbits.SCS = 1;
  3335  035C  2BB9               	goto	i1l1735
  3336  035D                     i1l1697:
  3337  035D  3003               	movlw	3
  3338  035E  0679               	xorwf	_flag,w
  3339  035F  1D03               	btfss	3,2
  3340  0360  2B62               	goto	u102_21
  3341  0361  2B63               	goto	u102_20
  3342  0362                     u102_21:
  3343  0362  2B6B               	goto	i1l1703
  3344  0363                     u102_20:
  3345  0363                     i1l1699:
  3346                           
  3347                           ;Lab02_main.c: 224: 
  3348  0363  083D               	movf	_display_decimal_2,w
  3349  0364  3E30               	addlw	48
  3350  0365  0099               	movwf	25	;volatile
  3351  0366                     i1l1701:
  3352                           
  3353                           ;Lab02_main.c: 225: 
  3354  0366  3004               	movlw	4
  3355  0367  00F0               	movwf	??_isr
  3356  0368  0870               	movf	??_isr,w
  3357  0369  00F9               	movwf	_flag
  3358                           
  3359                           ;Lab02_main.c: 226:     ANSELH = 0x00;
  3360  036A  2BB9               	goto	i1l1735
  3361  036B                     i1l1703:
  3362  036B  3004               	movlw	4
  3363  036C  0679               	xorwf	_flag,w
  3364  036D  1D03               	btfss	3,2
  3365  036E  2B70               	goto	u103_21
  3366  036F  2B71               	goto	u103_20
  3367  0370                     u103_21:
  3368  0370  2B78               	goto	i1l1707
  3369  0371                     u103_20:
  3370  0371                     i1l1705:
  3371                           
  3372                           ;Lab02_main.c: 227:     ANSEL = 0x03;
  3373  0371  302D               	movlw	45
  3374  0372  0099               	movwf	25	;volatile
  3375                           
  3376                           ;Lab02_main.c: 228: 
  3377  0373  3005               	movlw	5
  3378  0374  00F0               	movwf	??_isr
  3379  0375  0870               	movf	??_isr,w
  3380  0376  00F9               	movwf	_flag
  3381                           
  3382                           ;Lab02_main.c: 229:     TRISA = 0x03;
  3383  0377  2BB9               	goto	i1l1735
  3384  0378                     i1l1707:
  3385  0378  3005               	movlw	5
  3386  0379  0679               	xorwf	_flag,w
  3387  037A  1D03               	btfss	3,2
  3388  037B  2B7D               	goto	u104_21
  3389  037C  2B7E               	goto	u104_20
  3390  037D                     u104_21:
  3391  037D  2B86               	goto	i1l1713
  3392  037E                     u104_20:
  3393  037E                     i1l1709:
  3394                           
  3395                           ;Lab02_main.c: 231:     TRISD = 0x00;
  3396  037E  083C               	movf	_display_unidad_s2,w
  3397  037F  3E30               	addlw	48
  3398  0380  0099               	movwf	25	;volatile
  3399  0381                     i1l1711:
  3400                           
  3401                           ;Lab02_main.c: 232:     TRISE = 0x00;
  3402  0381  3006               	movlw	6
  3403  0382  00F0               	movwf	??_isr
  3404  0383  0870               	movf	??_isr,w
  3405  0384  00F9               	movwf	_flag
  3406                           
  3407                           ;Lab02_main.c: 233: 
  3408  0385  2BB9               	goto	i1l1735
  3409  0386                     i1l1713:
  3410  0386  3006               	movlw	6
  3411  0387  0679               	xorwf	_flag,w
  3412  0388  1D03               	btfss	3,2
  3413  0389  2B8B               	goto	u105_21
  3414  038A  2B8C               	goto	u105_20
  3415  038B                     u105_21:
  3416  038B  2B93               	goto	i1l1717
  3417  038C                     u105_20:
  3418  038C                     i1l1715:
  3419                           
  3420                           ;Lab02_main.c: 234:     PORTA = 0x00;
  3421  038C  302E               	movlw	46
  3422  038D  0099               	movwf	25	;volatile
  3423                           
  3424                           ;Lab02_main.c: 235:     PORTC = 0x00;
  3425  038E  3007               	movlw	7
  3426  038F  00F0               	movwf	??_isr
  3427  0390  0870               	movf	??_isr,w
  3428  0391  00F9               	movwf	_flag
  3429                           
  3430                           ;Lab02_main.c: 236:     PORTD = 0x00;
  3431  0392  2BB9               	goto	i1l1735
  3432  0393                     i1l1717:
  3433  0393  3007               	movlw	7
  3434  0394  0679               	xorwf	_flag,w
  3435  0395  1D03               	btfss	3,2
  3436  0396  2B98               	goto	u106_21
  3437  0397  2B99               	goto	u106_20
  3438  0398                     u106_21:
  3439  0398  2BA1               	goto	i1l1723
  3440  0399                     u106_20:
  3441  0399                     i1l1719:
  3442                           
  3443                           ;Lab02_main.c: 237:     PORTE = 0x00;
  3444  0399  083B               	movf	_display_decimal_s2,w
  3445  039A  3E30               	addlw	48
  3446  039B  0099               	movwf	25	;volatile
  3447  039C                     i1l1721:
  3448                           
  3449                           ;Lab02_main.c: 238: 
  3450  039C  3008               	movlw	8
  3451  039D  00F0               	movwf	??_isr
  3452  039E  0870               	movf	??_isr,w
  3453  039F  00F9               	movwf	_flag
  3454                           
  3455                           ;Lab02_main.c: 239: 
  3456  03A0  2BB9               	goto	i1l1735
  3457  03A1                     i1l1723:
  3458  03A1  3008               	movlw	8
  3459  03A2  0679               	xorwf	_flag,w
  3460  03A3  1D03               	btfss	3,2
  3461  03A4  2BA6               	goto	u107_21
  3462  03A5  2BA7               	goto	u107_20
  3463  03A6                     u107_21:
  3464  03A6  2BAF               	goto	i1l1729
  3465  03A7                     u107_20:
  3466  03A7                     i1l1725:
  3467                           
  3468                           ;Lab02_main.c: 240:     ADC();
  3469  03A7  083A               	movf	_display_decimal_2_s2,w
  3470  03A8  3E30               	addlw	48
  3471  03A9  0099               	movwf	25	;volatile
  3472  03AA                     i1l1727:
  3473                           
  3474                           ;Lab02_main.c: 241: 
  3475  03AA  3009               	movlw	9
  3476  03AB  00F0               	movwf	??_isr
  3477  03AC  0870               	movf	??_isr,w
  3478  03AD  00F9               	movwf	_flag
  3479                           
  3480                           ;Lab02_main.c: 242: 
  3481  03AE  2BB9               	goto	i1l1735
  3482  03AF                     i1l1729:
  3483  03AF  3009               	movlw	9
  3484  03B0  0679               	xorwf	_flag,w
  3485  03B1  1D03               	btfss	3,2
  3486  03B2  2BB4               	goto	u108_21
  3487  03B3  2BB5               	goto	u108_20
  3488  03B4                     u108_21:
  3489  03B4  2BB9               	goto	i1l147
  3490  03B5                     u108_20:
  3491  03B5                     i1l1731:
  3492                           
  3493                           ;Lab02_main.c: 243:     INTCONbits.GIE = 1;
  3494  03B5  300D               	movlw	13
  3495  03B6  0099               	movwf	25	;volatile
  3496  03B7                     i1l1733:
  3497                           
  3498                           ;Lab02_main.c: 244:     INTCONbits.T0IE = 1;
  3499  03B7  01F9               	clrf	_flag
  3500  03B8  2BB9               	goto	i1l1735
  3501  03B9                     i1l147:
  3502  03B9                     i1l1735:
  3503                           
  3504                           ;Lab02_main.c: 246:     INTCONbits.PEIE = 1;
  3505  03B9  120C               	bcf	12,4	;volatile
  3506  03BA                     i1l153:
  3507  03BA  0872               	movf	??_isr+2,w
  3508  03BB  008A               	movwf	10
  3509  03BC  0E71               	swapf	??_isr+1,w
  3510  03BD  0083               	movwf	3
  3511  03BE  0EFE               	swapf	btemp,f
  3512  03BF  0E7E               	swapf	btemp,w
  3513  03C0  0009               	retfie
  3514  03C1                     __end_of_isr:
  3515  007E                     btemp	set	126	;btemp
  3516  007E                     wtemp0	set	126
  3517                           
  3518                           	psect	intentry
  3519  0004                     __pintentry:	
  3520                           ;incstack = 0
  3521                           ; Regs used in _isr: [wreg+status,2+status,0]
  3522                           
  3523  0004                     interrupt_function:
  3524  007E                     saved_w	set	btemp
  3525  0004  00FE               	movwf	btemp
  3526  0005  0E03               	swapf	3,w
  3527  0006  00F1               	movwf	??_isr+1
  3528  0007  080A               	movf	10,w
  3529  0008  00F2               	movwf	??_isr+2
  3530  0009  120A  118A  2AE2   	ljmp	_isr
  3531                           
  3532                           	psect	config
  3533                           
  3534                           ;Config register CONFIG1 @ 0x2007
  3535                           ;	Oscillator Selection bits
  3536                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3537                           ;	Watchdog Timer Enable bit
  3538                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3539                           ;	Power-up Timer Enable bit
  3540                           ;	PWRTE = OFF, PWRT disabled
  3541                           ;	RE3/MCLR pin function select bit
  3542                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3543                           ;	Code Protection bit
  3544                           ;	CP = OFF, Program memory code protection is disabled
  3545                           ;	Data Code Protection bit
  3546                           ;	CPD = OFF, Data memory code protection is disabled
  3547                           ;	Brown Out Reset Selection bits
  3548                           ;	BOREN = OFF, BOR disabled
  3549                           ;	Internal External Switchover bit
  3550                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3551                           ;	Fail-Safe Clock Monitor Enabled bit
  3552                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3553                           ;	Low Voltage Programming Enable bit
  3554                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3555                           ;	In-Circuit Debugger Mode bit
  3556                           ;	DEBUG = 0x1, unprogrammed default
  3557  2007                     	org	8199
  3558  2007  20D4               	dw	8404
  3559                           
  3560                           ;Config register CONFIG2 @ 0x2008
  3561                           ;	Brown-out Reset Selection bit
  3562                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3563                           ;	Flash Program Memory Self Write Enable bits
  3564                           ;	WRT = OFF, Write protection off
  3565  2008                     	org	8200
  3566  2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___awdiv
    _main->___awmod
    _Lcd_Init->_Lcd_Cmd
    _LCD_display->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    _setup->_LCD_display
    _LCD_display->_Lcd_Set_Cursor
    _LCD_display->_Lcd_Write_String
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    8064
                                             10 BANK0     10    10      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2105
                                _ADC
                        _LCD_display
                           _Lcd_Init
                              _USART
 ---------------------------------------------------------------------------------
 (2) _USART                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_display                                          1     1      0    2012
                                              3 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     3     3      0     408
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1    1604
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1216
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     396
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1820
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   ___awdiv
     ___wmul (ARG)
   ___awmod
   ___bmul
   ___wmul
   _setup
     _ADC
     _LCD_display
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _USART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 15:00:20 2021

                        _a 0034                          pc 0002             ___bmul@product 0075  
             ___awdiv@sign 0027                         fsr 0004        ___wmul@multiplicand 0075  
                      l110 0207                        l111 0211                        l200 05E1  
                      l112 021B                        l107 01E9                        l108 01F3  
                      l301 05B8                        l213 067A                        l109 01FD  
                      l156 0429                        l325 068F                        l182 0621  
                      l191 04EF                        l159 058D                        _ADC 0650  
                      l168 0665                        l194 064F                        l179 069D  
                      l452 0492                        l188 0607                        l465 054A  
                      l299 059E                        _RA7 002F                        _RE0 0048  
                      _RE1 0049                        u700 0470                        u620 0681  
                      u701 046F                        u621 0680                        u630 068E  
                      u631 068D                        u720 0484                        u640 0431  
                      u721 0483                        u705 046C                        u641 0430  
                      u730 0489                        u650 043C                        u731 0488  
                      u715 0478                        u651 043B                        u660 044D  
                      u661 044C                        u680 045F                        u681 045E  
                      u675 0451                        u695 0460                        _isr 02E2  
                      fsr0 0004                        indf 0000               ___awmod@sign 0021  
                     ?_ADC 0070                       l2001 02AB                       l2003 02B4  
                     l2005 02C0                       l2007 02C9                       l2009 02D5  
                     l1501 0484                       l1341 0662                       l1333 0650  
                     l1503 0489                       l1335 0655                       l1505 048E  
                     l1337 065D                       l1451 067C                       l1339 065E  
                     l1371 0671                       l1461 068E                       l1453 067D  
                     l1373 0672                       l1471 0436                       l1455 0681  
                     l1375 0675                       l1367 0666                       l1481 0447  
                     l1473 0438                       l1465 042A                       l1457 0685  
                     l1801 049E                       l1377 0676                       l1369 066D  
                     l1491 045F                       l1483 044D                       l1475 043C  
                     l1467 042D                       l1459 0687                       l1811 04D1  
                     l1803 04A4                       l1379 0677                       l1493 0470  
                     l1485 0450                       l1477 0441                       l1469 0431  
                     l1901 0507                       l1741 063E                       l1813 04D7  
                     l1805 04B4                       l1821 054B                       l1495 0476  
                     l1487 0457                       l1479 0445                       l1911 051F  
                     l1903 050D                       l1751 060C                       l1743 0644  
                     l1815 04DD                       l1807 04BE                       l1831 055C  
                     l1823 0551                       l1497 0477                       l1489 045B  
                     l1921 0541                       l1913 0529                       l1905 0510  
                     l1737 0699                       l1753 0612                       l1761 05EA  
                     l1745 0647                       l1817 04E3                       l1809 04CB  
                     l1841 0563                       l1833 055D                       l1825 0554  
                     l1499 047E                       l1923 0546                       l1915 052F  
                     l1907 0517                       l1755 0615                       l1763 05EF  
                     l1747 064C                       l1739 063B                       l1771 05BC  
                     l1819 04E9                       l1851 056C                       l1843 0564  
                     l1835 055E                       l1827 0556                       l1931 002C  
                     l1917 0536                       l1909 051B                       l1757 061E  
                     l1749 0609                       l1765 05F6                       l1773 05BF  
                     l1781 03CD                       l1861 057D                       l1853 056D  
                     l1845 0569                       l1837 0561                       l1829 055A  
                     l1941 0099                       l1933 002D                       l1919 053C  
                     l1767 05FC                       l1759 05E5                       l1775 05CC  
                     l1791 0405                       l1783 03D3                       l1871 0588  
                     l1863 0582                       l1855 0570                       l1847 056A  
                     l1839 0562                       l1951 0187                       l1943 00DC  
                     l1935 0030                       l1927 001F                       l1881 05A5  
                     l1769 0601                       l1777 05D4                       l1793 0417  
                     l1785 03E1                       l1873 0589                       l1865 0585  
                     l1857 0573                       l1849 056B                       l1961 01E5  
                     l1953 019D                       l1945 00F2                       l1937 0047  
                     l1929 0024                       l1891 04F3                       l1883 05AC  
                     l1875 058E                       l1795 0423                       l1787 03ED  
                     l1779 03C1                       l1867 0586                       l1859 0578  
                     l1971 0217                       l1963 01EF                       l1955 01B3  
                     l1947 0131                       l1939 0086                       l1893 04F7  
                     l1885 05B2                       l1877 0592                       l1789 03FF  
                     l1869 0587                       l1981 0242                       l1973 0221  
                     l1965 01F9                       l1957 01C9                       l1949 0144  
                     l1895 04FC                       l1879 0596                       l1799 0493  
                     l1991 0275                       l1983 024B                       l1975 0225  
                     l1967 0203                       l1959 01DF                       l1897 04FE  
                     l1889 04F0                       l1993 0281                       l1985 0257  
                     l1977 022D                       l1969 020D                       l1899 0502  
                     l1995 028A                       l1987 0260                       l1979 0236  
                     l1997 0296                       l1989 026C                       l1999 029F  
                     _ADIF 0066                       ?_isr 0070                       STR_1 0631  
                     STR_2 0628                       STR_3 0634                       STR_4 0628  
                     STR_5 0637                       STR_6 062D                       u1100 05FC  
                     u1101 05FB                       u1110 05E1                       u1111 05E0  
                     u1200 051F                       u1120 0596                       u1201 051E  
                     u1121 0595                       u1210 0529                       u1211 0528  
                     u1300 020D                       u1301 020C                       u1230 053C  
                     u1150 05B2                       u1310 0217                       u1231 053B  
                     u1215 0525                       u1151 05B1                       u1135 059F  
                     u1311 0216                       u1240 0541                       u1160 04F7  
                     u1320 0221                       u1241 0540                       u1225 0530  
                     u1161 04F6                       u1145 05A6                       u1321 0220  
             ?_LCD_display 0070                       u1170 0502                       u1090 05EA  
                     u1250 002C                       u1171 0501                       u1091 05E9  
                     u1251 002B                       u1180 050D                       u1260 01E5  
                     u1181 050C                       u1261 01E4                       u1270 01EF  
                     u1271 01EE                       u1280 01F9                       u1337 0499  
                     u1281 01F8                       u1290 0203                       u1195 0511  
                     u1347 04AA                       u1291 0202                       u1357 04BA  
                     u1367 04C8                       u1377 0649                       u1387 0619  
                     u1397 0660                       _POT1 0043                       _POT2 0042  
                     _TMR0 0001                       _TXIE 0464                       _TXIF 0064  
        ?_Lcd_Write_String 0070                       _flag 0079                       _cont 0040  
                     _main 001F                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 0622          ___bmul@multiplier 0076  
                    ??_ADC 0073                      ??_isr 0070                      ?_main 0070  
          __end_of___awdiv 0493            __end_of___awmod 054B                      _ANSEL 0188  
          ___awdiv@divisor 0022                      i1l132 0334                      i1l153 03BA  
                    i1l147 03B9            ___awdiv@counter 0026                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _USART 0666                      u91_20 02E6  
                    u91_21 02E5                      u92_20 02F3                      u92_21 02F2  
                    u93_20 02F8                      u93_21 02F7                      u94_20 0313  
                    u94_21 0312                      u95_20 031A                      u95_21 0319  
                    u96_20 0321                      u96_21 0320                      u97_20 032C  
                    u97_21 032B                      _TXREG 0019                      u98_20 0338  
                    u98_21 0337                      u99_20 033D                      u99_21 033C  
                    _setup 054B                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 04F0           __end_of_Lcd_Port 069E  
          __initialization 000F               __end_of_main 02E2                     ??_main 002A  
                   ?_USART 0070                     _ADRESH 001E           ___awdiv@dividend 0024  
                   ?_setup 0070                     _ANSELH 0189                     u100_20 0348  
                   u100_21 0347                     u101_20 0355                     u101_21 0354  
                   u102_20 0363                     u102_21 0362                     u103_20 0371  
                   u103_21 0370                     u104_20 037E                     u104_21 037D  
                   i1l1701 0366                     i1l1711 0381                     i1l1703 036B  
                   i1l1631 02E2                     u105_20 038C                     i1l1721 039C  
                   u105_21 038B                     i1l1713 0386                     i1l1705 0371  
                   i1l1641 02F8                     i1l1633 02E6                     i1l1731 03B5  
                   i1l1723 03A1                     i1l1715 038C                     i1l1707 0378  
                   i1l1651 0304                     i1l1643 02FC                     i1l1635 02EC  
                   i1l1733 03B7                     i1l1725 03A7                     i1l1717 0393  
                   i1l1709 037E                     i1l1661 0314                     i1l1653 0306  
                   i1l1645 02FD                     i1l1637 02ED                     i1l1727 03AA  
                   i1l1719 0399                     i1l1735 03B9                     i1l1671 0326  
                   i1l1663 031A                     i1l1655 030C                     i1l1647 02FF  
                   i1l1639 02F3                     u106_20 0399                     i1l1729 03AF  
                   u106_21 0398                     i1l1681 0338                     i1l1673 032C  
                   i1l1665 031B                     i1l1649 0303                     i1l1657 030F  
                   i1l1691 034F                     i1l1683 033D                     i1l1667 0321  
                   i1l1659 0313                     i1l1693 0355                     i1l1685 0340  
                   i1l1677 032F                     i1l1695 0358                     i1l1687 0343  
                   i1l1679 0334                     u107_20 03A7                     u107_21 03A6  
                   i1l1697 035D                     i1l1689 0348                     i1l1699 0363  
                   u108_20 03B5                     u108_21 03B4                     u140_27 0309  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   ___bmul 067B                     ___wmul 058E                  ??___awdiv 0077  
                ??___awmod 0077                     _flag_1 0078           ___awdiv@quotient 0028  
          ___awmod@divisor 0073            ___awmod@counter 0020                     saved_w 007E  
          Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077               _decenas_temp 0038  
  __end_of__initialization 001B       __size_of_LCD_display 0069        ___bmul@multiplicand 0073  
            __end_of_USART 067B             __pcstackCOMMON 0070              __end_of_setup 058E  
           _Lcd_Set_Cursor 05E2             _OPTION_REGbits 0081                    ??_USART 0073  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0078  
               __pbssBANK0 0034                 __pmaintext 001F       _display_decimal_2_s2 003A  
       _display_decimal_s2 003B                    ?___bmul 0073                    ?___wmul 0073  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0608  
               ??_Lcd_Init 0020                 ??_Lcd_Port 0073                 __stringtab 0622  
           _Lcd_Write_Char 063A                    _Lcd_Cmd 0608            __size_of___bmul 0015  
                  ___awdiv 042A                    ___awmod 04F0            __size_of___wmul 002B  
                  _decenas 0037            ?_Lcd_Set_Cursor 0077                    __ptext1 054B  
                  __ptext2 0666                    __ptext3 0493                    __ptext4 03C1  
                  __ptext5 05B9                    __ptext6 063A                    __ptext7 05E2  
                  __ptext8 0608                    __ptext9 0698               __size_of_ADC 0016  
             __size_of_isr 00DF           ___awmod@dividend 0075                    clrloop0 0691  
   __end_of_Lcd_Write_Char 0650       end_of_initialization 001B                  _RCSTAbits 0018  
                Lcd_Port@a 0073            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020                  _TXSTAbits 0098             __end_of___bmul 0690  
           __end_of___wmul 05B9           _Lcd_Write_String 05B9                _BAUDCTLbits 0187  
      start_initialization 000F                __end_of_ADC 0666                __end_of_isr 03C1  
            ??_LCD_display 0023          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0006  
                 ??___bmul 0074                   ??___wmul 0077            Lcd_Write_Char@a 0075  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070        __end_of_LCD_display 042A                  _main$1123 0032  
        _display_decimal_2 003D           ??_Lcd_Set_Cursor 0020                   ?___awdiv 0022  
                 ?___awmod 0073                  __pstrings 0622             __size_of_USART 0015  
           __size_of_setup 0043          interrupt_function 0004             ___wmul@product 0020  
                clear_ram0 0690                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                 _ADCON0bits 001F                __stringbase 0627  
               _ADCON1bits 009F          ___wmul@multiplier 0073          _display_unidad_s2 003C  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 0493                   _Lcd_Port 0698  
              _LCD_display 03C1   __end_of_Lcd_Write_String 05E2           __size_of_Lcd_Cmd 001A  
         __size_of___awdiv 0069           __size_of___awmod 005B         __end_of__stringtab 0628  
                 _centenas 0039                   __ptext10 0650                   __ptext11 058E  
                 __ptext12 067B                   __ptext13 04F0                   __ptext14 042A  
                 __ptext15 02E2                   _contador 0041              __size_of_main 02C3  
                 _var_temp 007A                   _unidades 0036                 _INTCONbits 000B  
                 intlevel1 0000            _display_decimal 003E                  stringcode 0622  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0022                   stringdir 0622  
                 stringtab 0622             _display_unidad 003F  
